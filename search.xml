<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>2015年考研英语（完形填空）</title>
    <url>/2020/06/27/2015%E5%B9%B4%E8%80%83%E7%A0%94%E8%8B%B1%E8%AF%AD%EF%BC%88%E5%AE%8C%E5%BD%A2%E5%A1%AB%E7%A9%BA%EF%BC%89/</url>
    <content><![CDATA[<p>We have more <strong>genes</strong> in common with people we pick to be our friends than with strangers.</p>
<p>Though not biologically related, friends are as related as fourth cousins, sharing about 1% of genes. That is 1<u>what</u> a study published from the University of California and Yale University in the <strong>Proceedings</strong> of the National <strong>Academy</strong> of Sciences, has 2 <u>concluded</u>.</p>
<p>The study is a <strong>genome</strong>-wide analysis <strong>conducted</strong> 3<u>on</u> 1932 unique subjects which 4pairs of unrelated friends and unrelated strangers. The same people were used in both 5<u>samples</u> .While 1% may seem 6<u><strong>insignificant</strong></u> , it is not so to a <strong>geneticist</strong>. As James Fowler, professor of medical genetics at UC San Diego, says, Most people do not even 7<u>know</u> their fourth cousins but <strong>somehow</strong> manage to select as friends the people who 8resemble our <strong>kin</strong>.</p>
<p>The study 9<u>also</u> found that the genes for smell were something shared in friends but not genes for <strong>immunity</strong>. Why this similarity in <strong>olfactory</strong> genes is difficult to explain, for now. 10<u>Perhaps</u>, as the team suggests, it draws us to similar environments but there is more 11<u>to</u> it. There could be many mechanisms working in <strong>tandem</strong> that 12<u>drive</u> us in choosing genetically similar friends 13<u>rather than</u>  “functional <strong>kinship</strong>“ of being friends with 14<u>benefits</u>!One of the <strong>remarkable</strong> findings of the study was that the similar genes seem to be evolving 15<u>faster</u> than other genes. Studying this could help 16<u>understand</u> why human <strong>evolution</strong> picked pace in the last 30,000 years, with social environment being a major 17<u>contributory</u> factor.</p>
<p>The findings do not simply <strong>corroborate</strong> peoples 18<u>tendency</u> to befriend those of similar 19<u>ethnic</u> backgrounds, say the researchers. Though all the subjects were drawn from a population of European <strong>extraction</strong>, care was taken to 20<u>see</u> that all subjects, friends and strangers were taken from the same population. The team also controlled the data to check <strong>ancestry</strong> of subjects.</p>
<ol>
<li><p>[A] when [B] why [C] how [D] <u><strong>what</strong></u></p>
</li>
<li><p>[A] defended [B] <strong><u>concluded</u></strong> [C] withdrawn [D] advised</p>
</li>
<li><p>[A] for [B] with [C] <u><strong>on</strong></u> [D] by</p>
</li>
<li><p>[A] <u><strong>compared</strong></u> [B] sought [C] separated [D] connected</p>
</li>
<li><p>[A] tests [B] objects [C]<u><strong>samples</strong></u> [D] examples</p>
</li>
<li><p>[A] <u><strong>insignificant</strong></u> [B] unexpected [C]unbelievable [D] incredible</p>
</li>
<li><p>[A] visit [B] miss [C] seek [D] <u><strong>know</strong></u></p>
</li>
<li><p>[A] <u><strong>resemble</strong></u> [B] influence [C] favor [D] surpass</p>
</li>
<li><p>[A] again [B] <u><strong>also</strong></u> [C] instead [D] thus</p>
</li>
<li><p>[A] Meanwhile [B] Furthermore [C] Likewise [D] <u><strong>Perhaps</strong></u></p>
</li>
<li><p>[A] about [B] <u><strong>to</strong></u> [C]from [D]like</p>
</li>
<li><p>[A] <u><strong>drive</strong></u> [B] observe [C] confuse [D]limit</p>
</li>
<li><p>[A] according to [B] <u><strong>rather than</strong></u> [C] regardless of [D] along with</p>
</li>
<li><p>[A] chances [B]responses [C]missions [D]<u><strong>benefits</strong></u></p>
</li>
<li><p>[A] later [B]slower [C] <u><strong>faster</strong></u> [D] earlier</p>
</li>
<li><p>[A]forecast [B]remember [C]<u><strong>understand</strong></u> [D]express</p>
</li>
<li><p>[A] unpredictable [B]<u><strong>contributory</strong></u> [C] controllable [D] disruptive</p>
</li>
<li><p>[A] endeavor [B]decision [C]arrangement [D] <u><strong>tendency</strong></u></p>
</li>
<li><p>[A] political [B] religious [C] <u><strong>ethnic</strong></u> [D] economic</p>
</li>
<li><p>[A] <u><strong>see</strong></u> [B] show [C] prove [D] tell</p>
</li>
</ol>
<h3 id="长难句解析"><a href="#长难句解析" class="headerlink" title="长难句解析"></a>长难句解析</h3><p>【典型例句1】：Though not biologically related, friends are as “related” as fourth cousins, sharing about 1% of genes.<br>【例句解析】：本句是一个简单句，主干是friends are as “related” as fourth cousins，是一个同级比较结构，as…as…意为“和……一样……”。Though not biologically related是一个分词短语做状语的情况，包含省略，完整的句子应该是Though friends are not biologically related(主从句的主语一致)，和主干构成转折关系。sharing about 1% of genes是分词短语做结果状语。【例句释义】：虽然从生物学角度而言，朋友之间并没有亲属关系，但是朋友之间的相关性却如同和第四代的堂兄弟姐妹一样紧密，共有大约1%的基因。</p>
<p>【典型例句2：】That is what a study published from the University of California and Yale University in the Proceedings of the National Academy of Sciences, has concluded.</p>
<p>【例句解析】：这句话的主干是That is what a study has concluded，published from the University of California and Yale University in the Proceedings of the National Academy of Sciences是后置定语修饰study，翻译是应当独立成句。</p>
<p>【难句点拨】：这句话的难点在于误把published作为谓语动词，而不能理解has concluded语法作用。需要明确的是动词的-ed形式既可以看作过去式，用做句子的谓语动词，也可以看作过去分词形式，做非谓语成分。而has concluded形式却只能做谓语。<br>【例句释义】：这是一项研究的结论，它发表在《美国科学院会刊》上，是来自加利福尼亚和耶鲁大学的研究结果。</p>
<p>【典型例句3】：Most people do not even know their fourth cousins but somehow manage to select as friends the people who resemble our kin.<br>【例句解析】：这句话的主干是Most people do not even know their fourth cousins but somehow manage to select as friends the people，是由but并列谓语部分;who resemble our kin是定语从句修饰people。but之前是主谓宾的简单句结构，but之后是manage to do sth.(设法做成某事)，其中的select as friends the people who resemble our kin包含宾语后置，即原句是select the people who resemble our kin as friends，即select A as B的结构。由于A部分有定语从句修饰，头重脚轻，所以把整体“先行词+定语从句”整体移到句末。</p>
<p>【例句释义】：大多数人甚至并不认识他们的第四代堂兄弟姐妹，但是某种程度上，却成功地选择了那些像我们亲戚的人们作为朋友。<br>【典型例句4】：The study also found that the genes for smell were something shared in friends but not genes for immunity.</p>
<p>【例句解析】：这句的主干是The study also found that…，that引导一个宾语从句。宾从中包含一个省略，完整的句子应该是the genes for smell were something shared in friends but genes for immunity (were not something shared in friends)。<br>【例句释义】：研究也表明：嗅觉基因是朋友间共有的东西，而免疫基因则不是朋友间共有的。</p>
<p>【典型例句5】：There could be many mechanisms working in tandem that drive us in choosing genetically similar friends rather than “functional kinship” of being friends with benefits!<br>【例句解析】此句的主干是There be句型，There could be many mechanisms。working in tandem是定语，修饰mechanisms;that引导定语从句，修饰mechanisms。<br>【例句释义】：在选择基因上相似的朋友方面，而不是选择存在相互利益的“功能亲属”成为朋友方面，可能存在许多相互连接的机制，这些机制对我们有驱动作用。</p>
<p>在完形填空这一题型中，as的考察形式比较固定，主要为以下几种：连词、关系代词和介词。接下来我们一起来学习as作为连词这一用法。</p>
<h3 id="考研英语完形填空：“妖娆多姿”的as"><a href="#考研英语完形填空：“妖娆多姿”的as" class="headerlink" title="考研英语完形填空：“妖娆多姿”的as"></a>考研英语完形填空：“妖娆多姿”的as</h3><p>as作为连词，可以引导的从句类型很多，但是在考研英语完形填空中则主要考察其引导时间状语从句和表示比较的用法。</p>
<p><strong>1. as作连词，表示比较</strong></p>
<p>完形填空中，as引导比较状语从句时，通常以 as…as的形式出现，意为”和……一样”，表示同级的比较。但需注意，两个as不都是连词，第一个as为副词，第二个as才为连词。</p>
<p>其基本结构为：as+ adj./ adv. +as。例如：</p>
<p>This film is as interesting as that one.这部电影和那部电影一样有趣。</p>
<p>其否定结构为not as/so +adj./ adv. +as。例如：</p>
<p>This dictionary is not as/so useful as you think.这本字典不如你想象的那样有用。</p>
<p>若有修饰成分，如twice, three times, half, a quarter等，则须置于第一个as之前。例如：</p>
<p>Your bag is twice as expensive as mine.你的袋子比我的贵一倍。</p>
<p>接下来我们一起来学习一下考研英语真题中的相关例句。Though not biologically related, friends are as “related” as fourth cousins, sharing about 1% of genes.(2015年完形填空)</p>
<p>翻译：尽管没有血缘上的亲属关系，但是朋友间却情同第四代表兄，他们的基因中有1%是相同的。</p>
<p><strong>2. as引导时间状语从句</strong></p>
<p>as引导时间状语从句时，含义是“当……的时候，随着”。主句和从句的动作同时发生，具有延续的含义。例如：</p>
<p>You will grow wiser as you grow older.你会随着年龄的增长而越来越聪明。</p>
<p>接下来我们一起来学习一下考研英语真题中的相关例句。</p>
<p>As many people hit middle age, they often start to notice that their memory and mental clarity are not what they used to be.(2014年完形填空)</p>
<p>翻译：随着很多人步入中年，他们会发现，自己的记忆力和头脑的清晰度都大不如从前。</p>
<table>
<thead>
<tr>
<th>序号</th>
<th>单词</th>
<th>汉语意思</th>
</tr>
</thead>
<tbody><tr>
<td>1</td>
<td>genes</td>
<td>n. [遗] 基因（gene的复数形式）</td>
</tr>
<tr>
<td>2</td>
<td>proceed</td>
<td>vi. 开始；继续进行；发生；行进   n. 收入，获利</td>
</tr>
<tr>
<td>3</td>
<td>academy</td>
<td>n. 学院；研究院；学会；专科院校</td>
</tr>
<tr>
<td>4</td>
<td>genome</td>
<td>n. 基因组；染色体组</td>
</tr>
<tr>
<td>5</td>
<td>conduct</td>
<td>v.  组织，实施，进行；指挥（音乐）；带领，引导；举止，表现；传导（热或电）   n. 行为举止；管理（方式），实施（办法）；引导</td>
</tr>
<tr>
<td>6</td>
<td>insignificant</td>
<td>adj. 无关紧要的</td>
</tr>
<tr>
<td>7</td>
<td>geneticist</td>
<td>n. 遗传学者</td>
</tr>
<tr>
<td>8</td>
<td>somehow</td>
<td>adv. 以某种方法；莫名其妙地</td>
</tr>
<tr>
<td>9</td>
<td>kin</td>
<td>n. 亲戚；家族；同族   adj. 同类的；有亲属关系的；性质类似的</td>
</tr>
<tr>
<td>10</td>
<td>immunity</td>
<td>n. 免疫力；豁免权；免除</td>
</tr>
<tr>
<td>11</td>
<td>olfactory</td>
<td>n. 嗅觉器官   adj. 嗅觉的；味道的</td>
</tr>
<tr>
<td>12</td>
<td>tandem</td>
<td>n. 双人自行车；串联工作组   adj. 纵列的   adv. 二马（或多马）纵列的；协同地</td>
</tr>
<tr>
<td>13</td>
<td>kinship</td>
<td>n. [法] 亲属关系，家属关系；亲密关系</td>
</tr>
<tr>
<td>14</td>
<td>remarkable</td>
<td>adj. 卓越的；非凡的；值得注意的</td>
</tr>
<tr>
<td>15</td>
<td>evolution</td>
<td>n. 演变；进化论；进展</td>
</tr>
<tr>
<td>16</td>
<td>corroborate</td>
<td>vt. 证实；使坚固</td>
</tr>
<tr>
<td>17</td>
<td>extraction</td>
<td>n. 取出；抽出；拔出；抽出物；出身</td>
</tr>
<tr>
<td>18</td>
<td>ancestry</td>
<td>n. 祖先；血统</td>
</tr>
<tr>
<td>19</td>
<td>defend</td>
<td>vi. 保卫；防守   vt. 辩护；防护</td>
</tr>
<tr>
<td>20</td>
<td>seek</td>
<td>vt. 寻求；寻找；探索；搜索   vi. 寻找；探索；搜索</td>
</tr>
<tr>
<td>21</td>
<td>sought</td>
<td>v. 寻找（seek的过去式和过去分词）</td>
</tr>
<tr>
<td>22</td>
<td>sample</td>
<td>v.  品尝，体验；抽样检验；节录（某一曲子，用于新乐曲中）   adj. 样品的，作为例子的   n. 样品，样本；（化验的）抽样；（用于新乐曲中的）节录乐曲；确定（模拟信号）瞬时值</td>
</tr>
<tr>
<td>23</td>
<td>resemble</td>
<td>vt. 类似，像</td>
</tr>
<tr>
<td>24</td>
<td>surpass</td>
<td>vt. 超越；胜过，优于；非…所能办到或理解</td>
</tr>
<tr>
<td>25</td>
<td>meanwhile</td>
<td>n. 其间，其时   adv. 同时，其间</td>
</tr>
<tr>
<td>26</td>
<td>furthermore</td>
<td>adv. 此外；而且</td>
</tr>
<tr>
<td>27</td>
<td>likewise</td>
<td>adv. 同样地；也</td>
</tr>
<tr>
<td>28</td>
<td>confuse</td>
<td>vt. 使混乱；使困惑</td>
</tr>
<tr>
<td>29</td>
<td>regardless of</td>
<td>不顾，不管</td>
</tr>
<tr>
<td>30</td>
<td>along with</td>
<td>沿（顺）着；连同……一起；与……一道；除了……</td>
</tr>
<tr>
<td>31</td>
<td>mission</td>
<td>n. 使命，任务；代表团；布道   vt. 派遣；向……传教</td>
</tr>
<tr>
<td>32</td>
<td>forecast</td>
<td>n. （天气、财经等的）预测，预报；预想   v. 预报，预测；预示；预言；进行预报，作预测</td>
</tr>
<tr>
<td>33</td>
<td>unpredictable</td>
<td>n. 不可预言的事   adj. 不可预知的；不定的；出乎意料的</td>
</tr>
<tr>
<td>34</td>
<td>contributory</td>
<td>n. 捐助者；贡献人   adj. 捐助的；贡献的；有助于…的</td>
</tr>
<tr>
<td>35</td>
<td>disruptive</td>
<td>adj. 破坏的；分裂性的；制造混乱的</td>
</tr>
<tr>
<td>36</td>
<td>endeavor</td>
<td>n. 努力；尽力（等于endeavour）   vi. 努力；尽力（等于endeavour）   vt. 努力；尽力（等于endeavour）</td>
</tr>
<tr>
<td>37</td>
<td>decision</td>
<td>n. 决定，决心；决议</td>
</tr>
<tr>
<td>38</td>
<td>tendency</td>
<td>n. 倾向，趋势；癖好</td>
</tr>
<tr>
<td>39</td>
<td>religious</td>
<td>n. 修道士；尼姑   adj. 宗教的；虔诚的；严谨的；修道的</td>
</tr>
<tr>
<td>40</td>
<td>ethnic</td>
<td>adj. 种族的；人种的</td>
</tr>
<tr>
<td>41</td>
<td>envolve</td>
<td>vt. 发展；进化；使逐步形成；推断出   vi. 发展，进展；进化；逐步形成</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>考研英语</category>
      </categories>
      <tags>
        <tag>考研英语</tag>
        <tag>完形填空</tag>
        <tag>考研英语一</tag>
      </tags>
  </entry>
  <entry>
    <title>2009年考研英语（完形填空）</title>
    <url>/2020/06/25/2009%E5%B9%B4%E8%80%83%E7%A0%94%E8%8B%B1%E8%AF%AD%EF%BC%88%E5%AE%8C%E5%BD%A2%E5%A1%AB%E7%A9%BA%EF%BC%89/</url>
    <content><![CDATA[<p>Research on animal intelligence always makes me wonder just how smart humans are. 1 the fruit-fly experiments described in Carl Zimmer’s piece in the Science Times on Tuesday. Fruit flies who were taught to be smarter than the <strong>average</strong> fruit fly 2 to live shorter lives. This suggests that 3 <strong>bulbs</strong> burn longer, that there is an 4 in not being too <strong>terrifically</strong> bright.</p>
<p>　　Intelligence, it 5 , is a <strong>high-priced</strong> option. It takes more <strong>upkeep</strong>, burns more <strong>fuel</strong> and is slow 6 the starting line because it depends on learning-a 7 process-instead of <strong>instinct</strong>. Plenty of other species are able to learn, and one of the things they’ve <strong>apparently</strong> learned is when to 8 .</p>
<p>　　Is there an <strong>adaptive</strong> value to 9 intelligence? That’s the question behind this new research. I like it. Instead of <strong>casting</strong> a <em>wistful</em> <strong>glance</strong> 10 <strong>at</strong> all the species we’ve left in the dust I.Q.-wise, it <strong>implicitly</strong> asks what the real 11 of our own intelligence might be. This is 12 the mind of every animal I’ve ever met.</p>
<p>　　Research on animal intelligence also makes me wonder what <strong>experiments</strong> animals would 13 <strong>on</strong> humans if they had the chance. Every cat with an owner, 14 , is running a <strong>smallscale</strong> study in operant conditioning. We believe that 15 animals ran the labs, they would test us to 16 the limits of our <strong>patience</strong>, our <strong>faithfulness</strong>, our <strong>memory</strong> for terrain. They would try to <strong>decide</strong> what intelligence in humans is really 17 , not merely how much of it there is. 18 , they would hope to study a 19 question: <em>Are</em> humans actually <em>aware of</em> the world they live in? 20 the results are <strong>inconclusive</strong>.</p>
<p>　　1. [A] Suppose[B] <strong>Consider</strong>[C] Observe[D] Imagine</p>
<p>　　2. [A] <strong>tended</strong>[B] feared[C] happened[D] threatened</p>
<p>　　3. [A] thinner[B] stabler[C] lighter[D] <strong>dimmer</strong></p>
<p>　　4. [A] tendency[B] <strong>advantage</strong>[C] inclination[D] priority</p>
<p>　　5. [A] insists on[B] sums up[C] <strong>turns out</strong>[D] puts forward</p>
<p>　　6. [A] <strong>off</strong>[B] behind[C] over[D] along</p>
<p>　　7. [A] incredible[B] spontaneous[C]inevitable[D] <strong>gradual</strong></p>
<p>　　8. [A] fight[B] doubt[C] <strong>stop</strong>[D] think</p>
<p>　　9. [A] invisible[B] <strong>limited</strong>[C] indefinite[D] different</p>
<p>　　10. [A] upward[B] forward[C] afterward[D] <strong>backward</strong></p>
<p>　　11. [A] features[B] influences[C] results[D] <strong>costs</strong></p>
<p>　　12. [A] outside[B] <strong>on</strong>[C] by[D] across</p>
<p>　　13. [A] deliver[B] carry[C] <strong>perform</strong>[D] apply</p>
<p>　　14. [A] by chance[B] in contrast[C] as usual[D] <strong>for instance</strong></p>
<p>　　15. [A] <strong>if</strong>[B] unless[C] as[D] lest</p>
<p>　　16. [A] moderate[B] overcome[C] <strong>determine</strong>[D] reach</p>
<p>　　17. [A] at[B] <strong>for</strong>[C] after[D] with</p>
<p>　　18. [A] <strong>Above all</strong>[B] After all[C] However[D] Otherwise</p>
<p>　　19. [A] <strong>fundamental</strong>[B] comprehensive[C] equivalent[D] hostile</p>
<p>​        20.[A] By accident[B] In time[C] <strong>So far</strong>[D] Better still</p>
<h3 id="参考译文"><a href="#参考译文" class="headerlink" title="参考译文"></a>参考译文</h3><p>　　对动物智力的研究总是让我们思考人类到底有多聪明。让我们看一下卡尔·齐默周二发表在科学时代刊物上的文章所描述的果蝇试验。有些果蝇经过训练变得比普通果蝇聪明，但是寿命却缩短了。这表明暗淡的灯泡使用时间更长，暗淡是灯泡的一个优势。</p>
<p>　　事实证明，智力是要付出昂贵的代价。它需要更多的保养、消耗更多的燃料，因为智力依靠的是学习，这是一个循序渐进的过程，而不是一种本能，所以离开起点时进展缓慢。许多其他的物种也有学习能力，很显然他们学到的东西之一就是知道何时停止。</p>
<p>　　有限的智力是否有适应值呢?这也是此项研究的课题。我对此很感兴趣。这个试验不是去回顾那些被我们划为低智商的物种，而是含蓄在问我们自己，智力的真正代价是什么。我们所遇到的每种动物也都在思考着个问题。</p>
<p>　　对动物智力的研究也让我想，如果动物有机会的话，他们会对人类作什么样的实验。比如说，每只有主人的猫都在进行一个小型的操作性条件反射研究。我们认为如果动物也能进行试验的话，他们会测定我们的忍耐度，忠诚度，以及对地形的记忆力。他们会试图判定人类智力的实际用处，而不仅仅是判定人类智力的高低。最重要的是他们希望研究一个最基本的问题：人类是否真正意识到了自己所生存的世界?对此，目前仍无定论。</p>
<p>　　文章背景</p>
<p>　　本文是一篇讲述动物智能、偏重科技的文章。此文章最先刊登在2008年5月7日的《纽约时报》上，原文的标题是 The Cost of Smarts，翻译过来是”聪明的代价”。文中通过对”果蝇”的试验研究得出”聪明是要付出代价”的结论，最后提出引人深思的问题–人类是否真正意识到自己所生存的世界。</p>
<p>　　文章结构</p>
<p>　　本文采用了对比的方式展开文章，叙述了人类智慧发展的代价。第一二三段围绕人类对动物智能的研究对动物以及人类自己造成的影响。文章的最后一段作者展开丰富的联想，如果动物对人类做实验的话，它们想从人类身上获取什么信息呢?</p>
<h3 id="答案详解"><a href="#答案详解" class="headerlink" title="　　答案详解"></a>　　答案详解</h3><p>　　1.【解析】[B] 语义衔接/词汇辨析题。本题目选择动词，放在祈使句句首。选项A. suppose认为，假定;B. consider考虑;C. observe 观察;D. imagine 想象。文章开篇指出：Research on animal intelligence always makes us wonder just how smart humans are.”对动物智慧的研究总是让我对人类到底有多聪明感到好奇”，接着举了果蝇的例子，该句要选择的动词应与上句在语义上衔接。用consider意为”让读者考虑一下(果蝇实验)”，从而引出下文，其他选项均不符合题意。</p>
<p>　　2.【解析】[A] 语义衔接/固定搭配题。本题目选择动词(过去式)，与介词”to”构成动词短语，在句子中充当谓语。选项A. tended to易于，往往会……;B. feared to 害怕做某事;C. happened to 碰巧做某事;D. threatened to 威胁要做某事。Fruit flies who were taught to be smarter than the average fruit flyto live shorter lives. 原文讲述的是在实验中经常发生的一种情况，即”通过训练变得更聪明的果蝇，其寿命往往比普通果蝇短”。故选A。</p>
<p>　　3.【解析】[D] 语义衔接/词汇辨析题。本题目选择形容词比较级，在句中作定语修饰bulbs。This suggests thatbulbs burn longer, …”这让人想起……的灯泡照明时间比较长……。”上句讲到”聪明的果蝇寿命往往较短”，这句接着用灯泡作类比，承接上句语义，应该是越不亮的灯泡用的时间越长，所以选D. dimmer 较暗的;选项C. lighter更亮的，与前文意思相悖; A. thinner 更薄的，更瘦的;B. stable 更稳定的;该两项均不符合题意。</p>
<p>　　4.【解析】[B] 词汇辨析/固定搭配题。本题目选择名词，并与in搭配。选项A. tendency 趋势，倾向，后面常接介词for或动词不定式，如：a tendency for sth.或a tendency to do sth.(做)某事的倾向;B. advantage 优势，后常接介词in，即an advantage in sth. 在某方面具有优势;C. inclination倾向，意愿，倾斜度，后常接介词for或动词不定式，即an inclination for sth.或an inclination to do sth.想做某事;D. priority 优先权，后常接over，如：take priority over sth./sb. (比某事/某人)具有优先权。且从上下文语义来看，前面说聪明的果蝇寿命短，越不亮的灯泡用的时间越长，所以这里语义应为”不太聪明(灯泡不太亮)是有优势的”，故B为正确选项。注意，bright在此处是一语双关，既可表示”灯泡不那么亮”，也可表示”人不那么聪明”。</p>
<p>　　5.【解析】[C] 语义衔接/词汇辨析题。本题目要选择动词短语，使插入语完整。从上文可知，”聪明的果蝇寿命往往较短”，以及”不太聪明是有优势的”，由此推出的结果是：聪明也是要付出代价的。C. turn out意为”结果是……”，把it turns out用作插入语，使该句与上段内容紧紧联系起来，因此选C。A. insist on坚持;B. sum up总计，总结;D. put forward提出。这三项均不符合题意。</p>
<p>　　6.【解析】[A] 语义衔接题。本题目选择介词，体现与the starting line(起跑线)的逻辑关系。选项B. behind和C. over可以首先排除，因为这里没有涉及空间位置关系;若选D. along则是”沿着起跑线徘徊”之意，这与后面的process意思不符;选项A. off 有”离开”之意，slow off the starting line表示”离开起跑线慢了”，即”起步慢了”，但仍在进步，与后文逻辑一致，故选A。</p>
<p>　　7.【解析】[D] 语义衔接/词汇辨析题。本题目选择形容词，做process的定语。破折号表示对前面内容即learning的解释。这里把learning(学习)与instinct(本能)作对比，结合前文的slow，以及学习自身的特点可知，只有gradual”渐进的” 符合题意。其他三项A. incredible 难以置信的;B. spontaneous 自发的;C. inevitable 不可避免的;均不符合题意，故本题答案为D。</p>
<p>　　8. 【解析】[C] 语义衔接/词汇辨析题。Plenty of other species are able to learn, and one of the things they’ve apparently learned is when to.”许多其他物种都能够学习，它们显然已经学会的一件事就是什么时候……学习。”由上文可知，聪明需要学习，很多物种都能够学习，但都没有变聪明，这是因为它们还学会了适时停止学习。因此选C。其他三项在语义上均不通。</p>
<p>　　9. 【解析】[B] 语义衔接/词汇辨析题。本题目选择形容词，作定语修饰intelligence。由上文可知，智慧越多，付出的代价越多，因此智慧肯定是有限的，而且根据value也可以推断这里是关于intelligence多少的问题。选项A.invisible 看不见的;C. indefinite 不确定的;D. different 不同的;均与数量多少无关，只有limited”有限的，不多的”符合题意，故选B。</p>
<p>　　10. 【解析】[D] 语义衔接/词汇辨析题。本题目选择副词以表明逻辑关系。”we’ve left in the dust I.Q.wise”是定语从句，修饰the species。cast a glance at…意为”对……投以目光”;”leave sb. in the dust”是固定搭配，”将某人远远抛在后面”的意思;I.Q.wise是派生词，后缀wise表示方式，意为”在I.Q.方面”。这句话是说”该研究不是要我们对那些在智力方面已被人类远远抛在后面的物种投以悲怜的眼光。”人类看这些被抛在后面的物种，自然是往后看了，所以D. backward为正确选项，A. upward向上;B. forward向前;C. afterward 之后，后来(表时间);该三项均不符合题意。</p>
<p>　　11.【解析】[D] 语义衔接/词义辨析题。本题目选择名词，做宾语从句的主语。…it implicitly asks what the realof our own intelligence might be. “这项实验含蓄地提出一个问题：人类智慧的真正……可能是什么。”前文已经提到Intelligence…is a highpriced option，因此应选D.costs。选项A.features 特征;B.influences 影响;C.results 结果，均不符合题意。</p>
<p>　　12.【解析】[B] 固定搭配题。本题目选择介词，与mind搭配。on one’s mind或on the mind of sb. 是固定短语，意为”有心事，总是想着”，其他三项均不能与mind构成固定搭配。</p>
<p>　　13.【解析】[C] 固定搭配题。本题目选择动词，作为wonder引导的宾语从句的谓语。选择的动词应与experiments搭配。选项A. deliver 递送;D. apply 应用;两者均不能与experiments搭配。若用carry，则为carry out experiments，故只能选C. perform 执行，perform experiments意为”做实验”。</p>
<p>　　14. 【解析】[D] 词汇辨析题。本题目选择介词短语在句中做插入语，表明逻辑关系。前文已经讲到作者很好奇，如果动物有机会的话，会对人类进行何种实验。本句接着说Every cat with an owner,, is running a smallscale study in operant conditioning.”每一只有主人的猫都在进行一项有关操作性条件反射的小规模研究。”这是以cat为例进一步论述动物对人进行实验，因此应选择表示举例的介词短语，故选D. for instance 例如。选项A. by chance 偶然;B. in contrast与……相比;C. as usual像往常一样;均不符合题意。</p>
<p>　　15.【解析】[A] 逻辑衔接题。本题目选择连词，体现句子之间的逻辑关系。由ran，would可知，本句使用了虚拟语气，是对动物可能对人类进行实验进行了假设，故选A。选项B. unless 除非;C. as因为;D lest 唯恐，均不符合题意。</p>
<p>　　16.【解析】[C] 语义衔接/词汇辨析题。本题目选择动词，与limits搭配，作为test的目的。选项A. moderate 缓和;B. overcome克服;D. reach 达到。既然作为测试的目的，应为确定某些内容，故选C. determine,这里是”查明，测定”的意思。</p>
<p>　　17.【解析】[B] 语义衔接/词义辨析题。本题目选择介词，体现逻辑关系。该句承接上一句，继续论述假设动物对人类进行实验的内容。选项A. at表示方位; C. after表示时间;D. with表示伴随，均不符合语义，只有B. for表示目的，构成what…for符合语境，表明动物们想了解人类智慧是用来干什么的。</p>
<p>　　18.【解析】[A] 逻辑衔接题。本题目选择逻辑关系词，体现前后句子之间的逻辑关系。前面两句解释了假设动物对人类进行实验会进行的的内容：它们想了解人类的某些极限，想知道人类智慧的用途。本句与前两句构成并列排比，they would hope to study aquestion”它们希望研究一个问题”，与前两句应为顺承关系，表示强调或递进，所以B. After all毕竟;C. However但是;D. Otherwise 否则;三者均不符合题意，只有Above all”首先，尤其是”符合题意。</p>
<p>　　19.【解析】[A] 语义衔接/词汇辨析题。本题目选择形容词，作定语修饰question。选项A. fundamental基本的;B. comprehensive 综合的;C. equivalent 相等的;D. hostile 敌对的。由下文可知，这个question是Are humans actually aware of the world they live in? “人类是否真正了解他们生活的这个世界?”这应该是个最基本的问题，故选A。</p>
<p>　　20. 【解析】[C] 逻辑衔接/词汇辨析题。本题目选择短语体现与前面句子的逻辑关系。前面句子提出一个问题，本句讲the results are inconclusive(……结果是不确定的)。因此， 选项C. so far”迄今为止”最符合题意，A. By accident偶然;B In time 及时;D. Better still更好;三者都不符合语义。</p>
<table>
<thead>
<tr>
<th>序号</th>
<th>单词</th>
<th>汉语意思</th>
</tr>
</thead>
<tbody><tr>
<td>1</td>
<td>wonder</td>
<td>v. 想知道；（用于询问时）不知道；感到疑惑；感到诧异；感到惊叹</td>
</tr>
<tr>
<td>2</td>
<td>fruit fly</td>
<td>果蝇</td>
</tr>
<tr>
<td>3</td>
<td>bulb</td>
<td>n. 电灯泡；鳞茎；球状物 vi. 生球茎；膨胀成球状</td>
</tr>
<tr>
<td>4</td>
<td>determine</td>
<td>v. （使）下决心，（使）做出决定 vt. 决定，确定；判定，判决；限定 <br />vi. 确定；决定；判决，终止；[主用于法律]了结，终止，结束</td>
</tr>
<tr>
<td>5</td>
<td>hostile</td>
<td>n. 敌对 adj. 敌对的，敌方的；怀敌意的</td>
</tr>
<tr>
<td>6</td>
<td>average</td>
<td>n. 平均；平均数；（海损的）平均分担；平均水平；（按保单规定应付赔偿额的）降减<br />adj. 平均（数）的；普通的；典型的；平庸的；中等的，适中的 <br />v. 算出……的平均数；将……平均分配；使……平衡；平均为，平均达到；呈中间色；（行情下跌时）买进更多的证券（或商品）以降低平均进价</td>
</tr>
<tr>
<td>7</td>
<td>terrifically</td>
<td>adv. 极端地；可怕地；非常地</td>
</tr>
<tr>
<td>8</td>
<td>high-priced</td>
<td>adj. 高价的；昂贵的</td>
</tr>
<tr>
<td>9</td>
<td>upkeep</td>
<td>n. 维持；维修费；保养</td>
</tr>
<tr>
<td>10</td>
<td>fuel</td>
<td>n. 燃料；刺激因素；（为身体提供能量的）食物<br /> vt. 给……提供燃料；刺激，煽动；推动</td>
</tr>
<tr>
<td>11</td>
<td>instinct</td>
<td>n. 本能，直觉；天性 <br />adj. 充满着的</td>
</tr>
<tr>
<td>12</td>
<td>adaptive</td>
<td>adj. 适应的，适合的</td>
</tr>
<tr>
<td>13</td>
<td>implicitly</td>
<td>[im’plisitli] adv. 含蓄地；暗中地</td>
</tr>
<tr>
<td>14</td>
<td>smallscale</td>
<td>adj. 小规模的</td>
</tr>
<tr>
<td>15</td>
<td>patience</td>
<td>n. 耐性，耐心；忍耐，容忍</td>
</tr>
<tr>
<td>16</td>
<td>faithfulness</td>
<td>n. 忠诚；诚实；正确</td>
</tr>
<tr>
<td>17</td>
<td>inconclusive</td>
<td>adj. 不确定的；非决定性的；无结果的</td>
</tr>
</tbody></table>
<h3 id="固定搭配"><a href="#固定搭配" class="headerlink" title="固定搭配"></a>固定搭配</h3><p>1.consider + sth = take … as an example 以什么为例的高级表达</p>
<p>2.tend to do 往往…，倾向于…</p>
<p>3.there is an advantage in doing sth. 作某事有什么好处</p>
<p>4.it turns out 事实表明，结果表明，结果是，最后是，结局是</p>
<p>5.plenty of 许多</p>
<p>6.cast a glance at 撇了什么一眼，对……投以目光</p>
<p>7.be on the mind of sb. 在…的心上，在…的脑海中</p>
<p>8.perform experiments on sb./sth.在…上做实验</p>
<p>9.a <strong>fundamental</strong> question 一个基本问题，一个根本问题</p>
]]></content>
      <categories>
        <category>考研英语</category>
      </categories>
      <tags>
        <tag>考研英语</tag>
        <tag>完形填空</tag>
        <tag>考研英语一</tag>
      </tags>
  </entry>
  <entry>
    <title>18个Linux Shell脚本经典案例</title>
    <url>/2020/06/23/18%E4%B8%AALinux-Shell%E8%84%9A%E6%9C%AC%E7%BB%8F%E5%85%B8%E6%A1%88%E4%BE%8B/</url>
    <content><![CDATA[<p>一、服务器系统配置初始化</p>
<p>背景：新购买10台服务器并已安装Linux操作</p>
<p>需求：</p>
<p>1）设置时区并同步时间</p>
<p>2）禁用selinux</p>
<p>3）清空防火墙默认策略</p>
<p>4）历史命令显示操作时间</p>
<p>5）禁用root远程登录</p>
<p>6）禁止定时任务发送邮件</p>
<p>7）设置最大打开文件数</p>
<p>8）减少Swap使用</p>
<p>9）系统内核参数优化</p>
<p>10）安装系统性能分析工具及其他</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># 设置时区并同步时间</span></span><br><span class="line">ln -s /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</span><br><span class="line"><span class="keyword">if</span> ! crontab -l |grep ntpdate &amp;&gt;/dev/null; <span class="keyword">then</span></span><br><span class="line">    (<span class="built_in">echo</span> <span class="string">"* 1 * * * ntpdate time.windows.com &gt;/dev/null 2&gt;&amp;1"</span>;crontab -l) |crontab</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#禁用selinux</span></span><br><span class="line">sed -i <span class="string">'/SELINUX/&#123;s/permissive/disabled/&#125;'</span> /etc/selinux/config</span><br><span class="line"></span><br><span class="line"><span class="comment">#关闭防火墙</span></span><br><span class="line"><span class="keyword">if</span> egrep <span class="string">"7.[0-9]"</span> /etc/redhat-release &amp;&gt;/dev/null;<span class="keyword">then</span></span><br><span class="line">    systemctl stop firewalld</span><br><span class="line">    systemctl <span class="built_in">disable</span> firewalld</span><br><span class="line"><span class="keyword">elif</span> egrep <span class="string">"6.[0-9]"</span> /etc/redhat-release &amp;&gt;/dev/null;<span class="keyword">then</span></span><br><span class="line">    service iptables stop</span><br><span class="line">    chkconfig iptables off</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="comment">#历史命令显示操作时间</span></span><br><span class="line"><span class="keyword">if</span> ! grep HISTTIMEFORMAT /etc/bashrc;<span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">'export HISTTIMEFORMAT="%F %T `whoami` "'</span> &gt;&gt; /etc/bashrc</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#SSH超时时间</span></span><br><span class="line"><span class="keyword">if</span> ! grep <span class="string">"TMOUT=600"</span> /etc/profile &amp;&gt; /dev/null;<span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"export TMOUT=600"</span> &gt;&gt; /etc/profile</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 禁止root远程登录</span></span><br><span class="line">sed -i <span class="string">'s/#PermitRootLogin yes/PermitRootLogin no/'</span> /etc/ssh/sshd_config</span><br><span class="line"></span><br><span class="line"><span class="comment"># 禁止定时任务发送邮件</span></span><br><span class="line">sed -i <span class="string">'s/^MAILTO=root/MAILTO=""/'</span> /etc/crontab</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置最大打开文件数</span></span><br><span class="line"><span class="keyword">if</span> ! grep <span class="string">"* soft nofile 65535"</span> /etc/security/limits.conf &amp;&gt;/dev/null;<span class="keyword">then</span></span><br><span class="line">    cat &gt;&gt; /etc/security/limits.conf &lt;&lt; EOF</span><br><span class="line">    * soft nofile 65535</span><br><span class="line">    * hard nofile 65535</span><br><span class="line">EOF</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 系统内核优化</span></span><br><span class="line">cat &gt;&gt; /etc/sysctl.conf &lt;&lt; EOF</span><br><span class="line">net.ipv4.tcp_syncookies = 1</span><br><span class="line">net.ipv4.tcp_max_tw_buckets = 20480</span><br><span class="line">net.ipv4.tcp_max_syn_backlog = 20480</span><br><span class="line">net.core.netdev_max_backlog = 262144</span><br><span class="line">net.ipv4.tcp_fin_timeout = 20</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># 减少SWAP使用</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"0"</span> &gt; /proc/sys/vm/swappiness</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装系统性能分析工具及其他</span></span><br><span class="line">yum install gcc make autoconf vim sysstat net-tools iostat iftop iotp lrzsz -y</span><br></pre></td></tr></table></figure>





























]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Shell</tag>
      </tags>
  </entry>
  <entry>
    <title>2012年考研英语（完形填空）</title>
    <url>/2020/06/23/2012%E5%B9%B4%E8%80%83%E7%A0%94%E8%8B%B1%E8%AF%AD%EF%BC%88%E5%AE%8C%E5%BD%A2%E5%A1%AB%E7%A9%BA%EF%BC%89/</url>
    <content><![CDATA[<p>The ethical judgments of the Supreme Court justices have become an important issue recently. The court cannot 1 its legitimacy as guardian of the rule of law 2 justices behave like politicians. Yet, in several instances, justices acted in ways that 3 the court’s reputation for being independent and impartial.</p>
<p>Justice Antonin Scalia, for example, appeared at political events. That kind of activity makes it less likely that the court’s decisions will be 4 as impartial judgments. Part of the problem is that the justices are not 5 by an ethics code. At the very least, the court should make itself 6 to the code of conduct that 7 to the rest of the federal judiciary.</p>
<p>This and other similar cases 8 the question of whether there is still a 9 between the court and politics.</p>
<p>The framers of the Constitution envisioned law 10 having authority apart from politics. They gave justices permanent positions 11 they would be free to 12 those in power and have no need to 13 political support. Our legal system was designed to set law apart from politics precisely because they are so closely 14 .</p>
<p>Constitutional law is political because it results from choices rooted in fundamental social 15 like liberty and property. When the court deals with social policy decisions, the law it 16 is inescapably political—which is why decisions split along ideological lines are so easily 17 as unjust.</p>
<p>The justices must 18 doubts about the court’s legitimacy by making themselves 19 conduct. That would make their rulings more likely to be seen as separate from politics and, 20 law.</p>
<table>
<thead>
<tr>
<th>序号</th>
<th>英语</th>
<th>汉语释义</th>
</tr>
</thead>
<tbody><tr>
<td>1</td>
<td>ethical</td>
<td>[‘eθikəl] n. 处方药 adj. 伦理的；道德的；凭处方出售的</td>
</tr>
<tr>
<td>2</td>
<td>judgment</td>
<td>[‘dʒʌdʒmənt] n. 判断；裁判；判决书；辨别力</td>
</tr>
<tr>
<td>3</td>
<td>supreme</td>
<td>[sju’pri:m, sə-] n. 至高；霸权 adj. 最高的；至高的；最重要的</td>
</tr>
<tr>
<td>4</td>
<td>justice</td>
<td>[‘dʒʌstis] n. 司法，法律制裁；正义；法官，审判员</td>
</tr>
<tr>
<td>5</td>
<td>issue</td>
<td>[‘iʃju:, ‘isju:] n. 问题；流出；期号；发行物 vt. 发行，发布；发给；放出，排出 vi. 发行；流出；造成…结果；传下</td>
</tr>
<tr>
<td>6</td>
<td>legitimacy</td>
<td>[li’dʒitiməsi] n. 合法；合理；正统</td>
</tr>
<tr>
<td>7</td>
<td>guardian</td>
<td>[ˈɡɑːdiən] n. [法] 监护人，保护人；守护者 adj. 守护的</td>
</tr>
<tr>
<td>8</td>
<td>politician</td>
<td>n. 政治家，政客</td>
</tr>
<tr>
<td>9</td>
<td>reputation</td>
<td>[ˌrepjuˈteɪʃn] n. 名声，名誉；声望</td>
</tr>
<tr>
<td>10</td>
<td>impartial</td>
<td>[ɪmˈpɑːʃl]  adj. 公平的，公正的；不偏不倚的</td>
</tr>
<tr>
<td>11</td>
<td>federal</td>
<td>[ˈfedərəl]  adj. 联邦的；同盟的；联邦政府的； 联邦制的 adv. 联邦政府地</td>
</tr>
<tr>
<td>12</td>
<td>judiciary</td>
<td>[dʒuˈdɪʃəri]  n. 司法部；法官；司法制度 adj. 司法的；法官的；法院的</td>
</tr>
<tr>
<td>13</td>
<td><strong>framer</strong></td>
<td>[‘fræmə] n. 制宪者；筹划者</td>
</tr>
<tr>
<td>14</td>
<td>constitution</td>
<td>n. 宪法；体制；章程；构造；建立，组成；体格</td>
</tr>
<tr>
<td>15</td>
<td>envision</td>
<td>vt. 想象；预想</td>
</tr>
<tr>
<td>16</td>
<td>fundamental</td>
<td>n. 基本原理；基本原则 adj. 基本的，根本的</td>
</tr>
<tr>
<td>17</td>
<td>liberty</td>
<td>n. 自由；许可；冒失</td>
</tr>
<tr>
<td>18</td>
<td>inescapably</td>
<td>adv. 逃不掉地</td>
</tr>
<tr>
<td>19</td>
<td>ideological</td>
<td>adj. 思想的；意识形态的</td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>考研英语</category>
      </categories>
      <tags>
        <tag>考研英语</tag>
        <tag>完形填空</tag>
        <tag>考研英语一</tag>
      </tags>
  </entry>
  <entry>
    <title>2010年考研英语（完形填空）</title>
    <url>/2020/06/22/2010%E5%B9%B4%E8%80%83%E7%A0%94%E8%8B%B1%E8%AF%AD%EF%BC%88%E5%AE%8C%E5%BD%A2%E5%A1%AB%E7%A9%BA%EF%BC%89/</url>
    <content><![CDATA[<p>In 1924 America’s National Research Council sent two engineers to supervise a series of industrial experiments at a large telephone-parts factory called the Hawthorne Plant near Chicago. It hoped they would learn how shop-floor lighting affected workers’ productivity. Instead, the studies ended up giving their name to the “Hawthorne effect”, the extremely influential idea that the very act of being experimented upon changed subjects’ behavior.<br>The idea arose because of the perplexing behavior of the women in the Hawthorne plant. According to accounts of the experiments, their hourly output rose when lighting was increased, but also when it was dimmed. It did not matter what was done in the experiment; so long as something was changed, productivity rose. A(n) awareness that they were being experimented upon seemed to be enough to alter workers’ behavior by itself.<br>After several decades, the same data were subjected to econometric the analysis. The Hawthorne experiments has another surprise store. Contrary to the descriptions on record, no systematic evidence was found that levels of productivity were related to changes in lighting.<br>It turns out that peculiar way of conducting the experiments may be have led to misleading interpretation of what happened. For example, lighting was always changed on a Sunday. When work started again on Monday, output duly rose compared with the previous Saturday and continued to rise for the next couple of days. Howerver, a comparison with data for weeks when there was no experimentation showed that output always went up on Monday, Workers tended to be diligent for the first few days of the week in any case, before hitting a plateau and then slackening off. This suggests that the alleged “Hawthorne effect” is hard to pin down.</p>
<table>
<thead>
<tr>
<th align="left">序号</th>
<th>单词</th>
<th>汉语意思</th>
</tr>
</thead>
<tbody><tr>
<td align="left">1</td>
<td>council</td>
<td>n. 委员会；会议；理事会；地方议会；顾问班子</td>
</tr>
<tr>
<td align="left">2</td>
<td>supervise</td>
<td>v. 监督；管理；指导；主管；照看</td>
</tr>
<tr>
<td align="left">3</td>
<td>a series of</td>
<td>一系列的；一连串的</td>
</tr>
<tr>
<td align="left">4</td>
<td>industrial</td>
<td>n. 工业股票；工业工人. adj. 工业的，产业的；从事工业的；供工业用的；来自勤劳的</td>
</tr>
<tr>
<td align="left">5</td>
<td>plant</td>
<td>n. 工厂，车间；植物；设备；庄稼 vt. 种植；培养；栽培；安置 vi. 种植</td>
</tr>
<tr>
<td align="left">6</td>
<td>productivity</td>
<td>n. 生产力；生产率；生产能力</td>
</tr>
<tr>
<td align="left">7</td>
<td>end up</td>
<td>结束；死亡</td>
</tr>
<tr>
<td align="left">8</td>
<td>influential</td>
<td>adj. 有影响的；有势力的 n. 有影响力的人物</td>
</tr>
<tr>
<td align="left">9</td>
<td>experiment</td>
<td>v. 尝试；试验；进行实验 n. 实验，试验；尝试</td>
</tr>
<tr>
<td align="left">10</td>
<td>decade</td>
<td>n. 十年，十年期；十</td>
</tr>
<tr>
<td align="left">11</td>
<td>perplex</td>
<td>vt. 使困惑，使为难；使复杂化</td>
</tr>
<tr>
<td align="left">12</td>
<td>account</td>
<td>n. 账户；解释；账目，账单；理由；描述 vi. 解释；导致；报账 vt. 认为；把…视为</td>
</tr>
<tr>
<td align="left">13</td>
<td>dimmed</td>
<td>adj. 无效的；暗灰色的 v. 使暗淡；变模糊（dim的过去式）</td>
</tr>
<tr>
<td align="left">14</td>
<td>so long as</td>
<td>adv. 只要</td>
</tr>
<tr>
<td align="left">15</td>
<td>econometric</td>
<td>adj. 计量经济学的</td>
</tr>
<tr>
<td align="left">16</td>
<td>systematic</td>
<td>adj. 系统的；体系的；有系统的；[图情] 分类的；一贯的，惯常的</td>
</tr>
<tr>
<td align="left">17</td>
<td>turn out</td>
<td>v. （以某种方式）发生；最后是，结果是；出席，参加，前去观看；关掉，熄灭（电灯、煤气等）；生产，制造</td>
</tr>
<tr>
<td align="left">18</td>
<td>peculiar</td>
<td>n. 特权；特有财产 adj. 特殊的；独特的；奇怪的；罕见的</td>
</tr>
<tr>
<td align="left">19</td>
<td>conduct</td>
<td>v. 组织，实施，进行；指挥（音乐）；带领，引导；举止，表现；传导（热或电）    n. 行为举止；管理（方式），实施（办法）；引导</td>
</tr>
<tr>
<td align="left">20</td>
<td>mislead</td>
<td>vt. 误导；带错</td>
</tr>
<tr>
<td align="left">21</td>
<td>interpretation</td>
<td>n. 解释；翻译；演出</td>
</tr>
<tr>
<td align="left">22</td>
<td>duly</td>
<td>adv. 适当地；充分地；按时地</td>
</tr>
<tr>
<td align="left">23</td>
<td>comparison</td>
<td>n. 比较；对照；比喻；比较关系</td>
</tr>
<tr>
<td align="left">24</td>
<td>diligent</td>
<td>adj. 勤勉的；用功的，费尽心血的</td>
</tr>
<tr>
<td align="left">25</td>
<td>plateau</td>
<td>n. 高原；稳定水平；托盘；平顶女帽 vi. 达到平衡；达到稳定时期</td>
</tr>
<tr>
<td align="left">26</td>
<td>slacken</td>
<td>vi. 松劲，懈怠；变松弛；变缓慢 vt. 使缓慢；使松弛</td>
</tr>
<tr>
<td align="left">27</td>
<td>allege</td>
<td>vt. 宣称，断言；提出…作为理由</td>
</tr>
<tr>
<td align="left">28</td>
<td>pin down</td>
<td>v. 发现，查明；确定；使受约束；阻止；迫使（某人）明确表态</td>
</tr>
<tr>
<td align="left">29</td>
<td>awareness</td>
<td>n. 意识，认识；明白，知道 n. 人群对品牌或产品的认知</td>
</tr>
<tr>
<td align="left">30</td>
<td>expectation</td>
<td>n. 期待；预期；指望</td>
</tr>
<tr>
<td align="left">31</td>
<td>sentiment</td>
<td>n. 感情，情绪；情操；观点；多愁善感</td>
</tr>
<tr>
<td align="left">32</td>
<td>illusion</td>
<td>n. 幻觉，错觉；错误的观念或信仰</td>
</tr>
<tr>
<td align="left">33</td>
<td>suitable</td>
<td>adj. 适当的；相配的</td>
</tr>
<tr>
<td align="left">34</td>
<td>excessive</td>
<td>adj. 过多的，极度的；过分的</td>
</tr>
<tr>
<td align="left">35</td>
<td>abundant</td>
<td>adj. 丰富的；充裕的；盛产</td>
</tr>
<tr>
<td align="left">36</td>
<td>disputable</td>
<td>adj. 有讨论余地的；真假可疑的</td>
</tr>
<tr>
<td align="left">37</td>
<td>enlighten</td>
<td>vt. 启发，启蒙；教导，开导；照耀</td>
</tr>
<tr>
<td align="left">38</td>
<td>therefore</td>
<td>adv. 因此；所以</td>
</tr>
<tr>
<td align="left">39</td>
<td>furthermore</td>
<td>adv. 此外；而且</td>
</tr>
<tr>
<td align="left">40</td>
<td>however</td>
<td>conj. 无论以何种方式; 不管怎样 adv. 无论如何；不管怎样（接副词或形容词）；然而；可是</td>
</tr>
<tr>
<td align="left">41</td>
<td>meanwhile</td>
<td>n. 其间，其时</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>考研英语</category>
      </categories>
      <tags>
        <tag>考研英语</tag>
        <tag>完形填空</tag>
        <tag>考研英语一</tag>
      </tags>
  </entry>
  <entry>
    <title>2011年考研英语完形填空</title>
    <url>/2020/06/20/2011%E5%B9%B4%E8%80%83%E7%A0%94%E8%8B%B1%E8%AF%AD%E5%AE%8C%E5%BD%A2%E5%A1%AB%E7%A9%BA/</url>
    <content><![CDATA[<ol>
<li><p>view/consider/see/regard … <strong>as</strong> … 将…视为</p>
</li>
<li><p>n. + ly = adj. body + ly = bodily   &lt;=&gt;   physical</p>
</li>
<li><p>precious (adj.) to 对…很宝贵  &lt;=&gt; important to …</p>
</li>
<li><p>despite + n./短语     尽管 &lt;=&gt;   in spite of </p>
<p>although + 句子 </p>
</li>
<li><p>has (adj.) influence/effect <strong>on</strong> … 对…有影响</p>
</li>
<li><p>health == fitness</p>
</li>
<li><p>opposite claims. == claims to the opposite/contrary 相反的观点</p>
</li>
<li><p>do/does + v 强调</p>
<p>I do love him . ==  I love him very much.</p>
</li>
<li><p>change <strong>in</strong>      …方面的变化</p>
</li>
<li><p>reflect 反映；反射，照出；表达；显示;反省</p>
</li>
<li><p>indicate. vt. 表明；指出；预示；象征</p>
</li>
<li><p>heart rate 心率</p>
<table>
<thead>
<tr>
<th>序号</th>
<th>英语</th>
<th>汉语释义</th>
</tr>
</thead>
<tbody><tr>
<td>1</td>
<td>ancient</td>
<td>n. 古代人；老人 adj. 古代的；古老的，过时的；年老的</td>
</tr>
<tr>
<td>2</td>
<td>Greek</td>
<td>n. (Greek) 希腊人；希腊语；（有希腊字母名称的）大学生联谊会会员            adj. (Greek) 希腊的；希腊人的，希腊语的</td>
</tr>
<tr>
<td>3</td>
<td>philosopher</td>
<td>n. 哲学家；哲人</td>
</tr>
<tr>
<td>4</td>
<td>view … as</td>
<td>认为…是…；把…看作…</td>
</tr>
<tr>
<td>5</td>
<td>bodily</td>
<td>adv. 全身地，以整个身体地；整个地，完全地；亲自地                                    adj. 人体的，身体的；（与精神相对的）肉体的，实体的</td>
</tr>
<tr>
<td>6</td>
<td>pricious to</td>
<td>对…珍贵</td>
</tr>
<tr>
<td>7</td>
<td>claim</td>
<td>v. 宣称；要求，索取；引起（注意）；获得；夺去（生命）；索赔（钱财）；需要    n. 声称；（财产等）所有权；（向公司等）索赔；专利新特征申明；要求（权利）；（取得的）采矿地；索要</td>
</tr>
<tr>
<td>8</td>
<td>contrary</td>
<td>n. 相反；反面 adj. 相反的；对立的 adv. 相反地</td>
</tr>
<tr>
<td>9</td>
<td>fitness</td>
<td>n. 健康；适当；适合性</td>
</tr>
<tr>
<td>10</td>
<td>short-term</td>
<td>adj. 短期的</td>
</tr>
<tr>
<td>11</td>
<td>indicate</td>
<td>vt. 表明；指出；预示；象征</td>
</tr>
<tr>
<td>12</td>
<td>vessel</td>
<td>n. 船，舰；[组织] 脉管，血管；容器，器皿</td>
</tr>
<tr>
<td>13</td>
<td>consumption</td>
<td>n. 消费；消耗；肺痨</td>
</tr>
<tr>
<td>14</td>
<td>stabilize</td>
<td>vt. 使稳固，使安定.  vi. 稳定，安定</td>
</tr>
<tr>
<td>15</td>
<td>boost</td>
<td>n. 推动；帮助；宣扬.  vi. 宣扬；偷窃. vt. 促进；增加；支援</td>
</tr>
<tr>
<td>16</td>
<td>impaire</td>
<td>损害;</td>
</tr>
<tr>
<td>17</td>
<td>determine</td>
<td>v. （使）下决心，（使）做出决定 vt. 决定，确定；判定，判决；限定.  vi. 确定；决定；判决，终止；[主用于法律]了结，终止，结束</td>
</tr>
<tr>
<td>18</td>
<td>transmit</td>
<td>vt. 传输；传播；发射；传达；遗传. vi. 传输；发射信号</td>
</tr>
<tr>
<td>19</td>
<td>sustain</td>
<td>vt. 维持；支撑，承担；忍受；供养；证实</td>
</tr>
<tr>
<td>20</td>
<td>evaluate</td>
<td>vt. 评价；估价；求…的值. vi. 评价；估价</td>
</tr>
<tr>
<td>21</td>
<td>observe</td>
<td>vt. 庆祝. vt. 观察；遵守；说；注意到；评论. vi. 观察；说；注意到；评论</td>
</tr>
<tr>
<td>22</td>
<td>in turn</td>
<td>反过来；转而；轮流，依次</td>
</tr>
<tr>
<td>23</td>
<td>in fact</td>
<td>事实上，实际上</td>
</tr>
<tr>
<td>24</td>
<td>in addition</td>
<td>另外，此外</td>
</tr>
<tr>
<td>25</td>
<td>in brief</td>
<td>简言之</td>
</tr>
<tr>
<td>26</td>
<td>accomplish</td>
<td>vt. 完成；实现；达到</td>
</tr>
<tr>
<td>27</td>
<td>apparently</td>
<td>显然地；似乎，表面上</td>
</tr>
<tr>
<td>28</td>
<td>harden</td>
<td>v. （使）变硬，变坚固；更严肃；（使）变坚强；（使）变冷酷；变明确；（股票等）升水</td>
</tr>
<tr>
<td>29</td>
<td>weaken</td>
<td>vt. 减少；使变弱；使变淡  vi. 变弱；畏缩；变软弱</td>
</tr>
<tr>
<td>30</td>
<td>tighten</td>
<td>vt. 变紧；使变紧      vi. 绷紧；变紧</td>
</tr>
<tr>
<td>31</td>
<td>relax</td>
<td>vi. 放松，休息；松懈，松弛；变从容；休养    vt. 放松；使休息；使松弛；缓和；使松懈</td>
</tr>
<tr>
<td>32</td>
<td>die down</td>
<td>逐渐消失</td>
</tr>
<tr>
<td>33</td>
<td>opposite</td>
<td>n. 对立面；反义词   prep. 在…的对面    adj. 相反的；对面的；对立的    adv. 在对面</td>
</tr>
<tr>
<td>34</td>
<td>strain</td>
<td>n. 张力；拉紧；负担；扭伤；血缘   vi. 拉紧；尽力 vt. 拉紧；滥用；滤去；竭力</td>
</tr>
<tr>
<td>35</td>
<td>conceivably</td>
<td>adv. 可以想象的是，可以想得到的是；可能的是；可以理解的是</td>
</tr>
<tr>
<td>36</td>
<td>psychological</td>
<td>adj. 心理的；心理学的；精神上的</td>
</tr>
<tr>
<td>37</td>
<td>according to</td>
<td>根据，按照；取决于；据…所说</td>
</tr>
<tr>
<td>38</td>
<td>aggravate</td>
<td>vt. 加重；使恶化；激怒</td>
</tr>
<tr>
<td>39</td>
<td>moderate</td>
<td>adj. 稳健的，温和的；适度的，中等的；有节制的 vt. 节制；减轻 vi. 变缓和，变弱</td>
</tr>
<tr>
<td>40</td>
<td>precede</td>
<td>vt. 领先，在…之前；优于，高于  vi. 领先，在前面</td>
</tr>
<tr>
<td>41</td>
<td>muscular</td>
<td>adj. 肌肉的；肌肉发达的；强健的</td>
</tr>
<tr>
<td>42</td>
<td>enthusiastically</td>
<td>adv. 热心地；满腔热情地</td>
</tr>
<tr>
<td>43</td>
<td>frown</td>
<td>n. 皱眉，蹙额  vt. 皱眉，蹙额. vi. 皱眉；不同意</td>
</tr>
<tr>
<td>44</td>
<td>similarly</td>
<td>adv. 类似地，差不多地；同样地，也</td>
</tr>
</tbody></table>
</li>
</ol>
<p>Ancient Greek philosopher Aristotle viewed laughter as “a bodily exercise precious to health.” But despite some claims to the contrary, laughing probably has little influence on physical fitness. Laughter does produce short-term changes in the function of the heart and its blood vessels, boosting heart rate and oxygen consumption. But because hard laughter is difficult to sustain , a good laugh is unlikely to have measurable benefits the way, say, walking or jogging does.</p>
<p>In fact , instead of straining muscles to build them, as exercise does, laughter apparently accomplishes the opposite. Studies dating back to the 1930s indicate that laughter relaxes muscles, decreasing muscle tone for up to 45 minutes after the laugh dies down.</p>
<p>Such bodily reaction might conceivably help moderate the effects of psychological stress. Anyway, the act of laughing probably does produce other types of physical feedback that improve an individual’s emotional state. According to one classical theory of emotion, our feelings are partially rooted in  physical reactions. It was argued at the end of the 19th century that humans do not cry because they are sad but that they become sad when the tears begin to flow.</p>
<p>Although sadness also precede tears, evidence suggests that emotions can flow from muscular responses. In an experiment published in 1988, social psychologist Fritz Strack of the University of Würzburg in Germany asked volunteers to hold a pen either with their teeth – thereby creating an artificial smile – or with their lips, which would produce a(n) disappointed expression. Those forced to exercise their smiling muscles reacted more enthusiastically to funny cartoons than did those whose mouths were contracted in a frown, suggesting that expressions may influence emotions rather than just the other way around. Similarly, the physical act of laughter could improve mood.</p>
]]></content>
      <categories>
        <category>考研英语</category>
      </categories>
      <tags>
        <tag>考研英语</tag>
        <tag>完形填空</tag>
        <tag>考研英语一</tag>
      </tags>
  </entry>
  <entry>
    <title>2013年考研英语（完形填空）</title>
    <url>/2020/06/17/2013%E5%B9%B4%E8%80%83%E7%A0%94%E8%8B%B1%E8%AF%AD%EF%BC%88%E5%AE%8C%E5%BD%A2%E5%A1%AB%E7%A9%BA%EF%BC%89/</url>
    <content><![CDATA[<p>People are, on the whole, poor at considering background information when making individual decisions. At first glance this might seem like a strength that grants the ability to make judgments which are unbiased by external factors. But Dr. Uri Simonsohn speculated that an inability to consider the big picture was leading decision-makers to be biased by the daily samples of information they were working with. For example , he theorised that a judge fearful of appearing too soft to crime might be more likely to send someone to prison if he had already sentenced five or six other defendants only to forced community service on that day.</p>
<p>　　To test this idea, he turned to the university-admissions process. In theory, the success of an applicant should not depend on the few others chosen randomly for interview during the same day, but Dr. Simonsohn suspected the truth was otherwise .</p>
<p>　　He studied the results of 9,323 MBA interviews conducted by 31 admissions officers. The interviewers had rated applicants on a scale of one to five. This scale took numerous factors into consideration. The scores were then used in conjunction with an applicant’s score on the Graduate Management Admission Test, or GMAT, a standardized exam which is marked out of 800 points, to make a decision on whether to accept him or her.</p>
<p>　　Dr. Simonsohn found if the score of the previous candidate in a daily series of interviewees was 0.75 points or more higher than that of the one before that, then the score for the next applicant would drop by an average of 0.075 points. This might sound small, but to disregard the effects of such a decrease a candidate could need 30 more GMAT points than would otherwise have been necessary .</p>
]]></content>
      <categories>
        <category>考研英语</category>
      </categories>
      <tags>
        <tag>考研英语</tag>
        <tag>完形填空</tag>
        <tag>考研英语一</tag>
      </tags>
  </entry>
  <entry>
    <title>2014年考研英语（完形填空词汇整理）</title>
    <url>/2020/06/16/2014%E5%B9%B4%E8%80%83%E7%A0%94%E8%8B%B1%E8%AF%AD%EF%BC%88%E5%AE%8C%E5%BD%A2%E5%A1%AB%E7%A9%BA%E8%AF%8D%E6%B1%87%E6%95%B4%E7%90%86%EF%BC%89/</url>
    <content><![CDATA[<p>As many people hit middle age, they often start to notice that their memory and mental clarity(清楚，明晰；透明) are not what they used to be. We suddenly can’t remember where we put the keys just a moment ago, or an old acquaintance’s name, or the name of an old band we used to love. As the brain fades , we refer to these occurrences as “senior moments.” While seemingly innocent, this loss of mental focus can potentially have a(an) damaging  impact on our professional, social, and personal wellbeing .</p>
<p>Neuroscientists, experts who study the nervous system, are increasingly showing that there’s actually a lot that can be done. It <u>turns out</u>(证明是，结果是) that the brain needs exercise in much the same way our muscles do, and the right mental workout (锻炼；练习；试验)can significantly improve our basic cognitive(认知的，认识的) functions. Thinking is essentially a process(过程) of making connections in the brain. To a certain extent, our ability to excel in(在…方面胜过，很擅长) making the connections that drive intelligence is inherited. Howerver, because these connections are made through effort and practice, scientists believe that intelligence can expand and fluctuate (波动；涨落；动摇) according to(根据) mental effort.</p>
<p>Now, a new Web-based company has taken it a step further and developed the first “brain training program” designed to actually help people improve and regain their mental sharpness .</p>
<p>The Web-based program allows you to systematically improve your memory and attention skills. The program <u>keeps track of</u>(记录) your progress and provides detailed feedback on your performance and improvement. Most importantly, it constantly modifies and enhances the games you play to build on the strengths effective exercise routine requires you to increase resistance and vary your muscle use.</p>
]]></content>
      <categories>
        <category>考研英语</category>
      </categories>
      <tags>
        <tag>考研英语</tag>
        <tag>完形填空</tag>
        <tag>考研英语一</tag>
      </tags>
  </entry>
  <entry>
    <title>2016年考研英语一（完形填空词汇整理）</title>
    <url>/2020/06/14/2016%E5%B9%B4%E8%80%83%E7%A0%94%E8%8B%B1%E8%AF%AD%E4%B8%80%EF%BC%88%E5%AE%8C%E5%BD%A2%E5%A1%AB%E7%A9%BA%E8%AF%8D%E6%B1%87%E6%95%B4%E7%90%86%EF%BC%89/</url>
    <content><![CDATA[<p>In Cambodia, the choice of a <strong>spouse</strong> is a complex one for the young male. It may <strong>involve</strong> not only his parents and his friends, <strong>1</strong>those of the young woman, but also a <strong>matchmaker</strong>. A young man can <strong>2</strong> a likely spouse on his own and then ask his parents to <strong>3</strong>the marriage <strong>negotiations</strong>, or the young man’s parents may take the choice of a spouse, giving the child little to say in the selection. <strong>4</strong>, a girl may <strong>veto</strong> the spouse her parents have chosen. <strong>5</strong> a spouse has been selected, each family <strong>investigates</strong> the other to make sure its child is marrying <strong>6</strong> a good family.</p>
<p>　　The traditional wedding is a long and colorful <strong>affair</strong>. <strong>Formerly</strong> it lasted three days, <strong>7</strong>1980s it more commonly lasted a day and a half. <strong>Buddhist</strong> <strong>priests</strong> offer a short <strong>sermon</strong> and <strong>8</strong> prayers of blessing. Parts of the <strong>ceremony</strong> involve <strong>ritual</strong> hair cutting,<strong>9</strong>cotton threads <strong>soaked</strong> in <strong>holy</strong> water around the <strong>bride’s</strong> and <strong>groom’s</strong> wrists, and <strong>10</strong>a candle around a circle of happily married and respected couples to bless the <strong>11</strong>. Newlyweds traditionally move in with the wife’s parents and may__12__ with them up to a year, <strong>13</strong>they can build a new house nearby.</p>
<p>　　<strong>Divorce</strong> is legal and easy to <strong>14</strong>, but not common. Divorced persons are <strong>15</strong> with some <strong>disapproval</strong>. Each spouse retains <strong><em>16</em></strong> property he or she <strong>17</strong> into the marriage, and <strong>jointly</strong>-acquired property is <strong>18</strong> equally. Divorced persons may remarry, but a gender <strong>prejudice</strong> <strong>19</strong>up. The divorced male doesn’t have a waiting period before he can remarry <strong>20</strong>the woman must wait ten months.</p>
<p>　　1.A. by way of         B. with regard to         C. on behalf of         <strong><u>D. as well as</u></strong></p>
<p>　　2.<strong><u>A. decide on</u></strong>         B. provide for         C. compete with         D. adapt to</p>
<p>　　3.A. close         <u><strong>B. arrange</strong></u>             C. renew             D. postpone</p>
<p>　　4.<u><strong>A. In theory</strong></u>         B. Above all             C. In time             D. For example</p>
<p>　　5.A. Unless         B. Less                 <u><strong>C. After</strong></u>                 D. Although</p>
<p>　　6.<u><strong>A. into</strong></u>             B. within             C. from                 D. through</p>
<p>　　7.A. or             B. since                 <u><strong>C. but</strong></u>                 D. so</p>
<p>　　8.A. test             B. copy                 <u><strong>C. recite</strong></u>              D. create</p>
<p>　　9.A. folding         B. piling             C. wrapping             <u><strong>D. tying</strong></u></p>
<p>　　10.<u><strong>A. passing</strong></u>         B. lighting             C. hiding             D. serving</p>
<p>　　11.A. association     B. meeting             C. collection             <u><strong>D. union</strong></u></p>
<p>　　12.A. deal             B. part                 C. grow                 <u><strong>D. live</strong></u></p>
<p>　　13.A. whereas         <u><strong>B. until</strong></u>                 C. for                 D. if</p>
<p>　　14.A. avoid             B. follow             C. challenge             <u><strong>D. obtain</strong></u></p>
<p>　　15.A. isolated         B. persuaded             <u><strong>C. viewed</strong></u>             D. exposed</p>
<p>　　16.A. wherever         <u><strong>B. whatever</strong></u>             C. whenever             D. however</p>
<p>　　17.A. changed         <u><strong>B. brought</strong></u>             C. shaped             D. pushed</p>
<p>　　18.A. invested         <strong><u>B. divided</u></strong>             C. donated             D. withdrawn</p>
<p>　　19.A. warms         B. clears             <u><strong>C. shows</strong></u>             D. breaks</p>
<p>　　20.<u><strong>A. while</strong></u>             B. so that             C. once                 D. in that</p>
<p>1.[标准答案] [D]as well as</p>
<p>　　[考点分析] 本题考察逻辑关系</p>
<p>　　[选项分析] 因为考察逻辑关系，所以需要我们先对填空前后的原文信息做定位分析：文章身处大环境not only…..but also之中，这是一个明显的并列关系，表示”不仅……而且……”该空与前一句”his parents and his friends”也是并列关系，表示”与他本人以及伴侣的父母朋友相关” 所以答案只能是D. as well as.</p>
<p>　　A. by way of通过 B. with regard to 关于 C. on behalf of 代表</p>
<p>　　2.[标准答案] [A] decide on</p>
<p>　　[考点分析] 上下文语义</p>
<p>　　[选项分析] 根据该句的主语a young man与宾语a likely spouse的关系，答案只能是A. decide on 决定。表示自己决定自己的对象。B. provide for 为……提供准备 C. compete with与……竞争 D. adapt to适用</p>
<p>　　3.[标准答案] [B]arrange</p>
<p>　　[考点分析] 上下文语义及动词辨析</p>
<p>　　[选项分析] 该句意思为，他可以自己选择自己中意的伴侣并让父母_____相关事务。四个选项中，A. close 关闭 C renew 更新；恢复 D postpone”推迟”，语义不正确，只有B arrange安排是符合语境。</p>
<p>　　4.[标准答案] [A]In theory</p>
<p>　　[考点分析] 上下文语义</p>
<p>　　[选项分析]逻辑判断题。主要是看前后两句的含义，前面是说”他可以自己选择自己中意的伴侣并让父母安排相关事务，或者几乎不参与，完全让父母选择自己的对象。” 空格后面说”女方可以拒绝她父母所选择的对象。”这两句之间没有举例说明的关系，且有一个may，更证明A. In theory的正确性。而其他选项 B. Above all最重要的是， C. In time 准时 D. For example举例，均不符合题意。</p>
<p>　　5.[标准答案] [C]After</p>
<p>　　[考点分析] 上下文语义</p>
<p>　　[选项分析]根据下文”<strong>__</strong>a spouse has been selected, each family investigates the other……”知道，只有对象选择好后，父母才会去调查研究对方的背景。所以只有after才对。其他选项A. Unless 除非，否则 B. Lest 以免，唯恐 D. Although 尽管 都不符合题意。</p>
<p>　　6．[标准答案] [A]into</p>
<p>　　[考点分析] 上下文语义及介词词义辨析</p>
<p>　　[选项分析] 这里主要是看marry与相关介词的固定搭配。这里marry into就是指嫁到，而其他选项均没有这层含义。</p>
<p>　　7.    [标准答案] [C]but</p>
<p>　　[考点分析] 逻辑关系题</p>
<p>　　[选项分析]根据上文，说传统的婚礼时间跨度很长，但是到了1980s, 婚礼只持续一天半。所以与前文发生转变。因此要选择but转折关系。</p>
<p>　　8．    [标准答案] [C]recite</p>
<p>　　[考点分析] 上下文语义及动词词义辨析</p>
<p>　　[选项分析]空格处需要填一个动词，和后面的prayers of blessing所搭配，C选项recite 为背诵的意思，与所给短语搭配最为合理，译为”为祈祷者做祈福”。</p>
<p>　　9.[标准答案] [D]tying</p>
<p>　　[考点分析] 上下文语义及动词词义辨析</p>
<p>　　[选项分析] 本题需要根据上下文语义分析，空格处需要搭配后文”棉花线头”，纵观四个选项[A]折叠</p>
<p>　　[B]堆积 [C]包裹 [D]系上，根据选项含义，只有D和后文的”棉花线头”搭配最为合理。</p>
<p>　　10.[标准答案] [A]passing</p>
<p>　　[考点分析] 上下文语义及动词词义辨析</p>
<p>　　[选项分析] 本题根据选项[A]传递[B]点亮 [C]隐藏 [D]服务，原文空格需要填写一个动词与后文”around a circle”来搭配，译为”将蜡烛传一圈”，故[A]传递为正确选项。</p>
<p>　　11.[标准答案] [D]union</p>
<p>　　[考点分析] 名词词义辨析</p>
<p>　　[选项分析] 本题根据选项[A]协会，社团[B]会议，会面 [C]集合 [D]结合。本句语义为”这些受尊敬的夫妻祈祷…”根据语境，结婚是一种夫妻二人的结合，因此，选项[D]结合更符合语境。</p>
<p>　　12.[标准答案] [D]live</p>
<p>　　[考点分析] 上下文语义及动词词义辨析</p>
<p>　　[选项分析] 本题比较简单。根据语义”根据传统，新婚夫妇要搬到妻子父母家，与父母____一年”根据语境，应为[D]居住为最佳答案。</p>
<p>　　13.[标准答案] [B]until</p>
<p>　　[考点分析] 时间逻辑关系</p>
<p>　　[选项分析] 根据原文，”_____他们在附近建造一栋新房子” [A]然而[B]直到 [C]为 [D]如果 结合语境，[B]直到最符合原文语境，搭配最为合理。</p>
<p>　　14.[标准答案] [D]obtain</p>
<p>　　[考点分析] 上下文语义及动词词义辨析</p>
<p>　　[选项分析] Divorce is legal and relatively easy to <strong>14</strong>, but not common.该句句意为离婚是合法的，且相对容易____. A.avoid 避免B.follow 跟随C.chanllenge挑战，质疑D.obtain获得。这里出现and,所以对于离婚这件事不可能是避免或是挑战，但是跟随和离婚之间语义不符，但是获得离婚（的批准）是可以的。选D.</p>
<p>　　15.[标准答案] [D] viewed</p>
<p>　　[考点分析] 上下文语义及动词词义辨析</p>
<p>　　[选项分析] Divorced persons are <strong>15</strong> with some disapproval.离婚的人…一些不赞同。在段首，已经注明离婚是合法的且相对容易得到批准，但是不常见。这说明离婚在现实中肯定是不太受到人们的欢迎的。而接下来这句就说离婚的人…一些不赞同。再看选项：A.isolated孤立 B.persuaded劝说C.viewed看做 D. exposed接触，受到…的影响 C选项固定搭配被认为，放进。</p>
<p>　　16.[标准答案] [B]whatever</p>
<p>　　[考点分析] 语法</p>
<p>　　[选项分析Each spouse retains <strong><em>16</em></strong> property he or she <strong>17</strong> into the marriage, 17个空对应的都是动词，所以该句意思为：夫妇双方保有…财产，这个财产是他或她…(动词)进婚姻的。 结合选项A whenever”无论何地；任何（地方）=any place where(定从)”。B whatever”无论什么；任何（东西）=anything that/any+N that”。C whenever无论何时；任何（时间=any time when）D however 无论如何；无论多么 。根据语义，这里应该不是让步的关系,而且填的这个词还要能修饰property。因此，选择B =retains any property that he or she ….</p>
<p>　　17.[标准答案] [B]brought</p>
<p>　　[考点分析] 上下文语义及动词义辨析</p>
<p>　　[选项分析] Each spouse retains <strong><em>16</em></strong> property he or she <strong>17</strong> into the marriage,结合选项A changed”改变”。B brought “带来”。C shaped”形成” D pushed”推，逼迫”。结合语境只有B符合，把财产带入婚姻。</p>
<p>　　18.[标准答案] [B]divided</p>
<p>　　[考点分析] 上下文语义及动词义辨析</p>
<p>　　[选项分析] …and jointly-acquired property is <strong>18</strong> equally.结合选项A invested投资.[B]divided平分 [C] donated 捐赠[D]withdrawn撤出，提取。根据语义应该是共同财产被（夫妻双方）平分。</p>
<p>　　19.[标准答案] [C]shows</p>
<p>　　[考点分析] 动词固定搭配</p>
<p>　　[选项分析] Divorced persons may remarry, but a gender prejudice <strong>19</strong>up. 该句语义为离过婚的人或许会再婚，但是性别偏见…。结合选项A. warm（up）加热 B.clear(up) 变晴C.show (up) 显现D.break（up）分裂，分开；，显然C是正确选项。</p>
<p>　　20.[标准答案] [A]while</p>
<p>　　[选项分析] 上下文语义</p>
<p>　　[考点分析] 很明显的两类人的对比比较关系。只能选择while.</p>
<p>Spouse 配偶<br>Lest == for fear that 以免<br>sermon 布道<br>Buddhist  佛教徒<br><strong>Priest 祭司，牧师，神父</strong><br>Wrist 腕关节<br>Recite 背诵<br>Tie-tying 捆<br>Soak 打湿<br>Cotton 棉花<br>Holy 神圣的<br>Bride 新娘<br>Groom 新郎<br>The newlywed<br>Retain 保留<br>Prejudice 偏见<br>Gender 性别<br><strong>Whereas 然而，但是 == while</strong><br>Persuade  说服<br><strong><em>Show up 出现，</em></strong></p>
<p>出示<br>Cambodia 柬埔寨<br>Veto 否决<br>investigate 调查<br>ritual 仪式的<br><strong>prayer 祷告</strong><br>Negotiation 谈判<br><strong>By way of  通过</strong><br><strong>As well as 和 …</strong><br><strong>On behalf of  代表</strong><br><strong>With regard to 关于</strong><br>renew 更新 == update<br><strong>Postpone == put off 拖延</strong><br>Recite 背诵  == memorize</p>
<p>fold 褶</p>
<p>pile 堆成堆</p>
<p>wrap 包装</p>
<p><strong>obtain == get</strong> 得到</p>
<p><strong>view 认为</strong></p>
<p>withdraw撤销，撤回</p>
<p>in that == because 因为</p>
<table>
<thead>
<tr>
<th>序号</th>
<th>单词</th>
<th>汉语意思</th>
</tr>
</thead>
<tbody><tr>
<td>1</td>
<td>spouse</td>
<td>n. 配偶   vt. 和…结婚</td>
</tr>
<tr>
<td>2</td>
<td>involve</td>
<td>vt. 包含；牵涉；使陷于；潜心于</td>
</tr>
<tr>
<td>3</td>
<td>matchmaker</td>
<td>n. 媒人；安排比赛的人；火柴制造者</td>
</tr>
<tr>
<td>4</td>
<td>negotiation</td>
<td>n. 谈判；转让；顺利的通过</td>
</tr>
<tr>
<td>5</td>
<td>veto</td>
<td>n. 否决权   vt. 否决；禁止  <br /> vi. 否决；禁止</td>
</tr>
<tr>
<td>6</td>
<td>investigate</td>
<td>v. 调查；研究</td>
</tr>
<tr>
<td>7</td>
<td>affair</td>
<td>n. 事情；事务；私事；（尤指关系不长久的）风流韵事</td>
</tr>
<tr>
<td>8</td>
<td>formerly</td>
<td>adv. 以前；原来</td>
</tr>
<tr>
<td>9</td>
<td>buddhist</td>
<td>n. 佛教徒   adj. 佛教的</td>
</tr>
<tr>
<td>10</td>
<td>priest</td>
<td>n. 牧师；神父；教士   <br />vt. 使成为神职人员；任命…为祭司</td>
</tr>
<tr>
<td>11</td>
<td>sermon</td>
<td>n. 布道；训诫；启示；冗长的讲话   <br />vt. 对…布道；对…说教   vi. 布道</td>
</tr>
<tr>
<td>12</td>
<td>prayer</td>
<td>n. 祈祷，祷告；恳求；祈祷文</td>
</tr>
<tr>
<td>13</td>
<td>bless</td>
<td>vt. 祝福；保佑；赞美</td>
</tr>
<tr>
<td>14</td>
<td>ceremony</td>
<td>n. 典礼，仪式；礼节，礼仪；客套，虚礼</td>
</tr>
<tr>
<td>15</td>
<td>ritual</td>
<td>n. 仪式；惯例；礼制   <br />adj. 仪式的；例行的；礼节性的</td>
</tr>
<tr>
<td>16</td>
<td>soak</td>
<td>vt.  吸收，吸入；沉浸在（工作或学习中）；使……上下湿透   <br />vi. 浸泡；渗透   n. 浸；湿透；大雨</td>
</tr>
<tr>
<td>17</td>
<td>holy</td>
<td>adj. 圣洁的，神圣的；至善的   <br />n. 神圣的东西</td>
</tr>
<tr>
<td>18</td>
<td>bride</td>
<td>n. 新娘；姑娘，女朋友</td>
</tr>
<tr>
<td>19</td>
<td>groom</td>
<td>v. （给动物）刷洗；  （给自己或其他动物）梳毛；（使）整洁；照料（草坪、滑雪坡等）；（使）做好准备；诱骗（儿童以图对其实施性侵犯）   <br />n. 马夫；新郎；王室侍从官</td>
</tr>
<tr>
<td>20</td>
<td>divorce</td>
<td>n. 离婚；分离；离婚判决；离婚的男子   <br />v. 与（某人）离婚；分离，脱离；彻底分割</td>
</tr>
<tr>
<td>21</td>
<td>disapproval</td>
<td>n. 不赞成；不喜欢</td>
</tr>
<tr>
<td>22</td>
<td>jointly</td>
<td>adv. 共同地；连带地</td>
</tr>
<tr>
<td>23</td>
<td>prejudice</td>
<td>n. 偏见；侵害   vt. 损害；使有偏见</td>
</tr>
<tr>
<td>24</td>
<td>lest</td>
<td>conj. 唯恐，以免；（引出产生某种情感的原因）唯恐，担心</td>
</tr>
<tr>
<td>25</td>
<td>by way of</td>
<td>经由；当作</td>
</tr>
<tr>
<td>26</td>
<td>with regard to</td>
<td>adv. 关于；至于</td>
</tr>
<tr>
<td>27</td>
<td>on behalf of</td>
<td>代表；为了</td>
</tr>
<tr>
<td>28</td>
<td>as well as</td>
<td>也；和…一样；不但…而且</td>
</tr>
<tr>
<td>29</td>
<td>decide on</td>
<td>决定；选定</td>
</tr>
<tr>
<td>30</td>
<td>provide for</td>
<td>供养，供给；规定；为…作准备</td>
</tr>
<tr>
<td>31</td>
<td>compete with</td>
<td>与…竞争</td>
</tr>
<tr>
<td>32</td>
<td>adapt to</td>
<td>使自己适应于…</td>
</tr>
<tr>
<td>33</td>
<td>postpone</td>
<td>vt. 使…延期；把…放在次要地位；把…放在后面   <br />vi. 延缓，延迟；延缓发作</td>
</tr>
<tr>
<td>34</td>
<td>recite</td>
<td>vt. 背诵；叙述；列举   vi. 背诵；叙述</td>
</tr>
<tr>
<td>35</td>
<td>fold</td>
<td>v.  折叠；可折叠；包；倒闭，停业；结束；把……调入；拥抱；突然不在状态；将牌面朝下表示放弃一盘   <br />n. 褶层；褶痕；羊圈；（地壳岩石层的）褶皱；山坳；折起的纸（或布）</td>
</tr>
<tr>
<td>36</td>
<td>pile</td>
<td>n. 堆；大量；建筑群   <br />vt. 累积；打桩于   <br />vi. 挤；堆积；积累</td>
</tr>
<tr>
<td>37</td>
<td>wrap</td>
<td>vt. 包；缠绕；隐藏；掩护   <br />vi. 包起来；缠绕；穿外衣；&lt;非正式&gt;完成拍摄，杀青   <br />n. 外套；围巾</td>
</tr>
<tr>
<td>38</td>
<td>tie</td>
<td>v.  （用线、绳等）系；系牢，打结；连接，联合；约束；与……成平局，不分胜负；用连接线连接（音符）   <br />n. 领带；鞋带；领结；绳子，金属丝；关系，纽带；束缚；系梁；平局；不分胜负；（英）淘汰赛（尤指足球）；延音线</td>
</tr>
<tr>
<td>39</td>
<td>whereas</td>
<td>conj. 然而；鉴于   <br />n. 序言，开场白；条件语句</td>
</tr>
<tr>
<td>40</td>
<td>wherever</td>
<td>adv. 无论什么地方；究竟在哪里   <br />conj. 无论在哪里；无论什么情况下</td>
</tr>
<tr>
<td>41</td>
<td>whatever</td>
<td>det.  任何事物；不管什么；究竟是什么；（非正式）无所谓   pron. 无论什么；诸如此类   <br />adj. 都，任何   <br />adv. 一点儿都不，丝毫；（非正式）不管怎样   <br />conj. 任何事物   <br />int. （非正式）随便（常暗示不感兴趣）</td>
</tr>
<tr>
<td>42</td>
<td>whenever</td>
<td>conj.  无论何时，无论什么情况；每当；别的什么时候（也可以）   adv. 不论何时，随便什么时候；究竟什么时候</td>
</tr>
<tr>
<td>43</td>
<td>however</td>
<td>adv.  无论如何；不管怎样（接副词或形容词）；然而；可是   <br />conj. 无论以何种方式; 不管怎样</td>
</tr>
<tr>
<td>44</td>
<td>invest</td>
<td>vt. 投资；覆盖；耗费；授予；包围   <br />vi. 投资，入股；花钱买</td>
</tr>
<tr>
<td>45</td>
<td>donate</td>
<td>vt. 捐赠；捐献   vi. 捐赠；捐献</td>
</tr>
<tr>
<td>46</td>
<td>withdrawn</td>
<td>v.  （使）撤离；撤销；取款；收回（前言）；退出（withdraw 的过去分词）  <br />adj. 沉默寡言的；与世隔绝的</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>考研英语</category>
      </categories>
      <tags>
        <tag>考研英语</tag>
        <tag>完形填空</tag>
        <tag>考研英语一</tag>
      </tags>
  </entry>
  <entry>
    <title>centos搭建redis哨兵模式</title>
    <url>/2020/06/11/centos%E6%90%AD%E5%BB%BAredis%E5%93%A8%E5%85%B5%E6%A8%A1%E5%BC%8F/</url>
    <content><![CDATA[<h3 id="1-前提条件"><a href="#1-前提条件" class="headerlink" title="1.前提条件"></a>1.前提条件</h3><p>服务器：1台centos7服务器</p>
<p>Redis版本：5.0.7</p>
<p>目标：搭建1主+2从+3哨兵</p>
<h3 id="2-准备Redis"><a href="#2-准备Redis" class="headerlink" title="2.准备Redis"></a>2.准备Redis</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 将redis-5.0.7.tar.gz上传到/usr/local/software目录下</span></span><br><span class="line"><span class="comment"># 解压redis-5.0.7.tar.gz</span></span><br><span class="line">tar -zxvf redis-5.0.7.tar.gz</span><br><span class="line"><span class="comment"># 进入文件夹</span></span><br><span class="line"><span class="built_in">cd</span> redis-5.0.7/</span><br><span class="line"><span class="comment"># 编译</span></span><br><span class="line">make &amp;&amp; make install</span><br><span class="line"><span class="comment"># 新建两个文件夹，分别放启动命令和配置文件</span></span><br><span class="line">mkdir bin</span><br><span class="line">mkdir conf</span><br><span class="line"><span class="comment"># 将命令和配置文件拷贝到上面两个目录</span></span><br><span class="line">cp src/redis-server bin</span><br><span class="line">cp src/redis-cli bin</span><br><span class="line">cp src/redis-sentinel bin</span><br><span class="line">cp redis.conf bin/redis.conf</span><br><span class="line">cp sentinel.conf  conf/</span><br><span class="line">cp redis.conf conf/</span><br></pre></td></tr></table></figure>

<h3 id="3-配置Redis主服务器"><a href="#3-配置Redis主服务器" class="headerlink" title="3.配置Redis主服务器"></a>3.配置Redis主服务器</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> conf</span><br><span class="line"><span class="comment"># 复制出一个主服务器的配置文件</span></span><br><span class="line">cp redis.conf redis-master-6379.conf</span><br><span class="line"><span class="comment"># 修改redis-master-6379.conf，主要修改项如下：</span></span><br><span class="line"><span class="built_in">bind</span> 0.0.0.0</span><br><span class="line">port 6379</span><br><span class="line">daemonize yes</span><br><span class="line">pidfile <span class="string">"/var/run/redis_6379.pid"</span></span><br><span class="line">masterauth <span class="string">"123456"</span></span><br><span class="line">requirepass <span class="string">"123456"</span></span><br></pre></td></tr></table></figure>

<h3 id="4-配置Redis从服务器"><a href="#4-配置Redis从服务器" class="headerlink" title="4.配置Redis从服务器"></a>4.配置Redis从服务器</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 仅以其中一台为例，另外一台大同小异</span></span><br><span class="line"><span class="comment"># 复制出一个从服务器的配置文件</span></span><br><span class="line">cp redis.conf redis-slave-6380.conf</span><br><span class="line"><span class="comment"># 修改redis-slave-6380.conf，主要修改项如下：</span></span><br><span class="line"><span class="built_in">bind</span> 0.0.0.0</span><br><span class="line">port 6380</span><br><span class="line">daemonize yes</span><br><span class="line">pidfile <span class="string">"/var/run/redis_6380.pid"</span></span><br><span class="line">replicaof 127.0.0.1 6379</span><br><span class="line">masterauth <span class="string">"123456"</span></span><br><span class="line">requirepass <span class="string">"123456"</span></span><br></pre></td></tr></table></figure>

<h3 id="5-配置Redis哨兵服务器"><a href="#5-配置Redis哨兵服务器" class="headerlink" title="5.配置Redis哨兵服务器"></a>5.配置Redis哨兵服务器</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 仅以其中一台为例，另外两台大同小异</span></span><br><span class="line">cp sentinel.conf sentinel-26379.conf</span><br><span class="line"><span class="comment"># 修改sentinel-26379.conf，主要修改项如下：</span></span><br><span class="line">port 26379</span><br><span class="line">daemonize yes</span><br><span class="line">pidfile <span class="string">"/var/run/redis-sentinel-26379.pid"</span></span><br><span class="line">sentinel monitor mymaster 127.0.0.1 6379 2</span><br><span class="line">sentinel auth-pass mymaster 123456</span><br></pre></td></tr></table></figure>

<h3 id="6-启动Redis服务器"><a href="#6-启动Redis服务器" class="headerlink" title="6.启动Redis服务器"></a>6.启动Redis服务器</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 启动1主2从服务器</span></span><br><span class="line">bin/redis-server conf/redis-master-6379.conf </span><br><span class="line">bin/redis-server conf/redis-slave-6380.conf </span><br><span class="line">bin/redis-server conf/redis-slave-6381.conf </span><br><span class="line"><span class="comment"># 启动哨兵服务器</span></span><br><span class="line">bin/redis-sentinel conf/sentinel-26379.conf </span><br><span class="line">bin/redis-sentinel conf/sentinel-26380.conf </span><br><span class="line">bin/redis-sentinel conf/sentinel-26381.conf</span><br></pre></td></tr></table></figure>

<h3 id="7-查看Redis进程"><a href="#7-查看Redis进程" class="headerlink" title="7.查看Redis进程"></a>7.查看Redis进程</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ps -ef | grep redis</span><br><span class="line">bin/redis-cli -p 6379</span><br><span class="line">127.0.0.1:6379&gt; auth 123456</span><br><span class="line">127.0.0.1:6379&gt; info</span><br><span class="line"><span class="comment"># 结果：</span></span><br><span class="line"><span class="comment"># Replication</span></span><br><span class="line">role:master</span><br><span class="line">connected_slaves:2</span><br><span class="line">slave0:ip=127.0.0.1,port=6381,state=online,offset=2586706,lag=0</span><br><span class="line">slave1:ip=127.0.0.1,port=6380,state=online,offset=2586972,lag=0</span><br><span class="line">master_replid:dadaab2ed3e438e6b39743c011773a17bac6fe9f</span><br><span class="line">master_replid2:e08112409c9f2042f65641905736d5767d97da5b</span><br><span class="line">master_repl_offset:2586972</span><br><span class="line">second_repl_offset:2571919</span><br><span class="line">repl_backlog_active:1</span><br><span class="line">repl_backlog_size:1048576</span><br><span class="line">repl_backlog_first_byte_offset:1950541</span><br><span class="line">repl_backlog_histlen:636432</span><br></pre></td></tr></table></figure>

<h3 id="8-关闭主服务器，查看效果"><a href="#8-关闭主服务器，查看效果" class="headerlink" title="8.关闭主服务器，查看效果"></a>8.关闭主服务器，查看效果</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; shutdown</span><br><span class="line">bin/redis-cli -p 6380</span><br><span class="line">127.0.0.1:6380&gt; auth 123456</span><br><span class="line">127.0.0.1:6380&gt; info</span><br><span class="line"><span class="comment"># 结果</span></span><br><span class="line"><span class="comment"># Replication</span></span><br><span class="line">role:master</span><br><span class="line">connected_slaves:1</span><br><span class="line">slave0:ip=127.0.0.1,port=6381,state=online,offset=2615121,lag=1</span><br><span class="line">master_replid:486a6a06dbf5268df7631b8f8ba2223ffd63013d</span><br><span class="line">master_replid2:dadaab2ed3e438e6b39743c011773a17bac6fe9f</span><br><span class="line">master_repl_offset:2615387</span><br><span class="line">second_repl_offset:2613888</span><br><span class="line">repl_backlog_active:1</span><br><span class="line">repl_backlog_size:1048576</span><br><span class="line">repl_backlog_first_byte_offset:2584941</span><br><span class="line">repl_backlog_histlen:30447</span><br></pre></td></tr></table></figure>













]]></content>
      <categories>
        <category>Redis</category>
      </categories>
      <tags>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title>Java3个编程题整理</title>
    <url>/2020/06/09/Java3%E4%B8%AA%E7%BC%96%E7%A8%8B%E9%A2%98%E6%95%B4%E7%90%86/</url>
    <content><![CDATA[<h3 id="1-代码实现单例模式中的懒汉模式"><a href="#1-代码实现单例模式中的懒汉模式" class="headerlink" title="1.代码实现单例模式中的懒汉模式"></a>1.代码实现单例模式中的懒汉模式</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 单例模式中的懒汉模式</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LazySingleton</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 用volatile 修饰类变量</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">volatile</span> LazySingleton singleton;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 构造器私有</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">LazySingleton</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 双重检查</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> LazySingleton <span class="title">getInstance</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(singleton == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">synchronized</span> (LazySingleton<span class="class">.<span class="keyword">class</span>)</span>&#123;</span><br><span class="line">                <span class="keyword">if</span>(singleton == <span class="keyword">null</span>)&#123;</span><br><span class="line">                    singleton = <span class="keyword">new</span> LazySingleton();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> singleton;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 测试</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        LazySingleton singleton1 = LazySingleton.getInstance();</span><br><span class="line">        LazySingleton singleton2 = LazySingleton.getInstance();</span><br><span class="line">        System.out.println(<span class="string">"singleton1:"</span>+singleton1);</span><br><span class="line">        System.out.println(<span class="string">"singleton2:"</span>+singleton2);</span><br><span class="line">        System.out.println(singleton1 == singleton2);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="2-编写一个Java程序在屏幕上输出1！-2！-3！-…-10-的和"><a href="#2-编写一个Java程序在屏幕上输出1！-2！-3！-…-10-的和" class="headerlink" title="2.编写一个Java程序在屏幕上输出1！+2！+3！+…+10!的和"></a>2.编写一个Java程序在屏幕上输出1！+2！+3！+…+10!的和</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Factorial</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 用遍历的方式解题</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">traverseMethod</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> i, j, mul, sum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= <span class="number">10</span>; i++) &#123;</span><br><span class="line">            mul = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">for</span> (j = <span class="number">1</span>; j &lt;= i; j++) &#123;</span><br><span class="line">                mul = mul * j;</span><br><span class="line">            &#125;</span><br><span class="line">            sum = sum + mul;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">"1！+2！+3！+...+10!="</span> + sum);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 用递归的方式解题</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">factorialMethod</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"1！+2！+3！+...+10!="</span></span><br><span class="line">                + (factorial(<span class="number">1</span>) + factorial(<span class="number">2</span>)</span><br><span class="line">                + factorial(<span class="number">3</span>) + factorial(<span class="number">4</span>)</span><br><span class="line">                + factorial(<span class="number">5</span>) + factorial(<span class="number">6</span>)</span><br><span class="line">                + factorial(<span class="number">7</span>) + factorial(<span class="number">8</span>)</span><br><span class="line">                + factorial(<span class="number">9</span>) + factorial(<span class="number">10</span>))</span><br><span class="line"></span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">factorial</span><span class="params">(<span class="keyword">int</span> num)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (num == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> num * factorial(num - <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 测试</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        traverseMethod();<span class="comment">//4037913</span></span><br><span class="line">        factorialMethod();<span class="comment">//4037913</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="3-设计一个生产电脑和搬运电脑类，要求生产一台电脑就搬走一台电脑，如果没有新的电脑生产出来，则搬运工要等待新电脑产出；如果生产出的电脑没有搬走，则要等待电脑搬走之后在生产，并统计出生产的电脑数量。"><a href="#3-设计一个生产电脑和搬运电脑类，要求生产一台电脑就搬走一台电脑，如果没有新的电脑生产出来，则搬运工要等待新电脑产出；如果生产出的电脑没有搬走，则要等待电脑搬走之后在生产，并统计出生产的电脑数量。" class="headerlink" title="3.设计一个生产电脑和搬运电脑类，要求生产一台电脑就搬走一台电脑，如果没有新的电脑生产出来，则搬运工要等待新电脑产出；如果生产出的电脑没有搬走，则要等待电脑搬走之后在生产，并统计出生产的电脑数量。"></a>3.设计一个生产电脑和搬运电脑类，要求生产一台电脑就搬走一台电脑，如果没有新的电脑生产出来，则搬运工要等待新电脑产出；如果生产出的电脑没有搬走，则要等待电脑搬走之后在生产，并统计出生产的电脑数量。</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ComputerTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> InterruptedException </span>&#123;</span><br><span class="line">        Computer computer = <span class="keyword">new</span> Computer();</span><br><span class="line"></span><br><span class="line">        Thread produceThread = <span class="keyword">new</span> Thread(() -&gt; &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    computer.produceComputer();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;, <span class="string">"produceThread"</span>);</span><br><span class="line">        produceThread.start();</span><br><span class="line">        Thread carryThread = <span class="keyword">new</span> Thread(() -&gt; &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    computer.carryComputer();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;, <span class="string">"carryThread"</span>);</span><br><span class="line">        carryThread.start();</span><br><span class="line"></span><br><span class="line">        produceThread.join();</span><br><span class="line">        carryThread.join();</span><br><span class="line">        </span><br><span class="line">        System.out.printf(<span class="string">"共生产了%s台电脑\n"</span>, computer.getComputerCount());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 电脑类</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">Computer</span> </span>&#123;</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 生产出的电脑的数量</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">int</span> computerCount;</span><br><span class="line">        <span class="comment">//电脑是否不为空 true-不为空 false为空</span></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">volatile</span> <span class="keyword">boolean</span> flag;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 获取生产出的电脑的数量</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getComputerCount</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> computerCount;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 生产电脑</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title">produceComputer</span><span class="params">()</span> <span class="keyword">throws</span> InterruptedException </span>&#123;</span><br><span class="line">            <span class="keyword">while</span> (flag) &#123;</span><br><span class="line">                wait();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">this</span>.computerCount++;</span><br><span class="line">            flag = <span class="keyword">true</span>;</span><br><span class="line">            System.out.printf(<span class="string">"%s 开始生产电脑\n"</span>, Thread.currentThread().getName());</span><br><span class="line">            notifyAll();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 搬运电脑</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title">carryComputer</span><span class="params">()</span> <span class="keyword">throws</span> InterruptedException </span>&#123;</span><br><span class="line">            <span class="comment">//让搬运电脑消耗1秒钟，看程序执行效果</span></span><br><span class="line">            TimeUnit.SECONDS.sleep(<span class="number">1</span>);</span><br><span class="line">            <span class="keyword">while</span> (!flag) &#123;</span><br><span class="line">                wait();</span><br><span class="line">            &#125;</span><br><span class="line">            flag = <span class="keyword">false</span>;</span><br><span class="line">            System.out.printf(<span class="string">"%s 开始搬运电脑\n"</span>, Thread.currentThread().getName());</span><br><span class="line">            notifyAll();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>编程题</tag>
      </tags>
  </entry>
  <entry>
    <title>ElasticSearch学习笔记-基础入门</title>
    <url>/2020/06/01/ElasticSearch%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8/</url>
    <content><![CDATA[<h3 id="1-启动ElasticSearch"><a href="#1-启动ElasticSearch" class="headerlink" title="1.启动ElasticSearch"></a>1.启动ElasticSearch</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 解压ElasticSearch压缩包</span></span><br><span class="line">tar -zxvf elasticsearch-7.6.1-linux-x86_64.tar.gz</span><br><span class="line"><span class="comment"># 复制两份</span></span><br><span class="line">cp -r elasticsearch-7.6.1 elasticsearch-7.6.1-node0</span><br><span class="line">cp -r elasticsearch-7.6.1 elasticsearch-7.6.1-node1</span><br><span class="line"><span class="comment"># 切换文件所有者</span></span><br><span class="line">chown -R doubledumbao:doubledumbao elasticsearch-7.6.1-node0</span><br><span class="line">chown -R doubledumbao:doubledumbao elasticsearch-7.6.1-node1</span><br><span class="line"><span class="comment"># 启动ElasticSearch</span></span><br><span class="line"><span class="built_in">cd</span> elasticsearch-7.6.1-node0</span><br><span class="line">bin/elasticsearch</span><br><span class="line"><span class="built_in">cd</span> elasticsearch-7.6.1-node1</span><br><span class="line">bin/elasticsearch</span><br><span class="line"><span class="comment"># 查看启动效果</span></span><br><span class="line">访问 http://172.20.10.10:9200</span><br><span class="line">或执行curl -XGET http://172.20.10.10:9200/_cluster/health\?pretty</span><br><span class="line">返回结果：</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"cluster_name"</span> : <span class="string">"elasticsearch"</span>,</span><br><span class="line">  <span class="string">"status"</span> : <span class="string">"yellow"</span>,</span><br><span class="line">  <span class="string">"timed_out"</span> : <span class="literal">false</span>,</span><br><span class="line">  <span class="string">"number_of_nodes"</span> : 1,</span><br><span class="line">  <span class="string">"number_of_data_nodes"</span> : 1,</span><br><span class="line">  <span class="string">"active_primary_shards"</span> : 8,</span><br><span class="line">  <span class="string">"active_shards"</span> : 8,</span><br><span class="line">  <span class="string">"relocating_shards"</span> : 0,</span><br><span class="line">  <span class="string">"initializing_shards"</span> : 0,</span><br><span class="line">  <span class="string">"unassigned_shards"</span> : 5,</span><br><span class="line">  <span class="string">"delayed_unassigned_shards"</span> : 0,</span><br><span class="line">  <span class="string">"number_of_pending_tasks"</span> : 0,</span><br><span class="line">  <span class="string">"number_of_in_flight_fetch"</span> : 0,</span><br><span class="line">  <span class="string">"task_max_waiting_in_queue_millis"</span> : 0,</span><br><span class="line">  <span class="string">"active_shards_percent_as_number"</span> : 61.53846153846154</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="2-RestfulAPI-with-JSON-over-HTTP"><a href="#2-RestfulAPI-with-JSON-over-HTTP" class="headerlink" title="2.RestfulAPI with JSON over HTTP"></a>2.RestfulAPI with JSON over HTTP</h3><p>一个 Elasticsearch 请求和任何 HTTP 请求一样由若干相同的部件组成：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">curl -X&lt;VERB&gt; &#39;&lt;PROTOCOL&gt;:&#x2F;&#x2F;&lt;HOST&gt;:&lt;PORT&gt;&#x2F;&lt;PATH&gt;?&lt;QUERY_STRING&gt;&#39; -d &#39;&lt;BODY&gt;&#39; -H &#39;content-Type:application&#x2F;json&#39;</span><br></pre></td></tr></table></figure>

<h3 id="3-增删改查"><a href="#3-增删改查" class="headerlink" title="3.增删改查"></a>3.增删改查</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 创建新文档</span></span><br><span class="line">curl -XPUT <span class="string">"http://localhost:9200/blog/_doc/3"</span> -H <span class="string">'Content-Type: application/json'</span> -d<span class="string">'&#123;  "title":"hello elastic",  "content":"...",  "tags":["hello","elastic","search"]&#125;'</span></span><br><span class="line"></span><br><span class="line">curl -XPOST <span class="string">"http://localhost:9200/blog/_doc"</span> -H <span class="string">'Content-Type: application/json'</span> -d<span class="string">'&#123;  "title":"hello world",  "content":"...",  "tags":["hello","elastic","search"]&#125;'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 检索文档</span></span><br><span class="line">curl -XGET <span class="string">"http://localhost:9200/blog/_doc/juh3ZHIBxU_8xX3GG9B3"</span></span><br><span class="line">curl -XGET <span class="string">"http://localhost:9200/blog/_doc/3"</span></span><br><span class="line"><span class="comment"># 更新文档</span></span><br><span class="line">curl -XPOST <span class="string">"http://localhost:9200/blog/_update/3"</span> -H <span class="string">'Content-Type: application/json'</span> -d<span class="string">'&#123;  "script":"ctx._source.content=\"new content 1\""&#125;'</span></span><br><span class="line"><span class="comment"># 检索文档</span></span><br><span class="line">curl -XGET <span class="string">"http://localhost:9200/blog/_doc/3"</span></span><br><span class="line"><span class="comment"># 删除文档</span></span><br><span class="line">curl -XDELETE <span class="string">"http://localhost:9200/blog/_doc/3"</span></span><br><span class="line"><span class="comment"># 检索文档</span></span><br><span class="line">curl -XGET <span class="string">"http://localhost:9200/blog/_doc/3"</span></span><br></pre></td></tr></table></figure>

<p><img src="https://note.youdao.com/yws/public/resource/2f38ce1b18dfb444da054423fcecaa34/xmlnote/16FD454CC5FD44059EF3BF32B5F9C049/5241" alt="kibana截图"></p>
<h3 id="4-模式映射定义索引结构"><a href="#4-模式映射定义索引结构" class="headerlink" title="4.模式映射定义索引结构"></a>4.模式映射定义索引结构</h3><p>新建posts.json</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"mappings"</span>:&#123;</span><br><span class="line">    <span class="attr">"properties"</span>:&#123;</span><br><span class="line">        <span class="attr">"id"</span>:&#123;<span class="attr">"type"</span>:<span class="string">"long"</span>,<span class="attr">"store"</span>:<span class="string">"yes"</span>,<span class="attr">"precision_step"</span>:<span class="string">"0"</span>&#125;,</span><br><span class="line">        <span class="attr">"name"</span>:&#123;<span class="attr">"type"</span>:<span class="string">"string"</span>,<span class="attr">"store"</span>:<span class="string">"yes"</span>,<span class="attr">"index"</span>:<span class="string">"analyzed"</span>&#125;,</span><br><span class="line">        <span class="attr">"published"</span>:&#123;<span class="attr">"type"</span>:<span class="string">"date"</span>,<span class="attr">"store"</span>:<span class="string">"yes"</span>,<span class="attr">"precision_step"</span>:<span class="string">"0"</span>&#125;,</span><br><span class="line">        <span class="attr">"contents"</span>:&#123;<span class="attr">"type"</span>:<span class="string">"string"</span>,<span class="attr">"store"</span>:<span class="string">"no"</span>,<span class="attr">"index"</span>:<span class="string">"analyzed"</span>&#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>创建posts索引</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">curl -XPOST &#39;http:&#x2F;&#x2F;localhost:9200&#x2F;posts&#39; -d @posts.json</span><br></pre></td></tr></table></figure>

<h3 id="5-轻量搜索"><a href="#5-轻量搜索" class="headerlink" title="5.轻量搜索"></a>5.轻量搜索</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># kibana 创建用户</span></span><br><span class="line">PUT /megacorp/employee/1</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">"first_name"</span> : <span class="string">"John"</span>,</span><br><span class="line">    <span class="string">"last_name"</span> :  <span class="string">"Smith"</span>,</span><br><span class="line">    <span class="string">"age"</span> :        25,</span><br><span class="line">    <span class="string">"about"</span> :      <span class="string">"I love to go rock climbing"</span>,</span><br><span class="line">    <span class="string">"interests"</span>: [ <span class="string">"sports"</span>, <span class="string">"music"</span> ]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">PUT /megacorp/employee/2</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">"first_name"</span> :  <span class="string">"Jane"</span>,</span><br><span class="line">    <span class="string">"last_name"</span> :   <span class="string">"Smith"</span>,</span><br><span class="line">    <span class="string">"age"</span> :         32,</span><br><span class="line">    <span class="string">"about"</span> :       <span class="string">"I like to collect rock albums"</span>,</span><br><span class="line">    <span class="string">"interests"</span>:  [ <span class="string">"music"</span> ]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">PUT /megacorp/employee/3</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">"first_name"</span> :  <span class="string">"Douglas"</span>,</span><br><span class="line">    <span class="string">"last_name"</span> :   <span class="string">"Fir"</span>,</span><br><span class="line">    <span class="string">"age"</span> :         35,</span><br><span class="line">    <span class="string">"about"</span>:        <span class="string">"I like to build cabinets"</span>,</span><br><span class="line">    <span class="string">"interests"</span>:  [ <span class="string">"forestry"</span> ]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 轻量搜索</span></span><br><span class="line">GET /megacorp/employee/_search</span><br></pre></td></tr></table></figure>

<p>可以看到，我们仍然使用索引库 megacorp 以及类型 employee，但与指定一个文档 ID 不同，这次使用 _search 。返回结果包括了所有三个文档，放在数组 hits 中。一个搜索默认返回十条结果。</p>
<p>接下来，尝试下搜索姓氏为 <code>Smith</code> 的雇员。为此，我们将使用一个 <em>高亮</em> 搜索，很容易通过命令行完成。这个方法一般涉及到一个 <em>查询字符串</em> （<em>query-string</em>） 搜索，因为我们通过一个URL参数来传递查询信息给搜索接口：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">GET /megacorp/employee/_search?q=last_name:Smith</span><br></pre></td></tr></table></figure>

<h3 id="6-使用查询表达式搜索"><a href="#6-使用查询表达式搜索" class="headerlink" title="6.使用查询表达式搜索"></a>6.使用查询表达式搜索</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">GET /megacorp/employee/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"query"</span>: &#123;</span><br><span class="line">    <span class="string">"match"</span>: &#123;</span><br><span class="line">      <span class="string">"last_name"</span>: <span class="string">"Smith"</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="7-更复杂的搜索"><a href="#7-更复杂的搜索" class="headerlink" title="7.更复杂的搜索"></a>7.更复杂的搜索</h3><p>现在尝试下更复杂的搜索。 同样搜索姓氏为 Smith 的员工，但这次我们只需要年龄大于 30 的。查询需要稍作调整，使用过滤器 <em>filter</em> ，它支持高效地执行一个结构化查询。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">GET /megacorp/employee/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"query"</span>: &#123;</span><br><span class="line">    <span class="string">"bool"</span>: &#123;</span><br><span class="line">      <span class="string">"must"</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="string">"match"</span>: &#123;</span><br><span class="line">            <span class="string">"last_name"</span>: <span class="string">"smith"</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      ],</span><br><span class="line">      <span class="string">"filter"</span>: &#123;</span><br><span class="line">        <span class="string">"range"</span>: &#123;</span><br><span class="line">          <span class="string">"age"</span>: &#123;</span><br><span class="line">            <span class="string">"gt"</span>: 30</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="8-全文搜索"><a href="#8-全文搜索" class="headerlink" title="8.全文搜索"></a>8.全文搜索</h3><p>现在尝试下稍微高级点儿的全文搜索——一项 传统数据库确实很难搞定的任务。</p>
<p>搜索下所有喜欢攀岩（rock climbing）的员工：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">GET /megacorp/employee/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"query"</span>:&#123;</span><br><span class="line">    <span class="string">"match"</span>: &#123;</span><br><span class="line">      <span class="string">"about"</span>: <span class="string">"rock climbing"</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>显然我们依旧使用之前的 <code>match</code> 查询在<code>about</code> 属性上搜索 “rock climbing” 。得到两个匹配的文档：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">#! Deprecation: [types removal] Specifying types in search requests is deprecated.</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">"took"</span> : <span class="number">3</span>,</span><br><span class="line">  <span class="attr">"timed_out"</span> : <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">"_shards"</span> : &#123;</span><br><span class="line">    <span class="attr">"total"</span> : <span class="number">1</span>,</span><br><span class="line">    <span class="attr">"successful"</span> : <span class="number">1</span>,</span><br><span class="line">    <span class="attr">"skipped"</span> : <span class="number">0</span>,</span><br><span class="line">    <span class="attr">"failed"</span> : <span class="number">0</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"hits"</span> : &#123;</span><br><span class="line">    <span class="attr">"total"</span> : &#123;</span><br><span class="line">      <span class="attr">"value"</span> : <span class="number">2</span>,</span><br><span class="line">      <span class="attr">"relation"</span> : <span class="string">"eq"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"max_score"</span> : <span class="number">1.4167401</span>,</span><br><span class="line">    <span class="attr">"hits"</span> : [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">"_index"</span> : <span class="string">"megacorp"</span>,</span><br><span class="line">        <span class="attr">"_type"</span> : <span class="string">"employee"</span>,</span><br><span class="line">        <span class="attr">"_id"</span> : <span class="string">"1"</span>,</span><br><span class="line">        <span class="attr">"_score"</span> : <span class="number">1.4167401</span>,</span><br><span class="line">        <span class="attr">"_source"</span> : &#123;</span><br><span class="line">          <span class="attr">"first_name"</span> : <span class="string">"John"</span>,</span><br><span class="line">          <span class="attr">"last_name"</span> : <span class="string">"Smith"</span>,</span><br><span class="line">          <span class="attr">"age"</span> : <span class="number">25</span>,</span><br><span class="line">          <span class="attr">"about"</span> : <span class="string">"I love to go rock climbing"</span>,</span><br><span class="line">          <span class="attr">"interests"</span> : [</span><br><span class="line">            <span class="string">"sports"</span>,</span><br><span class="line">            <span class="string">"music"</span></span><br><span class="line">          ]</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">"_index"</span> : <span class="string">"megacorp"</span>,</span><br><span class="line">        <span class="attr">"_type"</span> : <span class="string">"employee"</span>,</span><br><span class="line">        <span class="attr">"_id"</span> : <span class="string">"2"</span>,</span><br><span class="line">        <span class="attr">"_score"</span> : <span class="number">0.4589591</span>,</span><br><span class="line">        <span class="attr">"_source"</span> : &#123;</span><br><span class="line">          <span class="attr">"first_name"</span> : <span class="string">"Jane"</span>,</span><br><span class="line">          <span class="attr">"last_name"</span> : <span class="string">"Smith"</span>,</span><br><span class="line">          <span class="attr">"age"</span> : <span class="number">32</span>,</span><br><span class="line">          <span class="attr">"about"</span> : <span class="string">"I like to collect rock albums"</span>,</span><br><span class="line">          <span class="attr">"interests"</span> : [</span><br><span class="line">            <span class="string">"music"</span></span><br><span class="line">          ]</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>Elasticsearch 默认按照相关性得分排序，即每个文档跟查询的匹配程度。第一个最高得分的结果很明显：John Smith 的 <code>about</code> 属性清楚地写着 “rock climbing” 。</p>
<p>但为什么 Jane Smith 也作为结果返回了呢？原因是她的 <code>about</code> 属性里提到了 “rock” 。因为只有 “rock” 而没有 “climbing” ，所以她的相关性得分低于 John 的。</p>
<p>这是一个很好的案例，阐明了 Elasticsearch 如何 <em>在</em> 全文属性上搜索并返回相关性最强的结果。Elasticsearch中的 <em>相关性</em> 概念非常重要，也是完全区别于传统关系型数据库的一个概念，数据库中的一条记录要么匹配要么不匹配。</p>
<h3 id="9-短语搜索"><a href="#9-短语搜索" class="headerlink" title="9.短语搜索"></a>9.短语搜索</h3><p>找出一个属性中的独立单词是没有问题的，但有时候想要精确匹配一系列单词或者<em>短语</em> 。 比如， 我们想执行这样一个查询，仅匹配同时包含 “rock” <em>和</em> “climbing” ，<em>并且</em> 二者以短语 “rock climbing” 的形式紧挨着的雇员记录。</p>
<p>为此对 <code>match</code> 查询稍作调整，使用一个叫做 <code>match_phrase</code> 的查询：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">GET /megacorp/employee/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"query"</span>: &#123;</span><br><span class="line">    <span class="string">"match_phrase"</span>: &#123;</span><br><span class="line">      <span class="string">"about"</span>: <span class="string">"rock climbing"</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>毫无悬念，返回结果仅有 John Smith 的文档。</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">#! Deprecation: [types removal] Specifying types in search requests is deprecated.</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">"took"</span> : <span class="number">11</span>,</span><br><span class="line">  <span class="attr">"timed_out"</span> : <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">"_shards"</span> : &#123;</span><br><span class="line">    <span class="attr">"total"</span> : <span class="number">1</span>,</span><br><span class="line">    <span class="attr">"successful"</span> : <span class="number">1</span>,</span><br><span class="line">    <span class="attr">"skipped"</span> : <span class="number">0</span>,</span><br><span class="line">    <span class="attr">"failed"</span> : <span class="number">0</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"hits"</span> : &#123;</span><br><span class="line">    <span class="attr">"total"</span> : &#123;</span><br><span class="line">      <span class="attr">"value"</span> : <span class="number">1</span>,</span><br><span class="line">      <span class="attr">"relation"</span> : <span class="string">"eq"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"max_score"</span> : <span class="number">1.4167401</span>,</span><br><span class="line">    <span class="attr">"hits"</span> : [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">"_index"</span> : <span class="string">"megacorp"</span>,</span><br><span class="line">        <span class="attr">"_type"</span> : <span class="string">"employee"</span>,</span><br><span class="line">        <span class="attr">"_id"</span> : <span class="string">"1"</span>,</span><br><span class="line">        <span class="attr">"_score"</span> : <span class="number">1.4167401</span>,</span><br><span class="line">        <span class="attr">"_source"</span> : &#123;</span><br><span class="line">          <span class="attr">"first_name"</span> : <span class="string">"John"</span>,</span><br><span class="line">          <span class="attr">"last_name"</span> : <span class="string">"Smith"</span>,</span><br><span class="line">          <span class="attr">"age"</span> : <span class="number">25</span>,</span><br><span class="line">          <span class="attr">"about"</span> : <span class="string">"I love to go rock climbing"</span>,</span><br><span class="line">          <span class="attr">"interests"</span> : [</span><br><span class="line">            <span class="string">"sports"</span>,</span><br><span class="line">            <span class="string">"music"</span></span><br><span class="line">          ]</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="10-高亮搜索"><a href="#10-高亮搜索" class="headerlink" title="10.高亮搜索"></a>10.高亮搜索</h3><p>许多应用都倾向于在每个搜索结果中 <em>高亮</em> 部分文本片段，以便让用户知道为何该文档符合查询条件。在 Elasticsearch 中检索出高亮片段也很容易。</p>
<p>再次执行前面的查询，并增加一个新的 <code>highlight</code> 参数：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">GET /megacorp/employee/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"query"</span>:&#123;</span><br><span class="line">    <span class="string">"match_phrase"</span>: &#123;</span><br><span class="line">      <span class="string">"about"</span>: <span class="string">"rock climbing"</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"highlight"</span>: &#123;</span><br><span class="line">    <span class="string">"fields"</span>: &#123;</span><br><span class="line">      <span class="string">"about"</span>:&#123;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>当执行该查询时，返回结果与之前一样，与此同时结果中还多了一个叫做 <code>highlight</code> 的部分。这个部分包含了 <code>about</code> 属性匹配的文本片段，并以 HTML 标签 `` 封装：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">#! Deprecation: [types removal] Specifying types in search requests is deprecated.</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">"took"</span> : <span class="number">83</span>,</span><br><span class="line">  <span class="attr">"timed_out"</span> : <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">"_shards"</span> : &#123;</span><br><span class="line">    <span class="attr">"total"</span> : <span class="number">1</span>,</span><br><span class="line">    <span class="attr">"successful"</span> : <span class="number">1</span>,</span><br><span class="line">    <span class="attr">"skipped"</span> : <span class="number">0</span>,</span><br><span class="line">    <span class="attr">"failed"</span> : <span class="number">0</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"hits"</span> : &#123;</span><br><span class="line">    <span class="attr">"total"</span> : &#123;</span><br><span class="line">      <span class="attr">"value"</span> : <span class="number">1</span>,</span><br><span class="line">      <span class="attr">"relation"</span> : <span class="string">"eq"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"max_score"</span> : <span class="number">1.4167401</span>,</span><br><span class="line">    <span class="attr">"hits"</span> : [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">"_index"</span> : <span class="string">"megacorp"</span>,</span><br><span class="line">        <span class="attr">"_type"</span> : <span class="string">"employee"</span>,</span><br><span class="line">        <span class="attr">"_id"</span> : <span class="string">"1"</span>,</span><br><span class="line">        <span class="attr">"_score"</span> : <span class="number">1.4167401</span>,</span><br><span class="line">        <span class="attr">"_source"</span> : &#123;</span><br><span class="line">          <span class="attr">"first_name"</span> : <span class="string">"John"</span>,</span><br><span class="line">          <span class="attr">"last_name"</span> : <span class="string">"Smith"</span>,</span><br><span class="line">          <span class="attr">"age"</span> : <span class="number">25</span>,</span><br><span class="line">          <span class="attr">"about"</span> : <span class="string">"I love to go rock climbing"</span>,</span><br><span class="line">          <span class="attr">"interests"</span> : [</span><br><span class="line">            <span class="string">"sports"</span>,</span><br><span class="line">            <span class="string">"music"</span></span><br><span class="line">          ]</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">"highlight"</span> : &#123;</span><br><span class="line">          <span class="attr">"about"</span> : [</span><br><span class="line">            <span class="string">"I love to go &lt;em&gt;rock&lt;/em&gt; &lt;em&gt;climbing&lt;/em&gt;"</span></span><br><span class="line">          ]</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="11-分析"><a href="#11-分析" class="headerlink" title="11.分析"></a>11.分析</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 分析</span></span><br><span class="line">GET /megacorp/employee/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"aggs"</span>: &#123;</span><br><span class="line">    <span class="string">"all_interests"</span>: &#123;</span><br><span class="line">      <span class="string">"terms"</span>: &#123;</span><br><span class="line">        <span class="string">"field"</span>: <span class="string">"interests"</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>报错：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"error"</span> : &#123;</span><br><span class="line">    <span class="attr">"root_cause"</span> : [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">"type"</span> : <span class="string">"illegal_argument_exception"</span>,</span><br><span class="line">        <span class="attr">"reason"</span> : <span class="string">"Text fields are not optimised for operations that require per-document field data like aggregations and sorting, so these operations are disabled by default. Please use a keyword field instead. Alternatively, set fielddata=true on [interests] in order to load field data by uninverting the inverted index. Note that this can use significant memory."</span></span><br><span class="line">      &#125;</span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">"type"</span> : <span class="string">"search_phase_execution_exception"</span>,</span><br><span class="line">    <span class="attr">"reason"</span> : <span class="string">"all shards failed"</span>,</span><br><span class="line">    <span class="attr">"phase"</span> : <span class="string">"query"</span>,</span><br><span class="line">    <span class="attr">"grouped"</span> : <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">"failed_shards"</span> : [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">"shard"</span> : <span class="number">0</span>,</span><br><span class="line">        <span class="attr">"index"</span> : <span class="string">"megacorp"</span>,</span><br><span class="line">        <span class="attr">"node"</span> : <span class="string">"IQhLB1EORK6c18R9ROd1uA"</span>,</span><br><span class="line">        <span class="attr">"reason"</span> : &#123;</span><br><span class="line">          <span class="attr">"type"</span> : <span class="string">"illegal_argument_exception"</span>,</span><br><span class="line">          <span class="attr">"reason"</span> : <span class="string">"Text fields are not optimised for operations that require per-document field data like aggregations and sorting, so these operations are disabled by default. Please use a keyword field instead. Alternatively, set fielddata=true on [interests] in order to load field data by uninverting the inverted index. Note that this can use significant memory."</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">"caused_by"</span> : &#123;</span><br><span class="line">      <span class="attr">"type"</span> : <span class="string">"illegal_argument_exception"</span>,</span><br><span class="line">      <span class="attr">"reason"</span> : <span class="string">"Text fields are not optimised for operations that require per-document field data like aggregations and sorting, so these operations are disabled by default. Please use a keyword field instead. Alternatively, set fielddata=true on [interests] in order to load field data by uninverting the inverted index. Note that this can use significant memory."</span>,</span><br><span class="line">      <span class="attr">"caused_by"</span> : &#123;</span><br><span class="line">        <span class="attr">"type"</span> : <span class="string">"illegal_argument_exception"</span>,</span><br><span class="line">        <span class="attr">"reason"</span> : <span class="string">"Text fields are not optimised for operations that require per-document field data like aggregations and sorting, so these operations are disabled by default. Please use a keyword field instead. Alternatively, set fielddata=true on [interests] in order to load field data by uninverting the inverted index. Note that this can use significant memory."</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"status"</span> : <span class="number">400</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>解决报错：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">POST /megacorp/_mapping/</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"employee"</span>: &#123;</span><br><span class="line">    <span class="string">"properties"</span>: &#123;</span><br><span class="line">      <span class="string">"interests"</span>: &#123;</span><br><span class="line">        <span class="string">"type"</span>: <span class="string">"text"</span>,</span><br><span class="line">        <span class="string">"fielddata"</span>: <span class="literal">true</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 分析</span><br><span class="line">GET &#x2F;megacorp&#x2F;employee&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;aggs&quot;: &#123;</span><br><span class="line">    &quot;all_interests&quot;: &#123;</span><br><span class="line">      &quot;terms&quot;: &#123;</span><br><span class="line">        &quot;field&quot;: &quot;interests&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>返回结果：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">#! Deprecation: [types removal] Specifying types in search requests is deprecated.</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">"took"</span> : <span class="number">9</span>,</span><br><span class="line">  <span class="attr">"timed_out"</span> : <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">"_shards"</span> : &#123;</span><br><span class="line">    <span class="attr">"total"</span> : <span class="number">1</span>,</span><br><span class="line">    <span class="attr">"successful"</span> : <span class="number">1</span>,</span><br><span class="line">    <span class="attr">"skipped"</span> : <span class="number">0</span>,</span><br><span class="line">    <span class="attr">"failed"</span> : <span class="number">0</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"hits"</span> : &#123;</span><br><span class="line">    <span class="attr">"total"</span> : &#123;</span><br><span class="line">      <span class="attr">"value"</span> : <span class="number">3</span>,</span><br><span class="line">      <span class="attr">"relation"</span> : <span class="string">"eq"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"max_score"</span> : <span class="number">1.0</span>,</span><br><span class="line">    <span class="attr">"hits"</span> : [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">"_index"</span> : <span class="string">"megacorp"</span>,</span><br><span class="line">        <span class="attr">"_type"</span> : <span class="string">"employee"</span>,</span><br><span class="line">        <span class="attr">"_id"</span> : <span class="string">"1"</span>,</span><br><span class="line">        <span class="attr">"_score"</span> : <span class="number">1.0</span>,</span><br><span class="line">        <span class="attr">"_source"</span> : &#123;</span><br><span class="line">          <span class="attr">"first_name"</span> : <span class="string">"John"</span>,</span><br><span class="line">          <span class="attr">"last_name"</span> : <span class="string">"Smith"</span>,</span><br><span class="line">          <span class="attr">"age"</span> : <span class="number">25</span>,</span><br><span class="line">          <span class="attr">"about"</span> : <span class="string">"I love to go rock climbing"</span>,</span><br><span class="line">          <span class="attr">"interests"</span> : [</span><br><span class="line">            <span class="string">"sports"</span>,</span><br><span class="line">            <span class="string">"music"</span></span><br><span class="line">          ]</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">"_index"</span> : <span class="string">"megacorp"</span>,</span><br><span class="line">        <span class="attr">"_type"</span> : <span class="string">"employee"</span>,</span><br><span class="line">        <span class="attr">"_id"</span> : <span class="string">"2"</span>,</span><br><span class="line">        <span class="attr">"_score"</span> : <span class="number">1.0</span>,</span><br><span class="line">        <span class="attr">"_source"</span> : &#123;</span><br><span class="line">          <span class="attr">"first_name"</span> : <span class="string">"Jane"</span>,</span><br><span class="line">          <span class="attr">"last_name"</span> : <span class="string">"Smith"</span>,</span><br><span class="line">          <span class="attr">"age"</span> : <span class="number">32</span>,</span><br><span class="line">          <span class="attr">"about"</span> : <span class="string">"I like to collect rock albums"</span>,</span><br><span class="line">          <span class="attr">"interests"</span> : [</span><br><span class="line">            <span class="string">"music"</span></span><br><span class="line">          ]</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">"_index"</span> : <span class="string">"megacorp"</span>,</span><br><span class="line">        <span class="attr">"_type"</span> : <span class="string">"employee"</span>,</span><br><span class="line">        <span class="attr">"_id"</span> : <span class="string">"3"</span>,</span><br><span class="line">        <span class="attr">"_score"</span> : <span class="number">1.0</span>,</span><br><span class="line">        <span class="attr">"_source"</span> : &#123;</span><br><span class="line">          <span class="attr">"first_name"</span> : <span class="string">"Douglas"</span>,</span><br><span class="line">          <span class="attr">"last_name"</span> : <span class="string">"Fir"</span>,</span><br><span class="line">          <span class="attr">"age"</span> : <span class="number">35</span>,</span><br><span class="line">          <span class="attr">"about"</span> : <span class="string">"I like to build cabinets"</span>,</span><br><span class="line">          <span class="attr">"interests"</span> : [</span><br><span class="line">            <span class="string">"forestry"</span></span><br><span class="line">          ]</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"aggregations"</span> : &#123;</span><br><span class="line">    <span class="attr">"all_interests"</span> : &#123;</span><br><span class="line">      <span class="attr">"doc_count_error_upper_bound"</span> : <span class="number">0</span>,</span><br><span class="line">      <span class="attr">"sum_other_doc_count"</span> : <span class="number">0</span>,</span><br><span class="line">      <span class="attr">"buckets"</span> : [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">"key"</span> : <span class="string">"music"</span>,</span><br><span class="line">          <span class="attr">"doc_count"</span> : <span class="number">2</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">"key"</span> : <span class="string">"forestry"</span>,</span><br><span class="line">          <span class="attr">"doc_count"</span> : <span class="number">1</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">"key"</span> : <span class="string">"sports"</span>,</span><br><span class="line">          <span class="attr">"doc_count"</span> : <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>可以看到，两位员工对音乐感兴趣，一位对林业感兴趣，一位对运动感兴趣。这些聚合的结果数据并非预先统计，而是根据匹配当前查询的文档即时生成的。如果想知道叫 Smith 的员工中最受欢迎的兴趣爱好，可以直接构造一个组合查询：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">GET /megacorp/employee/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"query"</span>: &#123;</span><br><span class="line">    <span class="string">"match"</span>: &#123;</span><br><span class="line">      <span class="string">"last_name"</span>: <span class="string">"smith"</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"aggs"</span>: &#123;</span><br><span class="line">    <span class="string">"all_interests"</span>: &#123;</span><br><span class="line">      <span class="string">"terms"</span>: &#123;</span><br><span class="line">        <span class="string">"field"</span>: <span class="string">"interests"</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><code>all_interests</code> 聚合已经变为只包含匹配查询的文档：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">#! Deprecation: [types removal] Specifying types in search requests is deprecated.</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">"took"</span> : <span class="number">1</span>,</span><br><span class="line">  <span class="attr">"timed_out"</span> : <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">"_shards"</span> : &#123;</span><br><span class="line">    <span class="attr">"total"</span> : <span class="number">1</span>,</span><br><span class="line">    <span class="attr">"successful"</span> : <span class="number">1</span>,</span><br><span class="line">    <span class="attr">"skipped"</span> : <span class="number">0</span>,</span><br><span class="line">    <span class="attr">"failed"</span> : <span class="number">0</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"hits"</span> : &#123;</span><br><span class="line">    <span class="attr">"total"</span> : &#123;</span><br><span class="line">      <span class="attr">"value"</span> : <span class="number">2</span>,</span><br><span class="line">      <span class="attr">"relation"</span> : <span class="string">"eq"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"max_score"</span> : <span class="number">0.4700036</span>,</span><br><span class="line">    <span class="attr">"hits"</span> : [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">"_index"</span> : <span class="string">"megacorp"</span>,</span><br><span class="line">        <span class="attr">"_type"</span> : <span class="string">"employee"</span>,</span><br><span class="line">        <span class="attr">"_id"</span> : <span class="string">"1"</span>,</span><br><span class="line">        <span class="attr">"_score"</span> : <span class="number">0.4700036</span>,</span><br><span class="line">        <span class="attr">"_source"</span> : &#123;</span><br><span class="line">          <span class="attr">"first_name"</span> : <span class="string">"John"</span>,</span><br><span class="line">          <span class="attr">"last_name"</span> : <span class="string">"Smith"</span>,</span><br><span class="line">          <span class="attr">"age"</span> : <span class="number">25</span>,</span><br><span class="line">          <span class="attr">"about"</span> : <span class="string">"I love to go rock climbing"</span>,</span><br><span class="line">          <span class="attr">"interests"</span> : [</span><br><span class="line">            <span class="string">"sports"</span>,</span><br><span class="line">            <span class="string">"music"</span></span><br><span class="line">          ]</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">"_index"</span> : <span class="string">"megacorp"</span>,</span><br><span class="line">        <span class="attr">"_type"</span> : <span class="string">"employee"</span>,</span><br><span class="line">        <span class="attr">"_id"</span> : <span class="string">"2"</span>,</span><br><span class="line">        <span class="attr">"_score"</span> : <span class="number">0.4700036</span>,</span><br><span class="line">        <span class="attr">"_source"</span> : &#123;</span><br><span class="line">          <span class="attr">"first_name"</span> : <span class="string">"Jane"</span>,</span><br><span class="line">          <span class="attr">"last_name"</span> : <span class="string">"Smith"</span>,</span><br><span class="line">          <span class="attr">"age"</span> : <span class="number">32</span>,</span><br><span class="line">          <span class="attr">"about"</span> : <span class="string">"I like to collect rock albums"</span>,</span><br><span class="line">          <span class="attr">"interests"</span> : [</span><br><span class="line">            <span class="string">"music"</span></span><br><span class="line">          ]</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"aggregations"</span> : &#123;</span><br><span class="line">    <span class="attr">"all_interest"</span> : &#123;</span><br><span class="line">      <span class="attr">"doc_count_error_upper_bound"</span> : <span class="number">0</span>,</span><br><span class="line">      <span class="attr">"sum_other_doc_count"</span> : <span class="number">0</span>,</span><br><span class="line">      <span class="attr">"buckets"</span> : [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">"key"</span> : <span class="string">"music"</span>,</span><br><span class="line">          <span class="attr">"doc_count"</span> : <span class="number">2</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">"key"</span> : <span class="string">"sports"</span>,</span><br><span class="line">          <span class="attr">"doc_count"</span> : <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>分级查询</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">GET /megacorp/employee/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"aggs"</span>: &#123;</span><br><span class="line">    <span class="string">"all_interests"</span>: &#123;</span><br><span class="line">      <span class="string">"terms"</span>: &#123;</span><br><span class="line">        <span class="string">"field"</span>: <span class="string">"interests"</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="string">"aggs"</span>: &#123;</span><br><span class="line">        <span class="string">"avg_age"</span>: &#123;</span><br><span class="line">          <span class="string">"avg"</span>: &#123;</span><br><span class="line">            <span class="string">"field"</span>: <span class="string">"age"</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>查询结果：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">#! Deprecation: [types removal] Specifying types in search requests is deprecated.</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">"took"</span> : <span class="number">5</span>,</span><br><span class="line">  <span class="attr">"timed_out"</span> : <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">"_shards"</span> : &#123;</span><br><span class="line">    <span class="attr">"total"</span> : <span class="number">1</span>,</span><br><span class="line">    <span class="attr">"successful"</span> : <span class="number">1</span>,</span><br><span class="line">    <span class="attr">"skipped"</span> : <span class="number">0</span>,</span><br><span class="line">    <span class="attr">"failed"</span> : <span class="number">0</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"hits"</span> : &#123;</span><br><span class="line">    <span class="attr">"total"</span> : &#123;</span><br><span class="line">      <span class="attr">"value"</span> : <span class="number">3</span>,</span><br><span class="line">      <span class="attr">"relation"</span> : <span class="string">"eq"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"max_score"</span> : <span class="number">1.0</span>,</span><br><span class="line">    <span class="attr">"hits"</span> : [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">"_index"</span> : <span class="string">"megacorp"</span>,</span><br><span class="line">        <span class="attr">"_type"</span> : <span class="string">"employee"</span>,</span><br><span class="line">        <span class="attr">"_id"</span> : <span class="string">"1"</span>,</span><br><span class="line">        <span class="attr">"_score"</span> : <span class="number">1.0</span>,</span><br><span class="line">        <span class="attr">"_source"</span> : &#123;</span><br><span class="line">          <span class="attr">"first_name"</span> : <span class="string">"John"</span>,</span><br><span class="line">          <span class="attr">"last_name"</span> : <span class="string">"Smith"</span>,</span><br><span class="line">          <span class="attr">"age"</span> : <span class="number">25</span>,</span><br><span class="line">          <span class="attr">"about"</span> : <span class="string">"I love to go rock climbing"</span>,</span><br><span class="line">          <span class="attr">"interests"</span> : [</span><br><span class="line">            <span class="string">"sports"</span>,</span><br><span class="line">            <span class="string">"music"</span></span><br><span class="line">          ]</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">"_index"</span> : <span class="string">"megacorp"</span>,</span><br><span class="line">        <span class="attr">"_type"</span> : <span class="string">"employee"</span>,</span><br><span class="line">        <span class="attr">"_id"</span> : <span class="string">"2"</span>,</span><br><span class="line">        <span class="attr">"_score"</span> : <span class="number">1.0</span>,</span><br><span class="line">        <span class="attr">"_source"</span> : &#123;</span><br><span class="line">          <span class="attr">"first_name"</span> : <span class="string">"Jane"</span>,</span><br><span class="line">          <span class="attr">"last_name"</span> : <span class="string">"Smith"</span>,</span><br><span class="line">          <span class="attr">"age"</span> : <span class="number">32</span>,</span><br><span class="line">          <span class="attr">"about"</span> : <span class="string">"I like to collect rock albums"</span>,</span><br><span class="line">          <span class="attr">"interests"</span> : [</span><br><span class="line">            <span class="string">"music"</span></span><br><span class="line">          ]</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">"_index"</span> : <span class="string">"megacorp"</span>,</span><br><span class="line">        <span class="attr">"_type"</span> : <span class="string">"employee"</span>,</span><br><span class="line">        <span class="attr">"_id"</span> : <span class="string">"3"</span>,</span><br><span class="line">        <span class="attr">"_score"</span> : <span class="number">1.0</span>,</span><br><span class="line">        <span class="attr">"_source"</span> : &#123;</span><br><span class="line">          <span class="attr">"first_name"</span> : <span class="string">"Douglas"</span>,</span><br><span class="line">          <span class="attr">"last_name"</span> : <span class="string">"Fir"</span>,</span><br><span class="line">          <span class="attr">"age"</span> : <span class="number">35</span>,</span><br><span class="line">          <span class="attr">"about"</span> : <span class="string">"I like to build cabinets"</span>,</span><br><span class="line">          <span class="attr">"interests"</span> : [</span><br><span class="line">            <span class="string">"forestry"</span></span><br><span class="line">          ]</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"aggregations"</span> : &#123;</span><br><span class="line">    <span class="attr">"all_interests"</span> : &#123;</span><br><span class="line">      <span class="attr">"doc_count_error_upper_bound"</span> : <span class="number">0</span>,</span><br><span class="line">      <span class="attr">"sum_other_doc_count"</span> : <span class="number">0</span>,</span><br><span class="line">      <span class="attr">"buckets"</span> : [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">"key"</span> : <span class="string">"music"</span>,</span><br><span class="line">          <span class="attr">"doc_count"</span> : <span class="number">2</span>,</span><br><span class="line">          <span class="attr">"avg_age"</span> : &#123;</span><br><span class="line">            <span class="attr">"value"</span> : <span class="number">28.5</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">"key"</span> : <span class="string">"forestry"</span>,</span><br><span class="line">          <span class="attr">"doc_count"</span> : <span class="number">1</span>,</span><br><span class="line">          <span class="attr">"avg_age"</span> : &#123;</span><br><span class="line">            <span class="attr">"value"</span> : <span class="number">35.0</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">"key"</span> : <span class="string">"sports"</span>,</span><br><span class="line">          <span class="attr">"doc_count"</span> : <span class="number">1</span>,</span><br><span class="line">          <span class="attr">"avg_age"</span> : &#123;</span><br><span class="line">            <span class="attr">"value"</span> : <span class="number">25.0</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>输出基本是第一次聚合的加强版。依然有一个兴趣及数量的列表，只不过每个兴趣都有了一个附加的 <code>avg_age</code> 属性，代表有这个兴趣爱好的所有员工的平均年龄。</p>
]]></content>
      <categories>
        <category>ElasticSearch</category>
      </categories>
      <tags>
        <tag>ElasticSearch</tag>
      </tags>
  </entry>
  <entry>
    <title>SpringCloud07-OpenFeign</title>
    <url>/2020/05/30/SpringCloud07-OpenFeign/</url>
    <content><![CDATA[<h3 id="1-新建module，cloud-consumer-openfeign-order80"><a href="#1-新建module，cloud-consumer-openfeign-order80" class="headerlink" title="1.新建module，cloud-consumer-openfeign-order80"></a>1.新建module，cloud-consumer-openfeign-order80</h3><h3 id="2-pom-xml新增openfeign的依赖"><a href="#2-pom-xml新增openfeign的依赖" class="headerlink" title="2.pom.xml新增openfeign的依赖"></a>2.pom.xml新增openfeign的依赖</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>myspringcloud2020<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>cloud-consumer-openfeign-order80<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span>        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-web --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>cloud-api-common<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;project.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span>        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-web  --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-actuator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span>        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-devtools --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-devtools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span>        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.projectlombok/lombok --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span>        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-test --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-eureka-client<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 添加OpenFeign依赖--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-openfeign<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="3-添加application-yml"><a href="#3-添加application-yml" class="headerlink" title="3.添加application.yml"></a>3.添加application.yml</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8080</span></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">    <span class="comment"># 不注册到eureka</span></span><br><span class="line">    <span class="attr">register-with-eureka:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">fetch-registry:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">service-url:</span></span><br><span class="line">      <span class="attr">defaultZone:</span> <span class="string">http://eureka7001.com:7001/eureka,http://eureka7002.com:7002/eureka</span></span><br></pre></td></tr></table></figure>

<h3 id="4-编写主启动类"><a href="#4-编写主启动类" class="headerlink" title="4.编写主启动类"></a>4.编写主启动类</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.openfeign.EnableFeignClients;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="comment">//开启feignclient</span></span><br><span class="line"><span class="meta">@EnableFeignClients</span> </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OpenFeignOrderMain80</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(OpenFeignOrderMain80<span class="class">.<span class="keyword">class</span>,<span class="title">args</span>)</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="5-编写服务接口"><a href="#5-编写服务接口" class="headerlink" title="5.编写服务接口"></a>5.编写服务接口</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.springcloud.entity.CommonResult;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.openfeign.FeignClient;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PathVariable;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="comment">// value的值为注册中心中服务提供者的实例名称</span></span><br><span class="line"><span class="meta">@FeignClient</span>(value = <span class="string">"CLOUD-PAYMENT-SERVICE"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">PaymentService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/payment/query/&#123;id&#125;"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> CommonResult <span class="title">query</span><span class="params">(@PathVariable(value = <span class="string">"id"</span>)</span> Long id)</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="6-编写controller"><a href="#6-编写controller" class="headerlink" title="6.编写controller"></a>6.编写controller</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.service.PaymentService;</span><br><span class="line"><span class="keyword">import</span> com.example.springcloud.entity.CommonResult;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PathVariable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.annotation.Resource;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> doubledumbao</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OrderController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> PaymentService paymentService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/consumer/payment/query/&#123;id&#125;"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> CommonResult <span class="title">query</span><span class="params">(@PathVariable Long id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> paymentService.query(id);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="7-启动eureka、服务提供者服务器"><a href="#7-启动eureka、服务提供者服务器" class="headerlink" title="7.启动eureka、服务提供者服务器"></a>7.启动eureka、服务提供者服务器</h3><p><img src="https://note.youdao.com/yws/public/resource/39b193855d599eafedae6895998ea5b5/xmlnote/598E8CE471014779A4D99A5F77863C53/5236" alt="启动服务器"></p>
<h3 id="8-调用接口，查看效果"><a href="#8-调用接口，查看效果" class="headerlink" title="8.调用接口，查看效果"></a>8.调用接口，查看效果</h3><p><img src="https://note.youdao.com/yws/public/resource/39b193855d599eafedae6895998ea5b5/xmlnote/1F9C629B1A034468BD3B1D912FB517FB/5238" alt="效果"></p>
<h3 id="9-配置openFeign的超时时间"><a href="#9-配置openFeign的超时时间" class="headerlink" title="9.配置openFeign的超时时间"></a>9.配置openFeign的超时时间</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 设置feign客户端超时时间(OpenFeign默认支持ribbon)</span></span><br><span class="line"><span class="comment">#ribbon:</span></span><br><span class="line">  <span class="comment">#ReadTimeout: 5000</span></span><br><span class="line">  <span class="comment">#ConnectTimeout: 5000</span></span><br><span class="line"><span class="attr">feign:</span></span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">    <span class="attr">config:</span></span><br><span class="line">      <span class="attr">default:</span></span><br><span class="line">        <span class="attr">connectTimeout:</span> <span class="number">5000</span></span><br><span class="line">        <span class="attr">readTimeout:</span> <span class="number">5000</span></span><br></pre></td></tr></table></figure>

<p>测试代码：</p>
<p>8001服务提供<a href="http://localhost:8001/payment/timeout，代码如下：" target="_blank" rel="noopener">http://localhost:8001/payment/timeout，代码如下：</a></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@GetMapping</span>(<span class="string">"/timeout"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">paymentTimeout</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        TimeUnit.SECONDS.sleep(<span class="number">3</span>);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> port;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>8080服务PaymentService添加paymentTimeout()方法</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="comment">// value的值为注册中心中服务提供者的实例名称</span></span><br><span class="line"><span class="meta">@FeignClient</span>(value = <span class="string">"CLOUD-PAYMENT-SERVICE"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">PaymentService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/payment/query/&#123;id&#125;"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> CommonResult <span class="title">query</span><span class="params">(@PathVariable(value = <span class="string">"id"</span>)</span> Long id)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/payment/timeout"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">paymentTimeout</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>OrderController添加方法paymentTimeout()方法</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@GetMapping</span>(<span class="string">"/consumer/payment/timeout"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">paymentTimeout</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> paymentService.paymentTimeout();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="10-openFeign日志增强"><a href="#10-openFeign日志增强" class="headerlink" title="10.openFeign日志增强"></a>10.openFeign日志增强</h3><p>添加配置类</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> feign.Logger;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 配置openFeign的日志级别</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> doubledumbao</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FeignConfiguration</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    Logger.<span class="function">Level <span class="title">feignLoggerLevel</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> Logger.Level.FULL;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>修改application.yml</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 配置openFeign的日志级别</span></span><br><span class="line"><span class="attr">logging:</span></span><br><span class="line">  <span class="attr">level:</span></span><br><span class="line">    <span class="attr">com:</span></span><br><span class="line">      <span class="attr">example:</span></span><br><span class="line">        <span class="attr">service:</span></span><br><span class="line">          <span class="attr">PaymentService:</span> <span class="string">debug</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>SpringCloud</category>
      </categories>
      <tags>
        <tag>SpringCloud</tag>
      </tags>
  </entry>
  <entry>
    <title>Springboot日志初探</title>
    <url>/2020/05/29/Springboot%E6%97%A5%E5%BF%97%E5%88%9D%E6%8E%A2/</url>
    <content><![CDATA[<h3 id="1-新建module，springboot-log"><a href="#1-新建module，springboot-log" class="headerlink" title="1.新建module，springboot-log"></a>1.新建module，springboot-log</h3><h3 id="2-pom-xml"><a href="#2-pom-xml" class="headerlink" title="2.pom.xml"></a>2.pom.xml</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.3.0.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.lxcourse<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springboot-log<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>springboot-log<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>Demo project for Spring Boot<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.junit.vintage<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit-vintage-engine<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="3-application-properties"><a href="#3-application-properties" class="headerlink" title="3.application.properties"></a>3.application.properties</h3><figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="meta">logging.pattern.console</span>=<span class="string">[%-5level] %d&#123;yyyy-MM-dd HH:mm:ss.SSS&#125; %thread %c %M ---- %msg%n </span></span><br><span class="line"><span class="meta">logging.level.com.lxcourse</span>=<span class="string">trace</span></span><br><span class="line"><span class="meta">logging.file.path</span>=<span class="string">/Users/doubledumbao/logs/springboot-log</span></span><br><span class="line"><span class="meta">logging.pattern.file</span>=<span class="string">[%-5level] %d&#123;yyyy-MM-dd HH:mm:ss.SSS&#125; %thread %c %M ---- %msg%n </span></span><br><span class="line"><span class="meta">spring.profiles.active</span>=<span class="string">dev</span></span><br></pre></td></tr></table></figure>

<h3 id="4-logback-spring-xml"><a href="#4-logback-spring-xml" class="headerlink" title="4.logback-spring.xml"></a>4.logback-spring.xml</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"pattern"</span> <span class="attr">value</span>=<span class="string">"[%-5level] %d&#123;yyyy-MM-dd HH:mm:ss.SSS&#125; %C %M [%thread] %msg%n"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"log_dir"</span> <span class="attr">value</span>=<span class="string">"/Users/doubledumbao/logs/logger"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">"STDOUT"</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.core.ConsoleAppender"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">target</span>&gt;</span>System.err<span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">encoder</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.classic.encoder.PatternLayoutEncoder"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">springProfile</span> <span class="attr">name</span>=<span class="string">"dev"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">pattern</span>&gt;</span>[%-5level] %d&#123;yyyy-MM-dd HH:mm:ss.SSS&#125; %C %M [%thread]------- %msg%n<span class="tag">&lt;/<span class="name">pattern</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">springProfile</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">springProfile</span> <span class="attr">name</span>=<span class="string">"pro"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">pattern</span>&gt;</span>[%-5level] %d&#123;yyyy-MM-dd HH:mm:ss.SSS&#125; %C %M [%thread] xxxxxxxx %msg%n<span class="tag">&lt;/<span class="name">pattern</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">springProfile</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">encoder</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 自定义logger对象  additivity="false" 自定义logger对象是否继承rootLogger --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">logger</span> <span class="attr">name</span>=<span class="string">"com.lxcourse"</span> <span class="attr">level</span>=<span class="string">"info"</span> <span class="attr">additivity</span>=<span class="string">"false"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">"STDOUT"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">logger</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="5-测试类"><a href="#5-测试类" class="headerlink" title="5.测试类"></a>5.测试类</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.lxcourse.springbootlog;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.logging.log4j.LogManager;</span><br><span class="line"><span class="keyword">import</span> org.junit.jupiter.api.Test;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.test.context.SpringBootTest;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SpringbootLogApplicationTests</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> Logger LOGGER = LoggerFactory.getLogger(SpringbootLogApplication<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testQuick</span><span class="params">()</span></span>&#123;</span><br><span class="line">        LOGGER.error(<span class="string">"error"</span>);</span><br><span class="line">        LOGGER.warn(<span class="string">"warn"</span>);</span><br><span class="line">        LOGGER.info(<span class="string">"info"</span>);</span><br><span class="line">        LOGGER.debug(<span class="string">"debug"</span>);</span><br><span class="line">        LOGGER.trace(<span class="string">"trace"</span>);</span><br><span class="line"></span><br><span class="line">        org.apache.logging.log4j.Logger logger = LogManager.getLogger(SpringbootLogApplication<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        logger.info(<span class="string">"log4j2 log"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="6-切换日志实现"><a href="#6-切换日志实现" class="headerlink" title="6.切换日志实现"></a>6.切换日志实现</h3><p>pom.xml</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.3.0.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.lxcourse<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springboot-log<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>springboot-log<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>Demo project for Spring Boot<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 排除logback依赖 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-logging<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 添加log4j2依赖 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-log4j2<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.junit.vintage<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit-vintage-engine<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>log4j2.xml</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Configuration</span> <span class="attr">status</span>=<span class="string">"warn"</span> <span class="attr">monitorInterval</span>=<span class="string">"5"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"LOG_HOME"</span>&gt;</span>/Users/doubledumbao/logs/logger<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Appenders</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Console</span> <span class="attr">name</span>=<span class="string">"Console"</span> <span class="attr">target</span>=<span class="string">"SYSTEM_ERR"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">PatternLayout</span> <span class="attr">pattern</span>=<span class="string">"%d&#123;HH:mm:ss.SSS&#125; [%t] [%-5level] %c&#123;36&#125;:%L --- %m%n"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">Console</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Appenders</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Loggers</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Root</span> <span class="attr">level</span>=<span class="string">"info"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">AppenderRef</span> <span class="attr">ref</span>=<span class="string">"Console"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">Root</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Loggers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>日志</tag>
      </tags>
  </entry>
  <entry>
    <title>Log4j2初探</title>
    <url>/2020/05/29/Log4j2%E5%88%9D%E6%8E%A2/</url>
    <content><![CDATA[<h3 id="1-新建module，log4j2-demo"><a href="#1-新建module，log4j2-demo" class="headerlink" title="1.新建module，log4j2-demo"></a>1.新建module，log4j2-demo</h3><h3 id="2-修改pom-xml，增加log4j2依赖"><a href="#2-修改pom-xml，增加log4j2依赖" class="headerlink" title="2.修改pom.xml，增加log4j2依赖"></a>2.修改pom.xml，增加log4j2依赖</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log-study<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.lxcourse<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j2-demo<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- log4j 日志门面       --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.logging.log4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.11.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- log4j 日志实现--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.logging.log4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.11.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- junit--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">source</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">source</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">target</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">encoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">encoding</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="3-新建测试类"><a href="#3-新建测试类" class="headerlink" title="3.新建测试类"></a>3.新建测试类</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.lxcourse.log4j2;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.logging.log4j.LogManager;</span><br><span class="line"><span class="keyword">import</span> org.apache.logging.log4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Log4j2Demo</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> Logger LOGGER = LogManager.getLogger(Log4j2Demo<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testQuick</span><span class="params">()</span></span>&#123;</span><br><span class="line">        LOGGER.fatal(<span class="string">"fatal"</span>);</span><br><span class="line">        LOGGER.error(<span class="string">"error"</span>);</span><br><span class="line">        LOGGER.warn(<span class="string">"warn"</span>);</span><br><span class="line">        LOGGER.info(<span class="string">"info"</span>);</span><br><span class="line">        LOGGER.debug(<span class="string">"debug"</span>);</span><br><span class="line">        LOGGER.trace(<span class="string">"trace"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>输出：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">19:55:46.187 [main] FATAL com.lxcourse.log4j2.Log4j2Demo - fatal</span><br><span class="line">19:55:46.190 [main] ERROR com.lxcourse.log4j2.Log4j2Demo - error</span><br></pre></td></tr></table></figure>

<h3 id="5-新增log4j2-xml"><a href="#5-新增log4j2-xml" class="headerlink" title="5.新增log4j2.xml"></a>5.新增log4j2.xml</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Configuration</span> <span class="attr">status</span>=<span class="string">"warn"</span> <span class="attr">monitorInterval</span>=<span class="string">"5"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"LOG_HOME"</span>&gt;</span>/Users/doubledumbao/logs/logger<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Appenders</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Console</span> <span class="attr">name</span>=<span class="string">"Console"</span> <span class="attr">target</span>=<span class="string">"SYSTEM_OUT"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">PatternLayout</span> <span class="attr">pattern</span>=<span class="string">"%d&#123;HH:mm:ss.SSS&#125; [%t] [%-5level] %c&#123;36&#125;:%L --- %m%n"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">Console</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">File</span> <span class="attr">name</span>=<span class="string">"file"</span> <span class="attr">fileName</span>=<span class="string">"$&#123;LOG_HOME&#125;/myfile.log"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">PatternLayout</span> <span class="attr">pattern</span>=<span class="string">"[%d&#123;yyyy-MM-dd HH:mm:ss.SSS&#125;] [%-5level] %l%c&#123;36&#125; - %m%n"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">File</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">RandomAccessFile</span> <span class="attr">name</span>=<span class="string">"accessFile"</span> <span class="attr">fileName</span>=<span class="string">"$&#123;LOG_HOME&#125;/myAcclog.log"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">PatternLayout</span> <span class="attr">pattern</span>=<span class="string">"[%d&#123;yyyy-MM-dd HH:mm:ss.SSS&#125;] [%-5level] %l%c&#123;36&#125; - %m%n"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">RandomAccessFile</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">RollingFile</span> <span class="attr">name</span>=<span class="string">"rollingFile"</span> <span class="attr">fileName</span>=<span class="string">"$&#123;LOG_HOME&#125;/myrollog.log"</span></span></span><br><span class="line"><span class="tag">                     <span class="attr">filePattern</span>=<span class="string">"$&#123;LOG_HOME&#125;/$$&#123;date:yyyy-MM-dd&#125;/myrollog-%d&#123;yyyy-MM-dd-HH-mm&#125;-%i.log"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ThresholdFilter</span> <span class="attr">level</span>=<span class="string">"debug"</span> <span class="attr">onMatch</span>=<span class="string">"ACCEPT"</span> <span class="attr">onMismatch</span>=<span class="string">"DENY"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">PatternLayout</span> <span class="attr">pattern</span>=<span class="string">"[%d&#123;yyyy-MM-dd HH:mm:ss.SSS&#125;] [%-5level] %l%c&#123;36&#125; - %msg%n"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Policies</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">OnStartupTriggeringPolicy</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">SizeBasedTriggeringPolicy</span> <span class="attr">size</span>=<span class="string">"10 MB"</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">TimeBasedTriggeringPolicy</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">Policies</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">DefaultRolloverStrategy</span> <span class="attr">max</span>=<span class="string">"30"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">RollingFile</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Appenders</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Loggers</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Root</span> <span class="attr">level</span>=<span class="string">"trace"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">AppenderRef</span> <span class="attr">ref</span>=<span class="string">"Console"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">Root</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Loggers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>输出：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">19:56:32.572 [main] [FATAL] com.lxcourse.log4j2.Log4j2Demo:13 --- fatal</span><br><span class="line">19:56:32.575 [main] [ERROR] com.lxcourse.log4j2.Log4j2Demo:14 --- error</span><br><span class="line">19:56:32.575 [main] [WARN ] com.lxcourse.log4j2.Log4j2Demo:15 --- warn</span><br><span class="line">19:56:32.575 [main] [INFO ] com.lxcourse.log4j2.Log4j2Demo:16 --- info</span><br><span class="line">19:56:32.575 [main] [DEBUG] com.lxcourse.log4j2.Log4j2Demo:17 --- debug</span><br><span class="line">19:56:32.575 [main] [TRACE] com.lxcourse.log4j2.Log4j2Demo:18 --- trace</span><br></pre></td></tr></table></figure>

<h3 id="6-使用Slf4j门面-log4j2"><a href="#6-使用Slf4j门面-log4j2" class="headerlink" title="6.使用Slf4j门面+log4j2"></a>6.使用Slf4j门面+log4j2</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log-study<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.lxcourse<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j2-demo<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--  slf4j门面 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>slf4j-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.7.26<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.logging.log4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j-slf4j-impl<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.9.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- log4j 日志门面       --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.logging.log4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.11.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- log4j 日志实现--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.logging.log4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.11.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- junit--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">source</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">source</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">target</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">encoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">encoding</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="7-异步日志"><a href="#7-异步日志" class="headerlink" title="7.异步日志"></a>7.异步日志</h3><p>Log4j2提供了两种实现日志的方式，一个是通过AsyncAppender，一个是通过AsyncLogger，分别对应 前面我们说的Appender组件和Logger组件。</p>
<p>注意:配置异步日志需要添加依赖</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--异步日志依赖--&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.lmax<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>disruptor<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.3.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ol>
<li>AsyncAppender方式</li>
</ol>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Configuration</span> <span class="attr">status</span>=<span class="string">"warn"</span> <span class="attr">monitorInterval</span>=<span class="string">"5"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"LOG_HOME"</span>&gt;</span>/Users/doubledumbao/logs/logger<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Appenders</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Console</span> <span class="attr">name</span>=<span class="string">"Console"</span> <span class="attr">target</span>=<span class="string">"SYSTEM_ERR"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">PatternLayout</span> <span class="attr">pattern</span>=<span class="string">"%d&#123;HH:mm:ss.SSS&#125; [%t] [%-5level] %c&#123;36&#125;:%L --- %m%n"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">Console</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">File</span> <span class="attr">name</span>=<span class="string">"file"</span> <span class="attr">fileName</span>=<span class="string">"$&#123;LOG_HOME&#125;/myfile.log"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">PatternLayout</span> <span class="attr">pattern</span>=<span class="string">"[%d&#123;yyyy-MM-dd HH:mm:ss.SSS&#125;] [%-5level] %l%c&#123;36&#125; - %m%n"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">File</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Async</span> <span class="attr">name</span>=<span class="string">"Async"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">AppenderRef</span> <span class="attr">ref</span>=<span class="string">"file"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">Async</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">RandomAccessFile</span> <span class="attr">name</span>=<span class="string">"accessFile"</span> <span class="attr">fileName</span>=<span class="string">"$&#123;LOG_HOME&#125;/myAcclog.log"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">PatternLayout</span> <span class="attr">pattern</span>=<span class="string">"[%d&#123;yyyy-MM-dd HH:mm:ss.SSS&#125;] [%-5level] %l%c&#123;36&#125; - %m%n"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">RandomAccessFile</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">RollingFile</span> <span class="attr">name</span>=<span class="string">"rollingFile"</span> <span class="attr">fileName</span>=<span class="string">"$&#123;LOG_HOME&#125;/myrollog.log"</span></span></span><br><span class="line"><span class="tag">                     <span class="attr">filePattern</span>=<span class="string">"$&#123;LOG_HOME&#125;/$$&#123;date:yyyy-MM-dd&#125;/myrollog-%d&#123;yyyy-MM-dd-HH-mm&#125;-%i.log"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ThresholdFilter</span> <span class="attr">level</span>=<span class="string">"debug"</span> <span class="attr">onMatch</span>=<span class="string">"ACCEPT"</span> <span class="attr">onMismatch</span>=<span class="string">"DENY"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">PatternLayout</span> <span class="attr">pattern</span>=<span class="string">"[%d&#123;yyyy-MM-dd HH:mm:ss.SSS&#125;] [%-5level] %l%c&#123;36&#125; - %msg%n"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Policies</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">OnStartupTriggeringPolicy</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">SizeBasedTriggeringPolicy</span> <span class="attr">size</span>=<span class="string">"10 MB"</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">TimeBasedTriggeringPolicy</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">Policies</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">DefaultRolloverStrategy</span> <span class="attr">max</span>=<span class="string">"30"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">RollingFile</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Appenders</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Loggers</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Root</span> <span class="attr">level</span>=<span class="string">"trace"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">AppenderRef</span> <span class="attr">ref</span>=<span class="string">"Console"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">AppenderRef</span> <span class="attr">ref</span>=<span class="string">"Async"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">Root</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Loggers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ol start="2">
<li><p>AsyncLogger方式</p>
<p>AsyncLogger才是log4j2 的重头戏，也是官方推荐的异步方式。它可以使得调用Logger.log返回的</p>
</li>
</ol>
<p>更快。你可以有两种选择:全局异步和混合异步。</p>
<p><strong>全局异步</strong>就是，所有的日志都异步的记录，在配置文件上不用做任何改动，只需要添加一个</p>
<p>log4j2.component.properties 配置;</p>
<p><strong>混合异步</strong>就是，你可以在应用中同时使用同步日志和异步日志，这使得日志的配置方式更加 灵活。</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Configuration</span> <span class="attr">status</span>=<span class="string">"warn"</span> <span class="attr">monitorInterval</span>=<span class="string">"5"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"LOG_HOME"</span>&gt;</span>/Users/doubledumbao/logs/logger<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Appenders</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Console</span> <span class="attr">name</span>=<span class="string">"Console"</span> <span class="attr">target</span>=<span class="string">"SYSTEM_ERR"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">PatternLayout</span> <span class="attr">pattern</span>=<span class="string">"%d&#123;HH:mm:ss.SSS&#125; [%t] [%-5level] %c&#123;36&#125;:%L --- %m%n"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">Console</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">File</span> <span class="attr">name</span>=<span class="string">"file"</span> <span class="attr">fileName</span>=<span class="string">"$&#123;LOG_HOME&#125;/myfile.log"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">PatternLayout</span> <span class="attr">pattern</span>=<span class="string">"[%d&#123;yyyy-MM-dd HH:mm:ss.SSS&#125;] [%-5level] %l%c&#123;36&#125; - %m%n"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">File</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--        &lt;Async name="Async"&gt;--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--            &lt;AppenderRef ref="file"/&gt;--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--        &lt;/Async&gt;--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">RandomAccessFile</span> <span class="attr">name</span>=<span class="string">"accessFile"</span> <span class="attr">fileName</span>=<span class="string">"$&#123;LOG_HOME&#125;/myAcclog.log"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">PatternLayout</span> <span class="attr">pattern</span>=<span class="string">"[%d&#123;yyyy-MM-dd HH:mm:ss.SSS&#125;] [%-5level] %l%c&#123;36&#125; - %m%n"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">RandomAccessFile</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">RollingFile</span> <span class="attr">name</span>=<span class="string">"rollingFile"</span> <span class="attr">fileName</span>=<span class="string">"$&#123;LOG_HOME&#125;/myrollog.log"</span></span></span><br><span class="line"><span class="tag">                     <span class="attr">filePattern</span>=<span class="string">"$&#123;LOG_HOME&#125;/$$&#123;date:yyyy-MM-dd&#125;/myrollog-%d&#123;yyyy-MM-dd-HH-mm&#125;-%i.log"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ThresholdFilter</span> <span class="attr">level</span>=<span class="string">"debug"</span> <span class="attr">onMatch</span>=<span class="string">"ACCEPT"</span> <span class="attr">onMismatch</span>=<span class="string">"DENY"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">PatternLayout</span> <span class="attr">pattern</span>=<span class="string">"[%d&#123;yyyy-MM-dd HH:mm:ss.SSS&#125;] [%-5level] %l%c&#123;36&#125; - %msg%n"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Policies</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">OnStartupTriggeringPolicy</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">SizeBasedTriggeringPolicy</span> <span class="attr">size</span>=<span class="string">"10 MB"</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">TimeBasedTriggeringPolicy</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">Policies</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">DefaultRolloverStrategy</span> <span class="attr">max</span>=<span class="string">"30"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">RollingFile</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Appenders</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Loggers</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">AsyncLogger</span> <span class="attr">name</span>=<span class="string">"com.lxcourse"</span> <span class="attr">level</span>=<span class="string">"trace"</span></span></span><br><span class="line"><span class="tag">                     <span class="attr">includeLocation</span>=<span class="string">"false"</span> <span class="attr">additivity</span>=<span class="string">"false"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">AppenderRef</span> <span class="attr">ref</span>=<span class="string">"file"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">AsyncLogger</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Root</span> <span class="attr">level</span>=<span class="string">"trace"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">AppenderRef</span> <span class="attr">ref</span>=<span class="string">"file"</span>/&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- &lt;AppenderRef ref="Async" /&gt;--&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">Root</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Loggers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>如上配置: com.lxcourse 日志是异步的，root日志是同步的。</p>
<p>使用异步日志需要注意的问题:</p>
<ol>
<li><p>如果使用异步日志，AsyncAppender、AsyncLogger和全局日志，不要同时出现。性能会和 AsyncAppender一致，降至最低。</p>
</li>
<li><p>设置includeLocation=false ，打印位置信息会急剧降低异步日志的性能，比同步日志还要 慢。</p>
</li>
</ol>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>日志</tag>
      </tags>
  </entry>
  <entry>
    <title>Logback初探</title>
    <url>/2020/05/29/Logback%E5%88%9D%E6%8E%A2/</url>
    <content><![CDATA[<p><a href="http://logback.qos.ch/" target="_blank" rel="noopener">Logback官网</a></p>
<p>简介</p>
<blockquote>
<p>Logback旨在作为流行的log4j项目的后继者，从<a href="http://logback.qos.ch/reasonsToSwitch.html" target="_blank" rel="noopener">log4j离开的地方接手</a>。</p>
<p>Logback的体系结构足够通用，可以应用在不同的情况下。目前，logback分为三个模块：logback-core，logback-classic和logback-access。</p>
<p>logback-core模块为其他两个模块奠定了基础。logback-classic模块可以与log4j的显着改进版本同化。此外，经典的logback原生实现了<a href="http://www.slf4j.org/" target="_blank" rel="noopener">SLF4J API，</a>因此您可以轻松地在logback和其他日志框架（例如log4j或java.util.logging（JUL））之间来回切换。</p>
<p>logback-access模块与Servlet容器（例如Tomcat和Jetty）集成，以提供HTTP访问日志功能。请注意，您可以轻松地在logback-core之上构建自己的模块。</p>
</blockquote>
<h3 id="1-新建module-logback-demo"><a href="#1-新建module-logback-demo" class="headerlink" title="1.新建module,logback-demo"></a>1.新建module,logback-demo</h3><h3 id="2-pom-xml添加依赖"><a href="#2-pom-xml添加依赖" class="headerlink" title="2.pom.xml添加依赖"></a>2.pom.xml添加依赖</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log-study<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.lxcourse<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>logback-demo<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--  slf4j日志门面       --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>slf4j-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.7.28<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- logback--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>ch.qos.logback<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>logback-classic<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--   Junit     --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">source</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">source</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">target</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">encoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">encoding</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="3-快速体验类"><a href="#3-快速体验类" class="headerlink" title="3.快速体验类"></a>3.快速体验类</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.lxcourse.logback;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LogbackDemo</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> Logger LOGGER = LoggerFactory.getLogger(LogbackDemo<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testQuick</span><span class="params">()</span></span>&#123;</span><br><span class="line">        LOGGER.error(<span class="string">"error"</span>);</span><br><span class="line">        LOGGER.warn(<span class="string">"warn"</span>);</span><br><span class="line">        LOGGER.info(<span class="string">"info"</span>);</span><br><span class="line">        LOGGER.debug(<span class="string">"debug"</span>);</span><br><span class="line">        LOGGER.trace(<span class="string">"trace"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>输出：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">14:16:51.106 [main] ERROR com.lxcourse.logback.LogbackDemo - error</span><br><span class="line">14:16:51.109 [main] WARN com.lxcourse.logback.LogbackDemo - warn</span><br><span class="line">14:16:51.109 [main] INFO com.lxcourse.logback.LogbackDemo - info</span><br><span class="line">14:16:51.109 [main] DEBUG com.lxcourse.logback.LogbackDemo - debug</span><br></pre></td></tr></table></figure>

<h3 id="4-使用配置文件logback-xml"><a href="#4-使用配置文件logback-xml" class="headerlink" title="4.使用配置文件logback.xml"></a>4.使用配置文件logback.xml</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"pattern"</span> <span class="attr">value</span>=<span class="string">"[%-5level] %d&#123;yyyy-MM-dd HH:mm:ss.SSS&#125; %C %M [%thread] %msg%n"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">"STDOUT"</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.core.ConsoleAppender"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">target</span>&gt;</span>System.err<span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">encoder</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">pattern</span>&gt;</span>$&#123;pattern&#125;<span class="tag">&lt;/<span class="name">pattern</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">encoder</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">root</span> <span class="attr">level</span>=<span class="string">"ALL"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">"STDOUT"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>具体配置参考官网教程</p>
<p><a href="http://logback.qos.ch/manual/configuration.html" target="_blank" rel="noopener">configuration</a></p>
<p><a href="http://logback.qos.ch/manual/layouts.html" target="_blank" rel="noopener">layouts</a></p>
<p>执行LogbackDemo.testQuick()，输出如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[ERROR] 2020-05-29 14:59:38.233 com.lxcourse.logback.LogbackDemo testQuick [main] error</span><br><span class="line">[WARN ] 2020-05-29 14:59:38.236 com.lxcourse.logback.LogbackDemo testQuick [main] warn</span><br><span class="line">[INFO ] 2020-05-29 14:59:38.237 com.lxcourse.logback.LogbackDemo testQuick [main] info</span><br><span class="line">[DEBUG] 2020-05-29 14:59:38.238 com.lxcourse.logback.LogbackDemo testQuick [main] debug</span><br><span class="line">[TRACE] 2020-05-29 14:59:38.238 com.lxcourse.logback.LogbackDemo testQuick [main] trace</span><br></pre></td></tr></table></figure>

<h3 id="5-将日志输出为文件"><a href="#5-将日志输出为文件" class="headerlink" title="5.将日志输出为文件"></a>5.将日志输出为文件</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"pattern"</span> <span class="attr">value</span>=<span class="string">"[%-5level] %d&#123;yyyy-MM-dd HH:mm:ss.SSS&#125; %C %M [%thread] %msg%n"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"log_dir"</span> <span class="attr">value</span>=<span class="string">"/Users/doubledumbao/logs"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">"STDOUT"</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.core.ConsoleAppender"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">target</span>&gt;</span>System.err<span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">encoder</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.classic.encoder.PatternLayoutEncoder"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">pattern</span>&gt;</span>$&#123;pattern&#125;<span class="tag">&lt;/<span class="name">pattern</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">encoder</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--将日志输出到文件--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">"file"</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.core.FileAppender"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">file</span>&gt;</span>$&#123;log_dir&#125;/logback.log<span class="tag">&lt;/<span class="name">file</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">encoder</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.classic.encoder.PatternLayoutEncoder"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">pattern</span>&gt;</span>$&#123;pattern&#125;<span class="tag">&lt;/<span class="name">pattern</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">encoder</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">root</span> <span class="attr">level</span>=<span class="string">"ALL"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">"STDOUT"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">"file"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="6-将日志输出为html格式"><a href="#6-将日志输出为html格式" class="headerlink" title="6.将日志输出为html格式"></a>6.将日志输出为html格式</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"pattern"</span> <span class="attr">value</span>=<span class="string">"[%-5level] %d&#123;yyyy-MM-dd HH:mm:ss.SSS&#125; %C %M [%thread] %msg%n"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"log_dir"</span> <span class="attr">value</span>=<span class="string">"/Users/doubledumbao/logs"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">"STDOUT"</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.core.ConsoleAppender"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">target</span>&gt;</span>System.err<span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">encoder</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.classic.encoder.PatternLayoutEncoder"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">pattern</span>&gt;</span>$&#123;pattern&#125;<span class="tag">&lt;/<span class="name">pattern</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">encoder</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--将日志输出到文件--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">"file"</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.core.FileAppender"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">file</span>&gt;</span>$&#123;log_dir&#125;/logback.log<span class="tag">&lt;/<span class="name">file</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">encoder</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.classic.encoder.PatternLayoutEncoder"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">pattern</span>&gt;</span>$&#123;pattern&#125;<span class="tag">&lt;/<span class="name">pattern</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">encoder</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 将日志输出为html格式--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">"htmlFile"</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.core.FileAppender"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">file</span>&gt;</span>$&#123;log_dir&#125;/logback.html<span class="tag">&lt;/<span class="name">file</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">encoder</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.core.encoder.LayoutWrappingEncoder"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">layout</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.classic.html.HTMLLayout"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">pattern</span>&gt;</span>%-5level%d&#123;yyyy-MM-dd HH:mm:ss.SSS&#125;%C%M%thread%msg<span class="tag">&lt;/<span class="name">pattern</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">layout</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">encoder</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">root</span> <span class="attr">level</span>=<span class="string">"ALL"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">"STDOUT"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">"file"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">"htmlFile"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="7-日志拆分和归档压缩的appender对象"><a href="#7-日志拆分和归档压缩的appender对象" class="headerlink" title="7.日志拆分和归档压缩的appender对象"></a>7.日志拆分和归档压缩的appender对象</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"pattern"</span> <span class="attr">value</span>=<span class="string">"[%-5level] %d&#123;yyyy-MM-dd HH:mm:ss.SSS&#125; %C %M [%thread] %msg%n"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"log_dir"</span> <span class="attr">value</span>=<span class="string">"/Users/doubledumbao/logs"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">"STDOUT"</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.core.ConsoleAppender"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">target</span>&gt;</span>System.err<span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">encoder</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.classic.encoder.PatternLayoutEncoder"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">pattern</span>&gt;</span>$&#123;pattern&#125;<span class="tag">&lt;/<span class="name">pattern</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">encoder</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--将日志输出到文件--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">"file"</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.core.FileAppender"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">file</span>&gt;</span>$&#123;log_dir&#125;/logback.log<span class="tag">&lt;/<span class="name">file</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">encoder</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.classic.encoder.PatternLayoutEncoder"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">pattern</span>&gt;</span>$&#123;pattern&#125;<span class="tag">&lt;/<span class="name">pattern</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">encoder</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 将日志输出为html格式--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">"htmlFile"</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.core.FileAppender"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">file</span>&gt;</span>$&#123;log_dir&#125;/logback.html<span class="tag">&lt;/<span class="name">file</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">encoder</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.core.encoder.LayoutWrappingEncoder"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">layout</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.classic.html.HTMLLayout"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">pattern</span>&gt;</span>%-5level%d&#123;yyyy-MM-dd HH:mm:ss.SSS&#125;%C%M%thread%msg<span class="tag">&lt;/<span class="name">pattern</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">layout</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">encoder</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--  日志拆分和归档压缩的appender对象  --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">"rollFile"</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.core.rolling.RollingFileAppender"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">file</span>&gt;</span>$&#123;log_dir&#125;/roll_logback.log<span class="tag">&lt;/<span class="name">file</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">encoder</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.classic.encoder.PatternLayoutEncoder"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">pattern</span>&gt;</span>$&#123;pattern&#125;<span class="tag">&lt;/<span class="name">pattern</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">encoder</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">rollingPolicy</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">fileNamePattern</span>&gt;</span>$&#123;log_dir&#125;/rolling.%d&#123;yyyy-MM-dd&#125;.log%i.gz<span class="tag">&lt;/<span class="name">fileNamePattern</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">maxFileSize</span>&gt;</span>1MB<span class="tag">&lt;/<span class="name">maxFileSize</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">rollingPolicy</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">root</span> <span class="attr">level</span>=<span class="string">"ALL"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">"STDOUT"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">"rollFile"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testRollingFile</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10000</span>; i++) &#123;</span><br><span class="line">            LOGGER.error(<span class="string">"error"</span>);</span><br><span class="line">            LOGGER.warn(<span class="string">"warn"</span>);</span><br><span class="line">            LOGGER.info(<span class="string">"info"</span>);</span><br><span class="line">            LOGGER.debug(<span class="string">"debug"</span>);</span><br><span class="line">            LOGGER.trace(<span class="string">"trace"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<h3 id="8-设置日志过滤级别"><a href="#8-设置日志过滤级别" class="headerlink" title="8.设置日志过滤级别"></a>8.设置日志过滤级别</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"pattern"</span> <span class="attr">value</span>=<span class="string">"[%-5level] %d&#123;yyyy-MM-dd HH:mm:ss.SSS&#125; %C %M [%thread] %msg%n"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"log_dir"</span> <span class="attr">value</span>=<span class="string">"/Users/doubledumbao/logs/logger"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">"STDOUT"</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.core.ConsoleAppender"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">target</span>&gt;</span>System.err<span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">encoder</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.classic.encoder.PatternLayoutEncoder"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">pattern</span>&gt;</span>$&#123;pattern&#125;<span class="tag">&lt;/<span class="name">pattern</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">encoder</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--将日志输出到文件--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">"file"</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.core.FileAppender"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">file</span>&gt;</span>$&#123;log_dir&#125;/logback.log<span class="tag">&lt;/<span class="name">file</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">encoder</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.classic.encoder.PatternLayoutEncoder"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">pattern</span>&gt;</span>$&#123;pattern&#125;<span class="tag">&lt;/<span class="name">pattern</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">encoder</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 将日志输出为html格式--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">"htmlFile"</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.core.FileAppender"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">file</span>&gt;</span>$&#123;log_dir&#125;/logback.html<span class="tag">&lt;/<span class="name">file</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">encoder</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.core.encoder.LayoutWrappingEncoder"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">layout</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.classic.html.HTMLLayout"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">pattern</span>&gt;</span>%-5level%d&#123;yyyy-MM-dd HH:mm:ss.SSS&#125;%C%M%thread%msg<span class="tag">&lt;/<span class="name">pattern</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">layout</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">encoder</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--  日志拆分和归档压缩的appender对象  --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">"rollFile"</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.core.rolling.RollingFileAppender"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">file</span>&gt;</span>$&#123;log_dir&#125;/roll_logback.log<span class="tag">&lt;/<span class="name">file</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">encoder</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.classic.encoder.PatternLayoutEncoder"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">pattern</span>&gt;</span>$&#123;pattern&#125;<span class="tag">&lt;/<span class="name">pattern</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">encoder</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">rollingPolicy</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">fileNamePattern</span>&gt;</span>$&#123;log_dir&#125;/rolling.%d&#123;yyyy-MM-dd&#125;.log%i.gz<span class="tag">&lt;/<span class="name">fileNamePattern</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">maxFileSize</span>&gt;</span>1MB<span class="tag">&lt;/<span class="name">maxFileSize</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">rollingPolicy</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 日志级别过滤器   --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.classic.filter.LevelFilter"</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--   日志过滤规则     --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">level</span>&gt;</span>ERROR<span class="tag">&lt;/<span class="name">level</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">onMatch</span>&gt;</span>ACCEPT<span class="tag">&lt;/<span class="name">onMatch</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">onMismatch</span>&gt;</span>DENY<span class="tag">&lt;/<span class="name">onMismatch</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">root</span> <span class="attr">level</span>=<span class="string">"ALL"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">"STDOUT"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">"rollFile"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="9-异步日志"><a href="#9-异步日志" class="headerlink" title="9.异步日志"></a>9.异步日志</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"pattern"</span> <span class="attr">value</span>=<span class="string">"[%-5level] %d&#123;yyyy-MM-dd HH:mm:ss.SSS&#125; %C %M [%thread] %msg%n"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"log_dir"</span> <span class="attr">value</span>=<span class="string">"/Users/doubledumbao/logs/logger"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">"STDOUT"</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.core.ConsoleAppender"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">target</span>&gt;</span>System.err<span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">encoder</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.classic.encoder.PatternLayoutEncoder"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">pattern</span>&gt;</span>$&#123;pattern&#125;<span class="tag">&lt;/<span class="name">pattern</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">encoder</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--将日志输出到文件--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">"file"</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.core.FileAppender"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">file</span>&gt;</span>$&#123;log_dir&#125;/logback.log<span class="tag">&lt;/<span class="name">file</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">encoder</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.classic.encoder.PatternLayoutEncoder"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">pattern</span>&gt;</span>$&#123;pattern&#125;<span class="tag">&lt;/<span class="name">pattern</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">encoder</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 将日志输出为html格式--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">"htmlFile"</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.core.FileAppender"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">file</span>&gt;</span>$&#123;log_dir&#125;/logback.html<span class="tag">&lt;/<span class="name">file</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">encoder</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.core.encoder.LayoutWrappingEncoder"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">layout</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.classic.html.HTMLLayout"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">pattern</span>&gt;</span>%-5level%d&#123;yyyy-MM-dd HH:mm:ss.SSS&#125;%C%M%thread%msg<span class="tag">&lt;/<span class="name">pattern</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">layout</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">encoder</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--  日志拆分和归档压缩的appender对象  --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">"rollFile"</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.core.rolling.RollingFileAppender"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">file</span>&gt;</span>$&#123;log_dir&#125;/roll_logback.log<span class="tag">&lt;/<span class="name">file</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">encoder</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.classic.encoder.PatternLayoutEncoder"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">pattern</span>&gt;</span>$&#123;pattern&#125;<span class="tag">&lt;/<span class="name">pattern</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">encoder</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">rollingPolicy</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">fileNamePattern</span>&gt;</span>$&#123;log_dir&#125;/rolling.%d&#123;yyyy-MM-dd&#125;.log%i.gz<span class="tag">&lt;/<span class="name">fileNamePattern</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">maxFileSize</span>&gt;</span>1MB<span class="tag">&lt;/<span class="name">maxFileSize</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">rollingPolicy</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 日志级别过滤器   --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.classic.filter.LevelFilter"</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--   日志过滤规则     --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">level</span>&gt;</span>ERROR<span class="tag">&lt;/<span class="name">level</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">onMatch</span>&gt;</span>ACCEPT<span class="tag">&lt;/<span class="name">onMatch</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">onMismatch</span>&gt;</span>DENY<span class="tag">&lt;/<span class="name">onMismatch</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 异步日志   --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">"async"</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.classic.AsyncAppender"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">"rollFile"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">root</span> <span class="attr">level</span>=<span class="string">"ALL"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">"STDOUT"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">"async"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="10-自定义logger对象"><a href="#10-自定义logger对象" class="headerlink" title="10.自定义logger对象"></a>10.自定义logger对象</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"pattern"</span> <span class="attr">value</span>=<span class="string">"[%-5level] %d&#123;yyyy-MM-dd HH:mm:ss.SSS&#125; %C %M [%thread] %msg%n"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"log_dir"</span> <span class="attr">value</span>=<span class="string">"/Users/doubledumbao/logs/logger"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">"STDOUT"</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.core.ConsoleAppender"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">target</span>&gt;</span>System.err<span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">encoder</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.classic.encoder.PatternLayoutEncoder"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">pattern</span>&gt;</span>$&#123;pattern&#125;<span class="tag">&lt;/<span class="name">pattern</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">encoder</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--将日志输出到文件--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">"file"</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.core.FileAppender"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">file</span>&gt;</span>$&#123;log_dir&#125;/logback.log<span class="tag">&lt;/<span class="name">file</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">encoder</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.classic.encoder.PatternLayoutEncoder"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">pattern</span>&gt;</span>$&#123;pattern&#125;<span class="tag">&lt;/<span class="name">pattern</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">encoder</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 将日志输出为html格式--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">"htmlFile"</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.core.FileAppender"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">file</span>&gt;</span>$&#123;log_dir&#125;/logback.html<span class="tag">&lt;/<span class="name">file</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">encoder</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.core.encoder.LayoutWrappingEncoder"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">layout</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.classic.html.HTMLLayout"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">pattern</span>&gt;</span>%-5level%d&#123;yyyy-MM-dd HH:mm:ss.SSS&#125;%C%M%thread%msg<span class="tag">&lt;/<span class="name">pattern</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">layout</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">encoder</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--  日志拆分和归档压缩的appender对象  --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">"rollFile"</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.core.rolling.RollingFileAppender"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">file</span>&gt;</span>$&#123;log_dir&#125;/roll_logback.log<span class="tag">&lt;/<span class="name">file</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">encoder</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.classic.encoder.PatternLayoutEncoder"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">pattern</span>&gt;</span>$&#123;pattern&#125;<span class="tag">&lt;/<span class="name">pattern</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">encoder</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">rollingPolicy</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">fileNamePattern</span>&gt;</span>$&#123;log_dir&#125;/rolling.%d&#123;yyyy-MM-dd&#125;.log%i.gz<span class="tag">&lt;/<span class="name">fileNamePattern</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">maxFileSize</span>&gt;</span>1MB<span class="tag">&lt;/<span class="name">maxFileSize</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">rollingPolicy</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 日志级别过滤器   --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.classic.filter.LevelFilter"</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--   日志过滤规则     --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">level</span>&gt;</span>ERROR<span class="tag">&lt;/<span class="name">level</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">onMatch</span>&gt;</span>ACCEPT<span class="tag">&lt;/<span class="name">onMatch</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">onMismatch</span>&gt;</span>DENY<span class="tag">&lt;/<span class="name">onMismatch</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 异步日志   --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">"async"</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.classic.AsyncAppender"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">"rollFile"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--root Logger--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">root</span> <span class="attr">level</span>=<span class="string">"ALL"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">"STDOUT"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">"async"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 自定义logger对象  additivity="false" 自定义logger对象是否继承rootLogger --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">logger</span> <span class="attr">name</span>=<span class="string">"com.lxcourse"</span> <span class="attr">level</span>=<span class="string">"info"</span> <span class="attr">additivity</span>=<span class="string">"false"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">"STDOUT"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">logger</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>日志</tag>
      </tags>
  </entry>
  <entry>
    <title>Slf4j初探</title>
    <url>/2020/05/29/Slf4j%E5%88%9D%E6%8E%A2/</url>
    <content><![CDATA[<h3 id="1-新建module-slf4j-demo"><a href="#1-新建module-slf4j-demo" class="headerlink" title="1.新建module,slf4j-demo"></a>1.新建module,slf4j-demo</h3><h3 id="2-pom-xml添加依赖"><a href="#2-pom-xml添加依赖" class="headerlink" title="2.pom.xml添加依赖"></a>2.pom.xml添加依赖</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log-study<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.lxcourse<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>sfl4j-demo<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>slf4j-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.7.28<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>slf4j-simple<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.7.28<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">source</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">source</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">target</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">encoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">encoding</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="3-编写测试类Slf4jDemo-java"><a href="#3-编写测试类Slf4jDemo-java" class="headerlink" title="3.编写测试类Slf4jDemo.java"></a>3.编写测试类Slf4jDemo.java</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.lxcourse.slf4j;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> doubledumbao</span></span><br><span class="line"><span class="comment"> * Slf4j快速入门</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Slf4jDemo</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> Logger LOGGER = LoggerFactory.getLogger(Slf4jDemo<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span>  <span class="keyword">void</span> <span class="title">testQuick</span><span class="params">()</span></span>&#123;</span><br><span class="line">        LOGGER.error(<span class="string">"error"</span>);</span><br><span class="line">        LOGGER.warn(<span class="string">"warn"</span>);</span><br><span class="line">        LOGGER.info(<span class="string">"info"</span>);</span><br><span class="line">        LOGGER.debug(<span class="string">"debug"</span>);</span><br><span class="line">        LOGGER.trace(<span class="string">"trace"</span>);</span><br><span class="line">        String name = <span class="string">"lxcourse"</span>;</span><br><span class="line">        String url = <span class="string">"https://www.lxcourse.cn"</span>;</span><br><span class="line">        LOGGER.info(<span class="string">"网站:&#123;&#125;，网址:&#123;&#125;"</span>,name,url);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">int</span> a = <span class="number">10</span>/<span class="number">0</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            LOGGER.error(<span class="string">"发生异常&#123;&#125;"</span>,<span class="string">"hello"</span>,e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<p><img src="http://www.slf4j.org/images/concrete-bindings.png" alt="slf4j绑定日志框架"></p>
<h3 id="4-slf4j绑定logback"><a href="#4-slf4j绑定logback" class="headerlink" title="4.slf4j绑定logback"></a>4.slf4j绑定logback</h3><p>pom.xml</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log-study<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.lxcourse<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>sfl4j-demo<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>slf4j-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.7.28<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        &lt;dependency&gt;</span></span><br><span class="line"><span class="comment">            &lt;groupId&gt;org.slf4j&lt;/groupId&gt;</span></span><br><span class="line"><span class="comment">            &lt;artifactId&gt;slf4j-simple&lt;/artifactId&gt;</span></span><br><span class="line"><span class="comment">            &lt;version&gt;1.7.28&lt;/version&gt;</span></span><br><span class="line"><span class="comment">        &lt;/dependency&gt;</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--   logback日志     --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>ch.qos.logback<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>logback-classic<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">source</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">source</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">target</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">encoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">encoding</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="5-slf4j绑定slf4j-nop"><a href="#5-slf4j绑定slf4j-nop" class="headerlink" title="5.slf4j绑定slf4j-nop"></a>5.slf4j绑定slf4j-nop</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log-study<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.lxcourse<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>sfl4j-demo<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>slf4j-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.7.28<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- slf4j 内置简单日志</span></span><br><span class="line"><span class="comment">        &lt;dependency&gt;</span></span><br><span class="line"><span class="comment">            &lt;groupId&gt;org.slf4j&lt;/groupId&gt;</span></span><br><span class="line"><span class="comment">            &lt;artifactId&gt;slf4j-simple&lt;/artifactId&gt;</span></span><br><span class="line"><span class="comment">            &lt;version&gt;1.7.27&lt;/version&gt;</span></span><br><span class="line"><span class="comment">        &lt;/dependency&gt;</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--   logback日志</span></span><br><span class="line"><span class="comment">        &lt;dependency&gt;</span></span><br><span class="line"><span class="comment">            &lt;groupId&gt;ch.qos.logback&lt;/groupId&gt;</span></span><br><span class="line"><span class="comment">            &lt;artifactId&gt;logback-classic&lt;/artifactId&gt;</span></span><br><span class="line"><span class="comment">            &lt;version&gt;1.2.3&lt;/version&gt;</span></span><br><span class="line"><span class="comment">        &lt;/dependency&gt;</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 绑定为NOP，静默丢弃所有日志记录。       --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>slf4j-nop<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.7.28<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">source</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">source</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">target</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">encoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">encoding</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="6-slf4j绑定log4j"><a href="#6-slf4j绑定log4j" class="headerlink" title="6.slf4j绑定log4j"></a>6.slf4j绑定log4j</h3><p>pom.xml</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log-study<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.lxcourse<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>sfl4j-demo<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>slf4j-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.7.28<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- slf4j 内置简单日志</span></span><br><span class="line"><span class="comment">        &lt;dependency&gt;</span></span><br><span class="line"><span class="comment">            &lt;groupId&gt;org.slf4j&lt;/groupId&gt;</span></span><br><span class="line"><span class="comment">            &lt;artifactId&gt;slf4j-simple&lt;/artifactId&gt;</span></span><br><span class="line"><span class="comment">            &lt;version&gt;1.7.27&lt;/version&gt;</span></span><br><span class="line"><span class="comment">        &lt;/dependency&gt;</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--   logback日志</span></span><br><span class="line"><span class="comment">        &lt;dependency&gt;</span></span><br><span class="line"><span class="comment">            &lt;groupId&gt;ch.qos.logback&lt;/groupId&gt;</span></span><br><span class="line"><span class="comment">            &lt;artifactId&gt;logback-classic&lt;/artifactId&gt;</span></span><br><span class="line"><span class="comment">            &lt;version&gt;1.2.3&lt;/version&gt;</span></span><br><span class="line"><span class="comment">        &lt;/dependency&gt;</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 绑定为NOP，静默丢弃所有日志记录。</span></span><br><span class="line"><span class="comment">        &lt;dependency&gt;</span></span><br><span class="line"><span class="comment">            &lt;groupId&gt;org.slf4j&lt;/groupId&gt;</span></span><br><span class="line"><span class="comment">            &lt;artifactId&gt;slf4j-nop&lt;/artifactId&gt;</span></span><br><span class="line"><span class="comment">            &lt;version&gt;1.7.28&lt;/version&gt;</span></span><br><span class="line"><span class="comment">        &lt;/dependency&gt;</span></span><br><span class="line"><span class="comment">         --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--  绑定log4j 1.2版（一种广泛使用的日志记录框架）。您还需要将log4j.jar放在类路径上。      --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>slf4j-log4j12<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.7.28<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.17<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">source</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">source</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">target</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">encoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">encoding</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>添加log4j.properties</p>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="meta">log4j.rootLogger</span>=<span class="string">trace,console</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定控制台日志输出的appender</span></span><br><span class="line"><span class="meta">log4j.appender.console</span> = <span class="string">org.apache.log4j.ConsoleAppender</span></span><br><span class="line"><span class="meta">log4j.appender.console.layout</span> = <span class="string">org.apache.log4j.PatternLayout</span></span><br><span class="line"><span class="meta">log4j.appender.console.layout.conversionPattern</span> = <span class="string">[%-5p] %r %C %M %d&#123;yyyy-MM-dd HH:mm:ss&#125; %m%n</span></span><br></pre></td></tr></table></figure>

<h3 id="7-slf4j绑定jdk14"><a href="#7-slf4j绑定jdk14" class="headerlink" title="7.slf4j绑定jdk14"></a>7.slf4j绑定jdk14</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log-study<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.lxcourse<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>sfl4j-demo<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>slf4j-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.7.28<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- slf4j 内置简单日志</span></span><br><span class="line"><span class="comment">        &lt;dependency&gt;</span></span><br><span class="line"><span class="comment">            &lt;groupId&gt;org.slf4j&lt;/groupId&gt;</span></span><br><span class="line"><span class="comment">            &lt;artifactId&gt;slf4j-simple&lt;/artifactId&gt;</span></span><br><span class="line"><span class="comment">            &lt;version&gt;1.7.27&lt;/version&gt;</span></span><br><span class="line"><span class="comment">        &lt;/dependency&gt;</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--   logback日志</span></span><br><span class="line"><span class="comment">        &lt;dependency&gt;</span></span><br><span class="line"><span class="comment">            &lt;groupId&gt;ch.qos.logback&lt;/groupId&gt;</span></span><br><span class="line"><span class="comment">            &lt;artifactId&gt;logback-classic&lt;/artifactId&gt;</span></span><br><span class="line"><span class="comment">            &lt;version&gt;1.2.3&lt;/version&gt;</span></span><br><span class="line"><span class="comment">        &lt;/dependency&gt;</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 绑定为NOP，静默丢弃所有日志记录。</span></span><br><span class="line"><span class="comment">        &lt;dependency&gt;</span></span><br><span class="line"><span class="comment">            &lt;groupId&gt;org.slf4j&lt;/groupId&gt;</span></span><br><span class="line"><span class="comment">            &lt;artifactId&gt;slf4j-nop&lt;/artifactId&gt;</span></span><br><span class="line"><span class="comment">            &lt;version&gt;1.7.28&lt;/version&gt;</span></span><br><span class="line"><span class="comment">        &lt;/dependency&gt;</span></span><br><span class="line"><span class="comment">         --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--  绑定log4j 1.2版（一种广泛使用的日志记录框架）。您还需要将log4j.jar放在类路径上。</span></span><br><span class="line"><span class="comment">        &lt;dependency&gt;</span></span><br><span class="line"><span class="comment">            &lt;groupId&gt;org.slf4j&lt;/groupId&gt;</span></span><br><span class="line"><span class="comment">            &lt;artifactId&gt;slf4j-log4j12&lt;/artifactId&gt;</span></span><br><span class="line"><span class="comment">            &lt;version&gt;1.7.28&lt;/version&gt;</span></span><br><span class="line"><span class="comment">        &lt;/dependency&gt;</span></span><br><span class="line"><span class="comment">        &lt;dependency&gt;</span></span><br><span class="line"><span class="comment">            &lt;groupId&gt;log4j&lt;/groupId&gt;</span></span><br><span class="line"><span class="comment">            &lt;artifactId&gt;log4j&lt;/artifactId&gt;</span></span><br><span class="line"><span class="comment">            &lt;version&gt;1.2.17&lt;/version&gt;</span></span><br><span class="line"><span class="comment">        &lt;/dependency&gt;</span></span><br><span class="line"><span class="comment">         --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 绑定JUL日志 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>slf4j-jdk14<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.7.28<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">source</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">source</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">target</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">encoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">encoding</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="8-使用slf4j的日志绑定流程"><a href="#8-使用slf4j的日志绑定流程" class="headerlink" title="8.使用slf4j的日志绑定流程:"></a>8.使用slf4j的日志绑定流程:</h3><ol>
<li><p>添加slf4j-api的依赖</p>
</li>
<li><p>使用slf4j的API在项目中进行统一的日志记录 </p>
</li>
<li><p>绑定具体的日志实现框架</p>
<p>3.1 绑定已经实现了slf4j的日志框架,直接添加对应依赖</p>
<p>3.2 绑定没有实现slf4j的日志框架,先添加日志的适配器,再添加实现类的依赖</p>
</li>
<li><p>slf4j有且仅有一个日志实现框架的绑定(如果出现多个默认使用第一个依赖日志实现)</p>
</li>
</ol>
<h3 id="9-slf4j桥接器"><a href="#9-slf4j桥接器" class="headerlink" title="9.slf4j桥接器"></a>9.slf4j桥接器</h3><p>比如原来项目中使用的log4j，依赖如下：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log-study<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.lxcourse<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>slf4j-bridge-demo<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.17<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">source</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">source</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">target</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">encoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">encoding</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>log4j.properties</p>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="meta">log4j.rootLogger</span>=<span class="string">trace,console</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定控制台日志输出的appender</span></span><br><span class="line"><span class="meta">log4j.appender.console</span> = <span class="string">org.apache.log4j.ConsoleAppender</span></span><br><span class="line"><span class="meta">log4j.appender.console.layout</span> = <span class="string">org.apache.log4j.PatternLayout</span></span><br><span class="line"><span class="meta">log4j.appender.console.layout.conversionPattern</span> = <span class="string">[%-5p] %r %C %M %d&#123;yyyy-MM-dd HH:mm:ss&#125; %m%n</span></span><br></pre></td></tr></table></figure>

<p>测试代码：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.lxcourse.log4j;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.log4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> doubledumbao</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Log4jDemo</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Logger LOGGER = Logger.getLogger(Log4jDemo<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testQuick</span><span class="params">()</span></span>&#123;</span><br><span class="line">        LOGGER.error(<span class="string">"error"</span>);</span><br><span class="line">        LOGGER.warn(<span class="string">"warn"</span>);</span><br><span class="line">        LOGGER.info(<span class="string">"info"</span>);</span><br><span class="line">        LOGGER.debug(<span class="string">"debug"</span>);</span><br><span class="line">        LOGGER.trace(<span class="string">"trace"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>现在将日志框架替换为slf4j+logback</p>
<p>pom.xml</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log-study<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.lxcourse<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>slf4j-bridge-demo<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 注释掉log4j的依赖</span></span><br><span class="line"><span class="comment">        &lt;dependency&gt;</span></span><br><span class="line"><span class="comment">            &lt;groupId&gt;log4j&lt;/groupId&gt;</span></span><br><span class="line"><span class="comment">            &lt;artifactId&gt;log4j&lt;/artifactId&gt;</span></span><br><span class="line"><span class="comment">            &lt;version&gt;1.2.17&lt;/version&gt;</span></span><br><span class="line"><span class="comment">        &lt;/dependency&gt;</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--  slf4j的依赖  --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>slf4j-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.7.28<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--  logback的依赖      --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>ch.qos.logback<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>logback-classic<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--   log4j桥接器     --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j-over-slf4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.7.28<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">source</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">source</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">target</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">encoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">encoding</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>注意问题:</p>
<ol>
<li><p>jcl-over-slf4j.jar和 slf4j-jcl.jar不能同时部署。前一个jar文件将导致JCL将日志系统的选择委托给 SLF4J，后一个jar文件将导致SLF4J将日志系统的选择委托给JCL，从而导致无限循环。</p>
</li>
<li><p>log4j-over-slf4j.jar和slf4j-log4j12.jar不能同时出现</p>
</li>
<li><p>jul-to-slf4j.jar和slf4j-jdk14.jar不能同时出现</p>
</li>
<li><p>所有的桥接都只对Logger日志记录器对象有效，如果程序中调用了内部的配置类或者是Appender,Filter等对象，将无法产生效果。</p>
</li>
</ol>
<h3 id="10-SLF4J原理解析"><a href="#10-SLF4J原理解析" class="headerlink" title="10.SLF4J原理解析"></a>10.SLF4J原理解析</h3><ol>
<li>SLF4J通过LoggerFactory加载日志具体的实现对象。</li>
<li>LoggerFactory在初始化的过程中，会通过performInitialization()方法绑定具体的日志实现。</li>
<li>在绑定具体实现的时候，通过类加载器，加载org/slf4j/impl/StaticLoggerBinder.class</li>
<li>所以，只要是一个日志实现框架，在org.slf4j.impl包中提供一个自己的StaticLoggerBinder类，在其中提供具体日志实现的LoggerFactory就可以被SLF4J所加载</li>
</ol>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>日志</tag>
      </tags>
  </entry>
  <entry>
    <title>日志JCL初探</title>
    <url>/2020/05/29/%E6%97%A5%E5%BF%97JCL%E5%88%9D%E6%8E%A2/</url>
    <content><![CDATA[<h3 id="1-新建module-jcl-demo"><a href="#1-新建module-jcl-demo" class="headerlink" title="1.新建module,jcl-demo"></a>1.新建module,jcl-demo</h3><p>pom.xml</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log-study<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.lxcourse<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jcl-demo<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-logging<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-logging<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">source</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">source</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">target</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">encoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">encoding</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="2-JCLDemo-java默认使用JUL输出日志"><a href="#2-JCLDemo-java默认使用JUL输出日志" class="headerlink" title="2.JCLDemo.java默认使用JUL输出日志"></a>2.JCLDemo.java默认使用JUL输出日志</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.lxcourse.jcl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.commons.logging.Log;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.logging.LogFactory;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JCLDemo</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testQuick</span><span class="params">()</span></span>&#123;</span><br><span class="line">        Log log = LogFactory.getLog(JCLDemo<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        log.info(<span class="string">"hello jcl"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>输出结果：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">五月 29, 2020 8:22:36 上午 com.lxcourse.jcl.JCLDemo testQuick</span><br><span class="line">信息: hello jcl</span><br></pre></td></tr></table></figure>

<h3 id="3-pom-xml中添加log4j的依赖"><a href="#3-pom-xml中添加log4j的依赖" class="headerlink" title="3.pom.xml中添加log4j的依赖"></a>3.pom.xml中添加log4j的依赖</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.17<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="4-添加log4j-properties"><a href="#4-添加log4j-properties" class="headerlink" title="4.添加log4j.properties"></a>4.添加log4j.properties</h3><figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="meta">log4j.rootLogger</span>=<span class="string">trace,console</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定控制台日志输出的appender</span></span><br><span class="line"><span class="meta">log4j.appender.console</span> = <span class="string">org.apache.log4j.ConsoleAppender</span></span><br><span class="line"><span class="meta">log4j.appender.console.layout</span> = <span class="string">org.apache.log4j.PatternLayout</span></span><br><span class="line"><span class="meta">log4j.appender.console.layout.conversionPattern</span> = <span class="string">[%-5p] %r %C %M %d&#123;yyyy-MM-dd HH:mm:ss&#125; %m%n</span></span><br></pre></td></tr></table></figure>

<h3 id="5-执行JCLDemo-testQuick-方法，查看输出"><a href="#5-执行JCLDemo-testQuick-方法，查看输出" class="headerlink" title="5.执行JCLDemo.testQuick()方法，查看输出"></a>5.执行JCLDemo.testQuick()方法，查看输出</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[INFO ] 0 com.lxcourse.jcl.JCLDemo testQuick 2020-05-29 08:29:57 hello jcl</span><br></pre></td></tr></table></figure>

<h3 id="6-JCL原理"><a href="#6-JCL原理" class="headerlink" title="6.JCL原理"></a>6.JCL原理</h3><ol>
<li>通过LogFactory动态加载Log实现类</li>
<li>日志门面支持的日志实现数组</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String[] classesToDiscover = &#123;</span><br><span class="line">        LOGGING_IMPL_LOG4J_LOGGER,</span><br><span class="line">        <span class="string">"org.apache.commons.logging.impl.Jdk14Logger"</span>,</span><br><span class="line">        <span class="string">"org.apache.commons.logging.impl.Jdk13LumberjackLogger"</span>,</span><br><span class="line">        <span class="string">"org.apache.commons.logging.impl.SimpleLog"</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>获取具体的日志实现</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;classesToDiscover.length &amp;&amp; result == <span class="keyword">null</span>; ++i) &#123;</span><br><span class="line">    result = createLogFromClass(classesToDiscover[i], logCategory, <span class="keyword">true</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>日志</tag>
      </tags>
  </entry>
  <entry>
    <title>Log4j日志初探</title>
    <url>/2020/05/28/Log4j%E6%97%A5%E5%BF%97%E5%88%9D%E6%8E%A2/</url>
    <content><![CDATA[<h3 id="1-新建module，log4j-demo"><a href="#1-新建module，log4j-demo" class="headerlink" title="1.新建module，log4j-demo"></a>1.新建module，log4j-demo</h3><p>pom.xml</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log-study<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.lxcourse<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j-demo<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.17<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">source</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">source</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">target</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">encoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">encoding</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="2-快速入门"><a href="#2-快速入门" class="headerlink" title="2.快速入门"></a>2.快速入门</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.lxcourse.log4j;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.log4j.BasicConfigurator;</span><br><span class="line"><span class="keyword">import</span> org.apache.log4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> doubledumbao</span></span><br><span class="line"><span class="comment"> * 测试log4j</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Log4jDemo</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testQuick</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">//初始化配置信息，在入门案例中暂不使用配置文件</span></span><br><span class="line">        BasicConfigurator.configure();</span><br><span class="line">        Logger logger = Logger.getLogger(Log4jDemo<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">        logger.info(<span class="string">"hello log4j"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//日志级别</span></span><br><span class="line">        logger.fatal(<span class="string">"fatal"</span>); <span class="comment">//严重错误，一般会造成系统崩溃并终止运行</span></span><br><span class="line">        logger.error(<span class="string">"error"</span>); <span class="comment">// 错误信息，不影响系统运行</span></span><br><span class="line">        logger.warn(<span class="string">"warn"</span>); <span class="comment">// 警告信息，可能会发生问题</span></span><br><span class="line">        logger.info(<span class="string">"info"</span>); <span class="comment">// 运行信息</span></span><br><span class="line">        logger.debug(<span class="string">"debug"</span>); <span class="comment">// 调试信息</span></span><br><span class="line">        logger.trace(<span class="string">"trace"</span>); <span class="comment">// 追踪信息，记录程序所有的流程信息</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="3-log4j-properties配置文件"><a href="#3-log4j-properties配置文件" class="headerlink" title="3.log4j.properties配置文件"></a>3.log4j.properties配置文件</h3><figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="meta">log4j.rootLogger</span> = <span class="string">trace,console</span></span><br><span class="line"><span class="meta">log4j.appender.console</span> = <span class="string">org.apache.log4j.ConsoleAppender</span></span><br><span class="line"><span class="meta">log4j.appender.console.layout</span> = <span class="string">org.apache.log4j.SimpleLayout</span></span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 配置文件log4j.properties</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testConfigFile</span><span class="params">()</span></span>&#123;</span><br><span class="line">        Logger logger = Logger.getLogger(Log4jDemo<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">        logger.info(<span class="string">"hello log4j"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//日志级别</span></span><br><span class="line">        logger.fatal(<span class="string">"fatal"</span>); <span class="comment">//严重错误，一般会造成系统崩溃并终止运行</span></span><br><span class="line">        logger.error(<span class="string">"error"</span>); <span class="comment">// 错误信息，不影响系统运行</span></span><br><span class="line">        logger.warn(<span class="string">"warn"</span>); <span class="comment">// 警告信息，可能会发生问题</span></span><br><span class="line">        logger.info(<span class="string">"info"</span>); <span class="comment">// 运行信息</span></span><br><span class="line">        logger.debug(<span class="string">"debug"</span>); <span class="comment">// 调试信息</span></span><br><span class="line">        logger.trace(<span class="string">"trace"</span>); <span class="comment">// 追踪信息，记录程序所有的流程信息</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<h3 id="4-开启log4j内置日志记录"><a href="#4-开启log4j内置日志记录" class="headerlink" title="4.开启log4j内置日志记录"></a>4.开启log4j内置日志记录</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 开启log4j内置日志记录</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testLogLog</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">//开启log4j内置日志记录</span></span><br><span class="line">        LogLog.setInternalDebugging(<span class="keyword">true</span>);</span><br><span class="line">        Logger logger = Logger.getLogger(Log4jDemo<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">        logger.info(<span class="string">"hello log4j"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//日志级别</span></span><br><span class="line">        logger.fatal(<span class="string">"fatal"</span>); <span class="comment">//严重错误，一般会造成系统崩溃并终止运行</span></span><br><span class="line">        logger.error(<span class="string">"error"</span>); <span class="comment">// 错误信息，不影响系统运行</span></span><br><span class="line">        logger.warn(<span class="string">"warn"</span>); <span class="comment">// 警告信息，可能会发生问题</span></span><br><span class="line">        logger.info(<span class="string">"info"</span>); <span class="comment">// 运行信息</span></span><br><span class="line">        logger.debug(<span class="string">"debug"</span>); <span class="comment">// 调试信息</span></span><br><span class="line">        logger.trace(<span class="string">"trace"</span>); <span class="comment">// 追踪信息，记录程序所有的流程信息</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p><a href="http://logging.apache.org/log4j/1.2/apidocs/org/apache/log4j/PatternLayout.html" target="_blank" rel="noopener">PatternLayout</a></p>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="meta">log4j.rootLogger</span> = <span class="string">trace,console</span></span><br><span class="line"><span class="comment"># 指定控制台日志输出的appender</span></span><br><span class="line"><span class="meta">log4j.appender.console</span> = <span class="string">org.apache.log4j.ConsoleAppender</span></span><br><span class="line"><span class="comment">#log4j.appender.console.layout = org.apache.log4j.SimpleLayout</span></span><br><span class="line"><span class="comment">#log4j.appender.console.layout = org.apache.log4j.HTMLLayout</span></span><br><span class="line"><span class="comment">#log4j.appender.console.layout = org.apache.log4j.xml.XMLLayout</span></span><br><span class="line"><span class="meta">log4j.appender.console.layout</span> = <span class="string">org.apache.log4j.PatternLayout</span></span><br><span class="line"><span class="meta">log4j.appender.console.layout.conversionPattern</span> = <span class="string">[%-5p] %r %C %M %d&#123;yyyy-MM-dd HH:mm:ss&#125; %m%n</span></span><br></pre></td></tr></table></figure>
<h3 id="5-将日志输出到文件"><a href="#5-将日志输出到文件" class="headerlink" title="5.将日志输出到文件"></a>5.将日志输出到文件</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 测试FileAppender</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFileAppender</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//开启log4j内置日志记录</span></span><br><span class="line">    LogLog.setInternalDebugging(<span class="keyword">true</span>);</span><br><span class="line">    Logger logger = Logger.getLogger(Log4jDemo<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">    logger.info(<span class="string">"hello log4j"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//日志级别</span></span><br><span class="line">    logger.fatal(<span class="string">"fatal"</span>); <span class="comment">//严重错误，一般会造成系统崩溃并终止运行</span></span><br><span class="line">    logger.error(<span class="string">"error"</span>); <span class="comment">// 错误信息，不影响系统运行</span></span><br><span class="line">    logger.warn(<span class="string">"warn"</span>); <span class="comment">// 警告信息，可能会发生问题</span></span><br><span class="line">    logger.info(<span class="string">"info"</span>); <span class="comment">// 运行信息</span></span><br><span class="line">    logger.debug(<span class="string">"debug"</span>); <span class="comment">// 调试信息</span></span><br><span class="line">    logger.trace(<span class="string">"trace"</span>); <span class="comment">// 追踪信息，记录程序所有的流程信息</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="meta">log4j.rootLogger</span>=<span class="string">trace,console,file</span></span><br><span class="line"><span class="comment"># 指定控制台日志输出的appender</span></span><br><span class="line"><span class="meta">log4j.appender.console</span> = <span class="string">org.apache.log4j.ConsoleAppender</span></span><br><span class="line"><span class="comment">#log4j.appender.console.layout = org.apache.log4j.SimpleLayout</span></span><br><span class="line"><span class="comment">#log4j.appender.console.layout = org.apache.log4j.HTMLLayout</span></span><br><span class="line"><span class="comment">#log4j.appender.console.layout = org.apache.log4j.xml.XMLLayout</span></span><br><span class="line"><span class="meta">log4j.appender.console.layout</span> = <span class="string">org.apache.log4j.PatternLayout</span></span><br><span class="line"><span class="meta">log4j.appender.console.layout.conversionPattern</span> = <span class="string">[%-5p] %r %C %M %d&#123;yyyy-MM-dd HH:mm:ss&#125; %m%n</span></span><br><span class="line"><span class="comment">#log4j 采用类似 C 语言的 printf 函数的打印格式格式化日志信息，具体的占位符及其含义如下:</span></span><br><span class="line"><span class="comment">#%m 输出代码中指定的日志信息</span></span><br><span class="line"><span class="comment">#%p 输出优先级，及 DEBUG、INFO 等</span></span><br><span class="line"><span class="comment">#%n 换行符(Windows平台的换行符为 "\n"，Unix 平台为 "\n")</span></span><br><span class="line"><span class="comment">#%r 输出自应用启动到输出该 log 信息耗费的毫秒数</span></span><br><span class="line"><span class="comment">#%c 输出打印语句所属的类的全名</span></span><br><span class="line"><span class="comment">#%t 输出产生该日志的线程全名</span></span><br><span class="line"><span class="comment">#%d 输出服务器当前时间，默认为 ISO8601，也可以指定格式，如:%d&#123;yyyy年MM月dd日HH:mm:ss&#125;</span></span><br><span class="line"><span class="comment">#%l 输出日志时间发生的位置，包括类名、线程、及在代码中的行数。如:Test.main(Test.java:10)</span></span><br><span class="line"><span class="comment">#%F 输出日志消息产生时所在的文件名称</span></span><br><span class="line"><span class="comment">#%L 输出代码中的行号 %% 输出一个 "%" 字符</span></span><br><span class="line"><span class="comment">#* 可以在 % 与字符之间加上修饰符来控制最小宽度、最大宽度和文本的对其方式。如:</span></span><br><span class="line"><span class="comment">#%5c 输出category名称，最小宽度是5，category&lt;5，默认的情况下右对齐</span></span><br><span class="line"><span class="comment">#%-5c 输出category名称，最小宽度是5，category&lt;5，"-"号指定左对齐,会有空格</span></span><br><span class="line"><span class="comment">#%.5c 输出category名称，最大宽度是5，category&gt;5，就会将左边多出的字符截掉，&lt;5不会有空格</span></span><br><span class="line"><span class="comment">#%20.30c category名称&lt;20补空格，并且右对齐，&gt;30字符，就从左边交远销出的字符截掉</span></span><br><span class="line"><span class="comment"># 文件输出配置</span></span><br><span class="line"><span class="meta">log4j.appender.file</span> = <span class="string">org.apache.log4j.FileAppender</span></span><br><span class="line"><span class="meta">log4j.appender.file.file</span> = <span class="string">/Users/doubledumbao/logs/log4j.log</span></span><br><span class="line"><span class="meta">log4j.appender.file.layout</span> = <span class="string">org.apache.log4j.PatternLayout</span></span><br><span class="line"><span class="meta">log4j.appender.file.layout.conversionPattern</span> = <span class="string">[%-5p] %r %C %M %d&#123;yyyy-MM-dd HH:mm:ss&#125; %m%n</span></span><br><span class="line"><span class="meta">log4j.appender.file.encoding</span> = <span class="string">UTF-8</span></span><br></pre></td></tr></table></figure>

<h3 id="6-按照文件大小拆分的appender对象"><a href="#6-按照文件大小拆分的appender对象" class="headerlink" title="6.按照文件大小拆分的appender对象"></a>6.按照文件大小拆分的appender对象</h3><figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="meta">log4j.rootLogger</span>=<span class="string">trace,console,rollingFile</span></span><br><span class="line"><span class="comment"># 指定控制台日志输出的appender</span></span><br><span class="line"><span class="meta">log4j.appender.console</span> = <span class="string">org.apache.log4j.ConsoleAppender</span></span><br><span class="line"><span class="comment">#log4j.appender.console.layout = org.apache.log4j.SimpleLayout</span></span><br><span class="line"><span class="comment">#log4j.appender.console.layout = org.apache.log4j.HTMLLayout</span></span><br><span class="line"><span class="comment">#log4j.appender.console.layout = org.apache.log4j.xml.XMLLayout</span></span><br><span class="line"><span class="meta">log4j.appender.console.layout</span> = <span class="string">org.apache.log4j.PatternLayout</span></span><br><span class="line"><span class="meta">log4j.appender.console.layout.conversionPattern</span> = <span class="string">[%-5p] %r %C %M %d&#123;yyyy-MM-dd HH:mm:ss&#125; %m%n</span></span><br><span class="line"><span class="comment">#log4j 采用类似 C 语言的 printf 函数的打印格式格式化日志信息，具体的占位符及其含义如下:</span></span><br><span class="line"><span class="comment">#%m 输出代码中指定的日志信息</span></span><br><span class="line"><span class="comment">#%p 输出优先级，及 DEBUG、INFO 等</span></span><br><span class="line"><span class="comment">#%n 换行符(Windows平台的换行符为 "\n"，Unix 平台为 "\n")</span></span><br><span class="line"><span class="comment">#%r 输出自应用启动到输出该 log 信息耗费的毫秒数</span></span><br><span class="line"><span class="comment">#%c 输出打印语句所属的类的全名</span></span><br><span class="line"><span class="comment">#%t 输出产生该日志的线程全名</span></span><br><span class="line"><span class="comment">#%d 输出服务器当前时间，默认为 ISO8601，也可以指定格式，如:%d&#123;yyyy年MM月dd日HH:mm:ss&#125;</span></span><br><span class="line"><span class="comment">#%l 输出日志时间发生的位置，包括类名、线程、及在代码中的行数。如:Test.main(Test.java:10)</span></span><br><span class="line"><span class="comment">#%F 输出日志消息产生时所在的文件名称</span></span><br><span class="line"><span class="comment">#%L 输出代码中的行号 %% 输出一个 "%" 字符</span></span><br><span class="line"><span class="comment">#* 可以在 % 与字符之间加上修饰符来控制最小宽度、最大宽度和文本的对其方式。如:</span></span><br><span class="line"><span class="comment">#%5c 输出category名称，最小宽度是5，category&lt;5，默认的情况下右对齐</span></span><br><span class="line"><span class="comment">#%-5c 输出category名称，最小宽度是5，category&lt;5，"-"号指定左对齐,会有空格</span></span><br><span class="line"><span class="comment">#%.5c 输出category名称，最大宽度是5，category&gt;5，就会将左边多出的字符截掉，&lt;5不会有空格</span></span><br><span class="line"><span class="comment">#%20.30c category名称&lt;20补空格，并且右对齐，&gt;30字符，就从左边交远销出的字符截掉</span></span><br><span class="line"><span class="comment"># 文件输出配置</span></span><br><span class="line"><span class="meta">log4j.appender.file</span> = <span class="string">org.apache.log4j.FileAppender</span></span><br><span class="line"><span class="meta">log4j.appender.file.file</span> = <span class="string">/Users/doubledumbao/logs/log4j.log</span></span><br><span class="line"><span class="meta">log4j.appender.file.layout</span> = <span class="string">org.apache.log4j.PatternLayout</span></span><br><span class="line"><span class="meta">log4j.appender.file.layout.conversionPattern</span> = <span class="string">[%-5p] %r %C %M %d&#123;yyyy-MM-dd HH:mm:ss&#125; %m%n</span></span><br><span class="line"><span class="meta">log4j.appender.file.encoding</span> = <span class="string">UTF-8</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 按照文件大小拆分的appender对象</span></span><br><span class="line"><span class="meta">log4j.appender.rollingFile</span> = <span class="string">org.apache.log4j.RollingFileAppender</span></span><br><span class="line"><span class="comment"># 指定日志文件保存路径</span></span><br><span class="line"><span class="meta">log4j.appender.rollingFile.file</span> = <span class="string">/Users/doubledumbao/logs/log4j.log</span></span><br><span class="line"><span class="comment"># 指定消息格式</span></span><br><span class="line"><span class="meta">log4j.appender.rollingFile.layout</span> = <span class="string">org.apache.log4j.PatternLayout</span></span><br><span class="line"><span class="comment"># 指定消息格式的内容</span></span><br><span class="line"><span class="meta">log4j.appender.rollingFile.layout.conversionPattern</span> = <span class="string">[%-5p] %r %C %M %d&#123;yyyy-MM-dd HH:mm:ss&#125; %m%n</span></span><br><span class="line"><span class="comment"># 指定日志文件的字符集</span></span><br><span class="line"><span class="meta">log4j.appender.rollingFile.encoding</span> = <span class="string">UTF-8</span></span><br><span class="line"><span class="comment"># 指定日志文件内容的大小</span></span><br><span class="line"><span class="meta">log4j.appender.rollingFile.maxFileSize</span> = <span class="string">1MB</span></span><br><span class="line"><span class="comment"># 指定日志文件的数量</span></span><br><span class="line"><span class="meta">log4j.appender.rollingFile.maxBackupIndex</span> = <span class="string">10</span></span><br></pre></td></tr></table></figure>

<h3 id="7-按照时间规则拆分的appender对象"><a href="#7-按照时间规则拆分的appender对象" class="headerlink" title="7.按照时间规则拆分的appender对象"></a>7.按照时间规则拆分的appender对象</h3><figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="meta">log4j.rootLogger</span>=<span class="string">trace,dailyRollingFile</span></span><br><span class="line"><span class="comment"># 指定控制台日志输出的appender</span></span><br><span class="line"><span class="meta">log4j.appender.console</span> = <span class="string">org.apache.log4j.ConsoleAppender</span></span><br><span class="line"><span class="comment">#log4j.appender.console.layout = org.apache.log4j.SimpleLayout</span></span><br><span class="line"><span class="comment">#log4j.appender.console.layout = org.apache.log4j.HTMLLayout</span></span><br><span class="line"><span class="comment">#log4j.appender.console.layout = org.apache.log4j.xml.XMLLayout</span></span><br><span class="line"><span class="meta">log4j.appender.console.layout</span> = <span class="string">org.apache.log4j.PatternLayout</span></span><br><span class="line"><span class="meta">log4j.appender.console.layout.conversionPattern</span> = <span class="string">[%-5p] %r %C %M %d&#123;yyyy-MM-dd HH:mm:ss&#125; %m%n</span></span><br><span class="line"><span class="comment">#log4j 采用类似 C 语言的 printf 函数的打印格式格式化日志信息，具体的占位符及其含义如下:</span></span><br><span class="line"><span class="comment">#%m 输出代码中指定的日志信息</span></span><br><span class="line"><span class="comment">#%p 输出优先级，及 DEBUG、INFO 等</span></span><br><span class="line"><span class="comment">#%n 换行符(Windows平台的换行符为 "\n"，Unix 平台为 "\n")</span></span><br><span class="line"><span class="comment">#%r 输出自应用启动到输出该 log 信息耗费的毫秒数</span></span><br><span class="line"><span class="comment">#%c 输出打印语句所属的类的全名</span></span><br><span class="line"><span class="comment">#%t 输出产生该日志的线程全名</span></span><br><span class="line"><span class="comment">#%d 输出服务器当前时间，默认为 ISO8601，也可以指定格式，如:%d&#123;yyyy年MM月dd日HH:mm:ss&#125;</span></span><br><span class="line"><span class="comment">#%l 输出日志时间发生的位置，包括类名、线程、及在代码中的行数。如:Test.main(Test.java:10)</span></span><br><span class="line"><span class="comment">#%F 输出日志消息产生时所在的文件名称</span></span><br><span class="line"><span class="comment">#%L 输出代码中的行号 %% 输出一个 "%" 字符</span></span><br><span class="line"><span class="comment">#* 可以在 % 与字符之间加上修饰符来控制最小宽度、最大宽度和文本的对其方式。如:</span></span><br><span class="line"><span class="comment">#%5c 输出category名称，最小宽度是5，category&lt;5，默认的情况下右对齐</span></span><br><span class="line"><span class="comment">#%-5c 输出category名称，最小宽度是5，category&lt;5，"-"号指定左对齐,会有空格</span></span><br><span class="line"><span class="comment">#%.5c 输出category名称，最大宽度是5，category&gt;5，就会将左边多出的字符截掉，&lt;5不会有空格</span></span><br><span class="line"><span class="comment">#%20.30c category名称&lt;20补空格，并且右对齐，&gt;30字符，就从左边交远销出的字符截掉</span></span><br><span class="line"><span class="comment"># 文件输出配置</span></span><br><span class="line"><span class="meta">log4j.appender.file</span> = <span class="string">org.apache.log4j.FileAppender</span></span><br><span class="line"><span class="meta">log4j.appender.file.file</span> = <span class="string">/Users/doubledumbao/logs/log4j.log</span></span><br><span class="line"><span class="meta">log4j.appender.file.layout</span> = <span class="string">org.apache.log4j.PatternLayout</span></span><br><span class="line"><span class="meta">log4j.appender.file.layout.conversionPattern</span> = <span class="string">[%-5p] %r %C %M %d&#123;yyyy-MM-dd HH:mm:ss&#125; %m%n</span></span><br><span class="line"><span class="meta">log4j.appender.file.encoding</span> = <span class="string">UTF-8</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 按照文件大小拆分的appender对象</span></span><br><span class="line"><span class="meta">log4j.appender.rollingFile</span> = <span class="string">org.apache.log4j.RollingFileAppender</span></span><br><span class="line"><span class="comment"># 指定日志文件保存路径</span></span><br><span class="line"><span class="meta">log4j.appender.rollingFile.file</span> = <span class="string">/Users/doubledumbao/logs/log4j.log</span></span><br><span class="line"><span class="comment"># 指定消息格式</span></span><br><span class="line"><span class="meta">log4j.appender.rollingFile.layout</span> = <span class="string">org.apache.log4j.PatternLayout</span></span><br><span class="line"><span class="comment"># 指定消息格式的内容</span></span><br><span class="line"><span class="meta">log4j.appender.rollingFile.layout.conversionPattern</span> = <span class="string">[%-5p] %r %C %M %d&#123;yyyy-MM-dd HH:mm:ss&#125; %m%n</span></span><br><span class="line"><span class="comment"># 指定日志文件的字符集</span></span><br><span class="line"><span class="meta">log4j.appender.rollingFile.encoding</span> = <span class="string">UTF-8</span></span><br><span class="line"><span class="comment"># 指定日志文件内容的大小</span></span><br><span class="line"><span class="meta">log4j.appender.rollingFile.maxFileSize</span> = <span class="string">1MB</span></span><br><span class="line"><span class="comment"># 指定日志文件的数量</span></span><br><span class="line"><span class="meta">log4j.appender.rollingFile.maxBackupIndex</span> = <span class="string">10</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 按照时间拆分的appender对象</span></span><br><span class="line"><span class="meta">log4j.appender.dailyRollingFile</span> = <span class="string">org.apache.log4j.DailyRollingFileAppender</span></span><br><span class="line"><span class="comment"># 指定日志文件保存路径</span></span><br><span class="line"><span class="meta">log4j.appender.dailyRollingFile.file</span> = <span class="string">/Users/doubledumbao/logs/log4j.log</span></span><br><span class="line"><span class="comment"># 指定消息格式</span></span><br><span class="line"><span class="meta">log4j.appender.dailyRollingFile.layout</span> = <span class="string">org.apache.log4j.PatternLayout</span></span><br><span class="line"><span class="comment"># 指定消息格式的内容</span></span><br><span class="line"><span class="meta">log4j.appender.dailyRollingFile.layout.conversionPattern</span> = <span class="string">[%-5p] %r %C %M %d&#123;yyyy-MM-dd HH:mm:ss&#125; %m%n</span></span><br><span class="line"><span class="comment"># 指定日志文件的字符集</span></span><br><span class="line"><span class="meta">log4j.appender.dailyRollingFile.encoding</span> = <span class="string">UTF-8</span></span><br><span class="line"><span class="comment"># 指定日期拆分规则</span></span><br><span class="line"><span class="meta">log4j.appender.dailyRollingFile.datePattern</span> = <span class="string">'.'yyyy-MM-dd-HH-mm-ss</span></span><br></pre></td></tr></table></figure>

<h3 id="8-将日志存入数据库mysql中"><a href="#8-将日志存入数据库mysql中" class="headerlink" title="8.将日志存入数据库mysql中"></a>8.将日志存入数据库mysql中</h3><p>准备工作</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">databases</span> ;</span><br><span class="line"><span class="comment"># 创建数据库test</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">database</span> <span class="keyword">test</span> <span class="built_in">character</span> <span class="keyword">set</span> utf8mb4;</span><br><span class="line"><span class="comment"># 使用数据库test</span></span><br><span class="line"><span class="keyword">use</span> <span class="keyword">test</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建表log</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`log`</span></span><br><span class="line">(</span><br><span class="line">    <span class="string">`log_id`</span>       <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT,</span><br><span class="line">    <span class="string">`project_name`</span> <span class="built_in">varchar</span>(<span class="number">255</span>)  <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'目项名'</span>,</span><br><span class="line">    <span class="string">`create_date`</span>  <span class="built_in">varchar</span>(<span class="number">255</span>)  <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'创建时间'</span>,</span><br><span class="line">    <span class="string">`level`</span>        <span class="built_in">varchar</span>(<span class="number">255</span>)  <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'优先级'</span>,</span><br><span class="line">    <span class="string">`category`</span>     <span class="built_in">varchar</span>(<span class="number">255</span>)  <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'所在类的全名'</span>,</span><br><span class="line">    <span class="string">`file_name`</span>    <span class="built_in">varchar</span>(<span class="number">255</span>)  <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'输出日志消息产生时所在的文件名称 '</span>,</span><br><span class="line">    <span class="string">`thread_name`</span>  <span class="built_in">varchar</span>(<span class="number">255</span>)  <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'日志事件的线程名'</span>,</span><br><span class="line">    <span class="string">`line`</span>         <span class="built_in">varchar</span>(<span class="number">255</span>)  <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'号行'</span>,</span><br><span class="line">    <span class="string">`all_category`</span> <span class="built_in">varchar</span>(<span class="number">255</span>)  <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'日志事件的发生位置'</span>,</span><br><span class="line">    <span class="string">`message`</span>      <span class="built_in">varchar</span>(<span class="number">4000</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'输出代码中指定的消息'</span>,</span><br><span class="line">    PRIMARY <span class="keyword">KEY</span> (<span class="string">`log_id`</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure>
<p>pom.xml添加mysql的依赖</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.47<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>


<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="meta">log4j.rootLogger</span>=<span class="string">trace,logDB</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#将日志存储到mysql</span></span><br><span class="line"><span class="meta">log4j.appender.logDB</span> = <span class="string">org.apache.log4j.jdbc.JDBCAppender</span></span><br><span class="line"><span class="meta">log4j.appender.logDB.layout</span> = <span class="string">org.apache.log4j.PatternLayout</span></span><br><span class="line"><span class="meta">log4j.appender.logDB.Driver</span> = <span class="string">com.mysql.jdbc.Driver</span></span><br><span class="line"><span class="meta">log4j.appender.logDB.URL</span> = <span class="string">jdbc:mysql://192.168.0.119:3306/test</span></span><br><span class="line"><span class="meta">log4j.appender.logDB.User</span> = <span class="string">root</span></span><br><span class="line"><span class="meta">log4j.appender.logDB.Password</span> = <span class="string">123456</span></span><br><span class="line"><span class="meta">log4j.appender.logDB.Sql</span> = <span class="string">INSERT INTO log(project_name,create_date,level,category,file_name,thread_name,line,all_category,message) values('itcast','%d&#123;yyyy-MM-dd HH:mm:ss&#125;','%p','%c','%F','%t','%L','%l','%m')</span></span><br></pre></td></tr></table></figure>

<h3 id="9-自定义logger对象输出"><a href="#9-自定义logger对象输出" class="headerlink" title="9.自定义logger对象输出"></a>9.自定义logger对象输出</h3><figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="meta">log4j.rootLogger</span>=<span class="string">trace,console</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 自定义logger对象输出</span></span><br><span class="line"><span class="meta">log4j.logger.com.lxcourse</span> = <span class="string">info,file</span></span><br><span class="line"><span class="meta">log4j.logger.org.apache</span> = <span class="string">error,file</span></span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 测试自定义日志</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testSelfLogger</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">//开启log4j内置日志记录</span></span><br><span class="line">    LogLog.setInternalDebugging(<span class="keyword">true</span>);</span><br><span class="line">    Logger logger = Logger.getLogger(Log4jDemo<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">    logger.info(<span class="string">"hello log4j"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//日志级别</span></span><br><span class="line">    logger.fatal(<span class="string">"fatal"</span>); <span class="comment">//严重错误，一般会造成系统崩溃并终止运行</span></span><br><span class="line">    logger.error(<span class="string">"error"</span>); <span class="comment">// 错误信息，不影响系统运行</span></span><br><span class="line">    logger.warn(<span class="string">"warn"</span>); <span class="comment">// 警告信息，可能会发生问题</span></span><br><span class="line">    logger.info(<span class="string">"info"</span>); <span class="comment">// 运行信息</span></span><br><span class="line">    logger.debug(<span class="string">"debug"</span>); <span class="comment">// 调试信息</span></span><br><span class="line">    logger.trace(<span class="string">"trace"</span>); <span class="comment">// 追踪信息，记录程序所有的流程信息</span></span><br><span class="line"></span><br><span class="line">    Logger logger1 = Logger.getLogger(Logger<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    <span class="comment">//日志级别</span></span><br><span class="line">    logger1.fatal(<span class="string">"fatal logger1"</span>); <span class="comment">//严重错误，一般会造成系统崩溃并终止运行</span></span><br><span class="line">    logger1.error(<span class="string">"error logger1"</span>); <span class="comment">// 错误信息，不影响系统运行</span></span><br><span class="line">    logger1.warn(<span class="string">"warn logger1"</span>); <span class="comment">// 警告信息，可能会发生问题</span></span><br><span class="line">    logger1.info(<span class="string">"info logger1"</span>); <span class="comment">// 运行信息</span></span><br><span class="line">    logger1.debug(<span class="string">"debug logger1"</span>); <span class="comment">// 调试信息</span></span><br><span class="line">    logger1.trace(<span class="string">"trace logger1"</span>); <span class="comment">// 追踪信息，记录程序所有的流程信息</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>日志</tag>
      </tags>
  </entry>
  <entry>
    <title>JUL日志初探</title>
    <url>/2020/05/27/JUL%E6%97%A5%E5%BF%97%E5%88%9D%E6%8E%A2/</url>
    <content><![CDATA[<h3 id="1-新建maven工程-log-study"><a href="#1-新建maven工程-log-study" class="headerlink" title="1.新建maven工程 log-study"></a>1.新建maven工程 log-study</h3><p>pom.xml</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.lxcourse<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log-study<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">modules</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">module</span>&gt;</span>jul-demo<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">modules</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="2-新建module，jul-demo"><a href="#2-新建module，jul-demo" class="headerlink" title="2.新建module，jul-demo"></a>2.新建module，jul-demo</h3><p>pom.xml</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log-study<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.lxcourse<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jul-demo<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">source</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">source</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">target</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">encoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">encoding</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>JULDemo.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.lxcourse.jul;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.logging.Level;</span><br><span class="line"><span class="keyword">import</span> java.util.logging.Logger;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> doubledumbao</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JULDemo</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">		<span class="comment">/**</span></span><br><span class="line"><span class="comment">		* 快速入门</span></span><br><span class="line"><span class="comment">		*/</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testQuick</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//获取日志记录器对象</span></span><br><span class="line">        Logger logger = Logger.getLogger(<span class="string">"com.lxcourse.jul.JULDemo"</span>);</span><br><span class="line">        <span class="comment">//日志记录输出</span></span><br><span class="line">        logger.info(<span class="string">"hello jul"</span>);</span><br><span class="line">        <span class="comment">//通用方法进行日志记录</span></span><br><span class="line">        logger.log(Level.INFO, <span class="string">"hello world"</span>);</span><br><span class="line">        <span class="comment">//占位符方式输出变量值</span></span><br><span class="line">        logger.log(Level.INFO, <span class="string">"用户信息：姓名：&#123;0&#125;，年龄：&#123;1&#125;"</span>, <span class="keyword">new</span> Object[]&#123;<span class="string">"zhangsan"</span>, <span class="number">23</span>&#125;);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 测试日志级别</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testLevel</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">//获取日志记录器对象</span></span><br><span class="line">        Logger logger = Logger.getLogger(<span class="string">"com.lxcourse.jul.JULDemo"</span>);</span><br><span class="line">        <span class="comment">//日志级别</span></span><br><span class="line">        logger.severe(<span class="string">"severe"</span>);</span><br><span class="line">        logger.warning(<span class="string">"warning"</span>);</span><br><span class="line">        logger.info(<span class="string">"info"</span>);</span><br><span class="line">        logger.config(<span class="string">"config"</span>);</span><br><span class="line">        logger.fine(<span class="string">"fine"</span>);</span><br><span class="line">        logger.finer(<span class="string">"finer"</span>);</span><br><span class="line">        logger.finest(<span class="string">"finest"</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 自定义日志级别</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testLogConfig</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        <span class="comment">//获取日志记录器对象</span></span><br><span class="line">        Logger logger = Logger.getLogger(<span class="string">"com.lxcourse.jul.JULDemo"</span>);</span><br><span class="line">        <span class="comment">//关闭默认日志级别</span></span><br><span class="line">        logger.setUseParentHandlers(<span class="keyword">false</span>);</span><br><span class="line">        <span class="comment">//输出到控制台</span></span><br><span class="line">        ConsoleHandler consoleHandler = <span class="keyword">new</span> ConsoleHandler();</span><br><span class="line">        SimpleFormatter simpleFormatter = <span class="keyword">new</span> SimpleFormatter();</span><br><span class="line">        consoleHandler.setFormatter(simpleFormatter);</span><br><span class="line">        logger.addHandler(consoleHandler);</span><br><span class="line">        logger.setLevel(Level.ALL);</span><br><span class="line">        consoleHandler.setLevel(Level.ALL);</span><br><span class="line">        <span class="comment">//输出到文件</span></span><br><span class="line">        FileHandler fileHandler = <span class="keyword">new</span> FileHandler(<span class="string">"/Users/doubledumbao/logs/jul.log"</span>);</span><br><span class="line">        fileHandler.setFormatter(simpleFormatter);</span><br><span class="line">        logger.addHandler(fileHandler);</span><br><span class="line">        <span class="comment">//日志级别</span></span><br><span class="line">        logger.severe(<span class="string">"severe"</span>);</span><br><span class="line">        logger.warning(<span class="string">"warning"</span>);</span><br><span class="line">        logger.info(<span class="string">"info"</span>);</span><br><span class="line">        logger.config(<span class="string">"config"</span>);</span><br><span class="line">        logger.fine(<span class="string">"fine"</span>);</span><br><span class="line">        logger.finer(<span class="string">"finer"</span>);</span><br><span class="line">        logger.finest(<span class="string">"finest"</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 日志对象父子关系</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testLogParent</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">//子</span></span><br><span class="line">        Logger logger1 = Logger.getLogger(<span class="string">"com.lxcourse"</span>);</span><br><span class="line">        <span class="comment">//父</span></span><br><span class="line">        Logger logger2 = Logger.getLogger(<span class="string">"com"</span>);</span><br><span class="line"></span><br><span class="line">        System.out.println(logger1.getParent() == logger2);</span><br><span class="line">        <span class="comment">//所有日志记录器的顶级父元素java.util.logging.LogManager$RootLogger ，name ""</span></span><br><span class="line">        System.out.println(<span class="string">"logger2 parent:"</span>+logger2.getParent()+<span class="string">",name:"</span>+logger2.getParent().getName());</span><br><span class="line">        <span class="comment">//关闭默认配置</span></span><br><span class="line">        logger2.setUseParentHandlers(<span class="keyword">false</span>);</span><br><span class="line">        ConsoleHandler consoleHandler = <span class="keyword">new</span> ConsoleHandler();</span><br><span class="line">        SimpleFormatter simpleFormatter = <span class="keyword">new</span> SimpleFormatter();</span><br><span class="line">        consoleHandler.setFormatter(simpleFormatter);</span><br><span class="line">        logger2.addHandler(consoleHandler);</span><br><span class="line">        logger2.setLevel(Level.ALL);</span><br><span class="line">        consoleHandler.setLevel(Level.ALL);</span><br><span class="line">        <span class="comment">//日志级别</span></span><br><span class="line">        logger1.severe(<span class="string">"severe"</span>);</span><br><span class="line">        logger1.warning(<span class="string">"warning"</span>);</span><br><span class="line">        logger1.info(<span class="string">"info"</span>);</span><br><span class="line">        logger1.config(<span class="string">"config"</span>);</span><br><span class="line">        logger1.fine(<span class="string">"fine"</span>);</span><br><span class="line">        logger1.finer(<span class="string">"finer"</span>);</span><br><span class="line">        logger1.finest(<span class="string">"finest"</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 配置文件</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> IOException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testConfigFile</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        InputStream inputStream = JULDemo.class.getClassLoader().getResourceAsStream("logging.properties");</span><br><span class="line">        Logger logger = Logger.getLogger(<span class="string">"com.lxcourse.jul.JULDemo"</span>);</span><br><span class="line">        LogManager manager = LogManager.getLogManager();</span><br><span class="line">        manager.readConfiguration(inputStream);</span><br><span class="line">        <span class="comment">//日志级别</span></span><br><span class="line">        logger.severe(<span class="string">"severe"</span>);</span><br><span class="line">        logger.warning(<span class="string">"warning"</span>);</span><br><span class="line">        logger.info(<span class="string">"info"</span>);</span><br><span class="line">        logger.config(<span class="string">"config"</span>);</span><br><span class="line">        logger.fine(<span class="string">"fine"</span>);</span><br><span class="line">        logger.finer(<span class="string">"finer"</span>);</span><br><span class="line">        logger.finest(<span class="string">"finest"</span>);</span><br><span class="line"></span><br><span class="line">        Logger logger2 = Logger.getLogger(<span class="string">"com.lxcourse"</span>);</span><br><span class="line"></span><br><span class="line">        logger2.severe(<span class="string">"severe test"</span>);</span><br><span class="line">        logger2.warning(<span class="string">"warning test"</span>);</span><br><span class="line">        logger2.info(<span class="string">"info test"</span>);</span><br><span class="line">        logger2.config(<span class="string">"config test"</span>);</span><br><span class="line">        logger2.fine(<span class="string">"fine test"</span>);</span><br><span class="line">        logger2.finer(<span class="string">"finer test"</span>);</span><br><span class="line">        logger2.finest(<span class="string">"finest test"</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="comment"># RootLogger 顶级父元素指定的默认处理器为ConsoleHandler</span></span><br><span class="line"><span class="comment">#handlers=java.util.logging.FileHandler</span></span><br><span class="line"><span class="comment">#handlers=java.util.logging.ConsoleHandler</span></span><br><span class="line"><span class="attr">handlers</span>=<span class="string">java.util.logging.ConsoleHandler,java.util.logging.FileHandler</span></span><br><span class="line"><span class="comment"># RootLogger 顶级父元素默认的日志级别为：ALL</span></span><br><span class="line"><span class="meta">.level</span>=<span class="string">ALL</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 自定义Logger使用</span></span><br><span class="line"><span class="meta">com.lxcourse.handlers</span> = <span class="string">java.util.logging.ConsoleHandler</span></span><br><span class="line"><span class="meta">com.lxcourse.level</span> = <span class="string">CONFIG</span></span><br><span class="line"><span class="comment"># 关闭默认配置</span></span><br><span class="line"><span class="meta">com.lxcourse.useParentHandlers</span> = <span class="string">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 向日志文件输出的handler对象</span></span><br><span class="line"><span class="comment"># 指定日志文件路径 /Users/doubledumbao/logs/java0.log</span></span><br><span class="line"><span class="meta">java.util.logging.FileHandler.pattern</span>=<span class="string">/Users/doubledumbao/logs/java%u.log</span></span><br><span class="line"><span class="comment"># 指定日志文件内容大小</span></span><br><span class="line"><span class="meta">java.util.logging.FileHandler.limit</span>=<span class="string">50000</span></span><br><span class="line"><span class="comment"># 指定日志文件数量</span></span><br><span class="line"><span class="meta">java.util.logging.FileHandler.count</span>=<span class="string">1</span></span><br><span class="line"><span class="comment"># 指定handler对象日志消息格式对象</span></span><br><span class="line"><span class="meta">java.util.logging.FileHandler.formatter</span>=<span class="string">java.util.logging.SimpleFormatter</span></span><br><span class="line"><span class="comment"># 指定以追加方式添加日志内容</span></span><br><span class="line"><span class="meta">java.util.logging.FileHandler.append</span>=<span class="string">true</span></span><br><span class="line"><span class="comment"># 向控制台输出handler对象</span></span><br><span class="line"><span class="comment"># 指定handler对象日志级别</span></span><br><span class="line"><span class="meta">java.util.logging.ConsoleHandler.level</span>=<span class="string">ALL</span></span><br><span class="line"><span class="comment"># 指定handler对象的日志消息格式对象</span></span><br><span class="line"><span class="meta">java.util.logging.ConsoleHandler.formatter</span>=<span class="string">java.util.logging.SimpleFormatter</span></span><br><span class="line"><span class="comment"># 指定handler对象的字符集</span></span><br><span class="line"><span class="meta">java.util.logging.ConsoleHandler.encoding</span>=<span class="string">UTF-8</span></span><br><span class="line"><span class="comment"># 指定日志消息格式</span></span><br><span class="line"><span class="meta">java.util.logging.SimpleFormatter.format</span> = <span class="string">%4$s: %5$s [%1$tc]%n</span></span><br></pre></td></tr></table></figure>

<p>3.日志原理解析</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">日志原理解析</span><br><span class="line">1. 初始化LogManager</span><br><span class="line">1. LogManager加载logging.properties配置</span><br><span class="line">2. 添加Logger到LogManager</span><br><span class="line">2. 从单例LogManager获取Logger</span><br><span class="line">3. 设置级别Level，并指定日志记录LogRecord</span><br><span class="line">4. Filter提供了日志级别之外更细粒度的控制</span><br><span class="line">5. Handler是用来处理日志输出位置</span><br><span class="line">6. Formatter是用来格式化LogRecord的</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>日志</tag>
      </tags>
  </entry>
  <entry>
    <title>Quartz初探</title>
    <url>/2020/05/26/Quartz%E5%88%9D%E6%8E%A2/</url>
    <content><![CDATA[<h3 id="1-新建maven项目quartz-demo"><a href="#1-新建maven项目quartz-demo" class="headerlink" title="1.新建maven项目quartz-demo"></a>1.新建maven项目quartz-demo</h3><h3 id="2-修改pom-xml，引入Quartz的依赖"><a href="#2-修改pom-xml，引入Quartz的依赖" class="headerlink" title="2.修改pom.xml，引入Quartz的依赖"></a>2.修改pom.xml，引入Quartz的依赖</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>quartz-demo<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 加入quartz的maven依赖--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.quartz-scheduler<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>quartz<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.3.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="3-新建测试类"><a href="#3-新建测试类" class="headerlink" title="3.新建测试类"></a>3.新建测试类</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example.quartz;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.quartz.*;</span><br><span class="line"><span class="keyword">import</span> org.quartz.impl.StdSchedulerFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.logging.SimpleFormatter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">QuartzTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Scheduler scheduler = StdSchedulerFactory.getDefaultScheduler();</span><br><span class="line"></span><br><span class="line">            scheduler.start();</span><br><span class="line"></span><br><span class="line">            JobDetail jobDetail = JobBuilder.newJob(HelloJob.class).withIdentity("job1", "group1").build();</span><br><span class="line">            SimpleTrigger trigger = TriggerBuilder.newTrigger().withIdentity(<span class="string">"trigger1"</span>, <span class="string">"group1"</span>).startNow().withSchedule(SimpleScheduleBuilder.simpleSchedule().withIntervalInSeconds(<span class="number">3</span>).repeatForever()).build();</span><br><span class="line">            scheduler.scheduleJob(jobDetail, trigger);</span><br><span class="line"><span class="comment">//            当你调用StdSchedulerFactory.getDefaultScheduler()获取scheduler实例对象后，</span></span><br><span class="line"><span class="comment">//            在调用scheduler.shutdown()之前，scheduler不会终止，因为还有活跃的线程在执行。</span></span><br><span class="line">            <span class="comment">//scheduler.shutdown();</span></span><br><span class="line">        &#125; <span class="keyword">catch</span> (SchedulerException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloJob</span> <span class="keyword">implements</span> <span class="title">Job</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">execute</span><span class="params">(JobExecutionContext context)</span> <span class="keyword">throws</span> JobExecutionException </span>&#123;</span><br><span class="line"></span><br><span class="line">            System.out.println(<span class="string">"current:"</span> + <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyy-MM-dd HH:mm:ss"</span>).format(<span class="keyword">new</span> Date()));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Quartz</tag>
      </tags>
  </entry>
  <entry>
    <title>SpringCloud06 Ribbon</title>
    <url>/2020/05/26/SpringCloud06-Ribbon/</url>
    <content><![CDATA[<h3 id="负载规则替换"><a href="#负载规则替换" class="headerlink" title="负载规则替换"></a>负载规则替换</h3><p>写一个配置类，注意不要写在启动类所在的包及其子包下，代码如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.rule;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.netflix.loadbalancer.BestAvailableRule;</span><br><span class="line"><span class="keyword">import</span> com.netflix.loadbalancer.IRule;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MySelfRule</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> IRule <span class="title">myRule</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> BestAvailableRule();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>修改启动类</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.springcloud;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.rule.MySelfRule;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.netflix.eureka.EnableEurekaClient;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.netflix.ribbon.RibbonClient;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableEurekaClient</span></span><br><span class="line"><span class="meta">@RibbonClient</span>(name=<span class="string">"CLOUD-PAYMENT-SERVICE"</span>,configuration= MySelfRule<span class="class">.<span class="keyword">class</span>)</span></span><br><span class="line"><span class="class"><span class="title">public</span> <span class="title">class</span> <span class="title">OrderMain80</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(OrderMain80<span class="class">.<span class="keyword">class</span>, <span class="title">args</span>)</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="手写轮询算法"><a href="#手写轮询算法" class="headerlink" title="手写轮询算法"></a>手写轮询算法</h3><p>1.基于 cloud-consumer-order80模块，将ApplicationContextConfig.java中的@LoadBalanced注释掉</p>
<p>ApplicationContextConfig.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.springcloud.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.client.loadbalancer.LoadBalanced;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.client.RestTemplate;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ApplicationContextConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="comment">//@LoadBalanced</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> RestTemplate <span class="title">restTemplate</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> RestTemplate();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>LoadBalancer.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.springcloud.lb;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.client.ServiceInstance;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 手写负载均衡器</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">LoadBalancer</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ServiceInstance <span class="title">getInstance</span><span class="params">(List&lt;ServiceInstance&gt; instances)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>MyLb.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.springcloud.lb;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.client.ServiceInstance;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.atomic.AtomicInteger;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@Slf</span>4j</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyLb</span> <span class="keyword">implements</span> <span class="title">LoadBalancer</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> AtomicInteger currentCount = <span class="keyword">new</span> AtomicInteger(<span class="number">0</span>);</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ServiceInstance <span class="title">getInstance</span><span class="params">(List&lt;ServiceInstance&gt; instances)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> next = getAndIncrement();</span><br><span class="line">        log.info(<span class="string">"MyLb index:&#123;&#125;"</span>,next);</span><br><span class="line">        <span class="keyword">int</span> index = next % instances.size();</span><br><span class="line">        <span class="keyword">return</span> instances.get(index);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">int</span> <span class="title">getAndIncrement</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> cur ;</span><br><span class="line">        <span class="keyword">int</span> next;</span><br><span class="line">        <span class="keyword">do</span>&#123;</span><br><span class="line">            cur = currentCount.get();</span><br><span class="line">            next = cur == Integer.MAX_VALUE ? <span class="number">0</span> : cur + <span class="number">1</span>;</span><br><span class="line">            log.info(<span class="string">"cur:&#123;&#125;,next:&#123;&#125;"</span>,cur,next);</span><br><span class="line"></span><br><span class="line">        &#125;<span class="keyword">while</span>(!currentCount.compareAndSet(cur,next));</span><br><span class="line">        log.info(<span class="string">"第&#123;&#125;次访问"</span>,next);</span><br><span class="line">        <span class="keyword">return</span>  next;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>OrderController.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.springcloud.web;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.springcloud.entity.CommonResult;</span><br><span class="line"><span class="keyword">import</span> com.example.springcloud.entity.Payment;</span><br><span class="line"><span class="keyword">import</span> com.example.springcloud.lb.LoadBalancer;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.client.ServiceInstance;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.client.discovery.DiscoveryClient;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.ResponseEntity;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.*;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.client.RestTemplate;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.annotation.Resource;</span><br><span class="line"><span class="keyword">import</span> java.net.URI;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> doubledumbao</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OrderController</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String PAYMENT_URL = <span class="string">"http://CLOUD-PAYMENT-SERVICE"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> RestTemplate restTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> DiscoveryClient discoveryClient;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> LoadBalancer loadBalancer;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/consumer/payment/create"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> CommonResult <span class="title">create</span><span class="params">(Payment payment)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> restTemplate.postForObject(PAYMENT_URL + <span class="string">"/payment/create"</span>, payment, CommonResult<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/consumer/payment/query/&#123;id&#125;"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> CommonResult <span class="title">query</span><span class="params">(@PathVariable Long id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> restTemplate.getForObject(PAYMENT_URL + <span class="string">"/payment/query/"</span> + id, CommonResult<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/consumer/payment/queryForEntity/&#123;id&#125;"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> CommonResult <span class="title">queryForEntity</span><span class="params">(@PathVariable Long id)</span> </span>&#123;</span><br><span class="line">        ResponseEntity&lt;CommonResult&gt; ent = restTemplate.getForEntity(PAYMENT_URL + <span class="string">"/payment/query/"</span> + id, CommonResult<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        <span class="keyword">if</span> (ent.getStatusCode().is2xxSuccessful()) &#123;</span><br><span class="line">            <span class="keyword">return</span> ent.getBody();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> CommonResult(<span class="number">444</span>, <span class="string">"查询失败"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/consumer/payment/createForEntity"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> CommonResult <span class="title">createForEntity</span><span class="params">(Payment payment)</span> </span>&#123;</span><br><span class="line">        ResponseEntity&lt;CommonResult&gt; entity = restTemplate.postForEntity(PAYMENT_URL + <span class="string">"/payment/create"</span>, payment, CommonResult<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        <span class="keyword">if</span> (entity.getStatusCode().is2xxSuccessful()) &#123;</span><br><span class="line">            <span class="keyword">return</span> entity.getBody();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> CommonResult(<span class="number">444</span>, <span class="string">"创建失败"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/consumer/payment/lb"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">paymentLb</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        List&lt;ServiceInstance&gt; instances = discoveryClient.getInstances(<span class="string">"CLOUD-PAYMENT-SERVICE"</span>);</span><br><span class="line">        <span class="keyword">if</span> (instances == <span class="keyword">null</span> || instances.size() == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        ServiceInstance instance = loadBalancer.getInstance(instances);</span><br><span class="line"></span><br><span class="line">        URI uri = instance.getUri();</span><br><span class="line">        <span class="keyword">return</span> restTemplate.getForObject(uri + <span class="string">"/payment/lb"</span>, String<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>SpringCloud</category>
      </categories>
      <tags>
        <tag>SpringCloud</tag>
      </tags>
  </entry>
  <entry>
    <title>SpringCloud05 consul注册中心搭建</title>
    <url>/2020/05/26/SpringCloud05-consul%E6%B3%A8%E5%86%8C%E4%B8%AD%E5%BF%83%E6%90%AD%E5%BB%BA/</url>
    <content><![CDATA[<p>1.新建module，cloud-consumerconsul-order80</p>
<p>pom.xml</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>myspringcloud2020<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>cloud-consumerconsul-order80<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span>        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-web --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>cloud-api-common<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;project.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span>        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-web  --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-actuator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span>        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-devtools --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-devtools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span>        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.projectlombok/lombok --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span>        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-test --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-consul-discovery<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>application.yml</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8080</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">cloud-order-service</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">consul:</span></span><br><span class="line">      <span class="attr">host:</span> <span class="string">localhost</span></span><br><span class="line">      <span class="attr">port:</span> <span class="number">8500</span></span><br><span class="line">      <span class="attr">discovery:</span></span><br><span class="line">        <span class="attr">service-name:</span> <span class="string">$&#123;spring.application.name&#125;</span></span><br></pre></td></tr></table></figure>

<p>OrderConsulMain80.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.springcloud;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.client.discovery.EnableDiscoveryClient;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableDiscoveryClient</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OrderConsulMain80</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(OrderConsulMain80<span class="class">.<span class="keyword">class</span>,<span class="title">args</span>)</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>ApplicationContextConfig.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.springcloud.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.client.loadbalancer.LoadBalanced;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.client.RestTemplate;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ApplicationContextConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="meta">@LoadBalanced</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> RestTemplate <span class="title">getRestTemplate</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> RestTemplate();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>OrderConsulController.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.springcloud.controller;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.client.RestTemplate;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.annotation.Resource;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OrderConsulController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String INVOKE_URL = <span class="string">"http://cloud-provider-payment"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> RestTemplate restTemplate;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/consumer/consul/payment"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">payment</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> restTemplate.getForObject(INVOKE_URL +<span class="string">"/payment/consul/msg"</span>,String<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="2-新建module，cloud-provider-payment8006"><a href="#2-新建module，cloud-provider-payment8006" class="headerlink" title="2.新建module，cloud-provider-payment8006"></a>2.新建module，cloud-provider-payment8006</h3><p>pom.xml</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>myspringcloud2020<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>cloud-provider-payment8006<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>cloud-api-common<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;project.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span>        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-web --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span>        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-web --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-actuator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span>        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-starter-zookeeper-discovery --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-devtools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span>        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.projectlombok/lombok --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span>        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-test --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-consul-discovery<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>application.yml</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8006</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">cloud-provider-payment</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">consul:</span></span><br><span class="line">      <span class="attr">host:</span> <span class="string">localhost</span></span><br><span class="line">      <span class="attr">port:</span> <span class="number">8500</span></span><br><span class="line">      <span class="attr">discovery:</span></span><br><span class="line">        <span class="attr">serviceName:</span> <span class="string">$&#123;spring.application.name&#125;</span></span><br><span class="line">        <span class="attr">hostname:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span></span><br></pre></td></tr></table></figure>

<p>PaymentConsulMain8006.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.springcloud;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.client.discovery.EnableDiscoveryClient;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableDiscoveryClient</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PaymentConsulMain8006</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(PaymentConsulMain8006<span class="class">.<span class="keyword">class</span>,<span class="title">args</span>)</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>PaymentConsulController.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.springcloud.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Value;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.UUID;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PaymentConsulController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;server.port&#125;"</span>)</span><br><span class="line">    <span class="keyword">private</span> String port;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/payment/consul/msg"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getZooMsg</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"payment consul server.port:"</span>+port +<span class="string">" -- "</span> + UUID.randomUUID().toString();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>SpringCloud</category>
      </categories>
      <tags>
        <tag>SpringCloud</tag>
      </tags>
  </entry>
  <entry>
    <title>SpringCloud04 zookeeper注册中心</title>
    <url>/2020/05/26/SpringCloud04-zookeeper%E6%B3%A8%E5%86%8C%E4%B8%AD%E5%BF%83/</url>
    <content><![CDATA[<h3 id="1-新建module，cloud-consumerzk-order80"><a href="#1-新建module，cloud-consumerzk-order80" class="headerlink" title="1.新建module，cloud-consumerzk-order80"></a>1.新建module，cloud-consumerzk-order80</h3><p>pom.xml</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>myspringcloud2020<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>cloud-consumerzk-order80<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span>        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-web --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>cloud-api-common<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;project.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span>        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-web  --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-actuator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span>        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-devtools --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-devtools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span>        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.projectlombok/lombok --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span>        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-test --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-zookeeper-discovery<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.zookeeper<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>zookeeper<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.zookeeper<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>zookeeper<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.4.9<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>application.yml</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8080</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">cloud-consumer-order</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">zookeeper:</span></span><br><span class="line">      <span class="attr">connect-string:</span> <span class="string">localhost:2181</span></span><br></pre></td></tr></table></figure>

<p>ConsumerZkOrderMain80.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.springcloud;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.client.discovery.EnableDiscoveryClient;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableDiscoveryClient</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ConsumerZkOrderMain80</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(ConsumerZkOrderMain80<span class="class">.<span class="keyword">class</span>,<span class="title">args</span>)</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>ApplicationContextConfig.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.springcloud.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.client.loadbalancer.LoadBalanced;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.client.RestTemplate;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ApplicationContextConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="meta">@LoadBalanced</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> RestTemplate <span class="title">getRestTemplate</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> RestTemplate();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>ConsumerZkController.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.springcloud.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.client.RestTemplate;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.annotation.Resource;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> doubledumbao</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@Slf</span>4j</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ConsumerZkController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String INVOKE_URL = <span class="string">"http://cloud-provider-payment"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> RestTemplate restTemplate;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/consumer/payment"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">payment</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> restTemplate.getForObject(INVOKE_URL +<span class="string">"/payment/zoo/msg"</span>,String<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="2-新建module，cloud-provider-payment8004"><a href="#2-新建module，cloud-provider-payment8004" class="headerlink" title="2.新建module，cloud-provider-payment8004"></a>2.新建module，cloud-provider-payment8004</h3><p>pom.xml</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>myspringcloud2020<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>cloud-provider-payment8004<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>cloud-api-common<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;project.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span>        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-web --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span>        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-web --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-actuator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span>        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-starter-zookeeper-discovery --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-zookeeper-discovery<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.zookeeper<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>zookeeper<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span>        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-devtools --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-devtools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span>        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.projectlombok/lombok --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span>        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-test --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.zookeeper<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>zookeeper<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.4.9<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>application.yml</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8004</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">zookeeper:</span></span><br><span class="line">      <span class="attr">connect-string:</span> <span class="string">localhost:2181</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">cloud-provider-payment</span></span><br></pre></td></tr></table></figure>

<p>PaymentZooMain8004.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.springcloud;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.client.discovery.EnableDiscoveryClient;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableDiscoveryClient</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PaymentZooMain8004</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(PaymentZooMain8004<span class="class">.<span class="keyword">class</span>,<span class="title">args</span>)</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>PaymentController.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.springcloud.controller;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Value;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.annotation.Resource;</span><br><span class="line"><span class="keyword">import</span> java.util.UUID;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PaymentController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;server.port&#125;"</span>)</span><br><span class="line">    <span class="keyword">private</span> String port;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/payment/zoo/msg"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getZooMsg</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"payment zookeeper server.port"</span>+port +<span class="string">" -- "</span> +UUID.randomUUID().toString();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>SpringCloud</category>
      </categories>
      <tags>
        <tag>SpringCloud</tag>
      </tags>
  </entry>
  <entry>
    <title>SpringCloud03 Eureka服务端搭建</title>
    <url>/2020/05/26/SpringCloud03-Eureka%E6%9C%8D%E5%8A%A1%E7%AB%AF%E6%90%AD%E5%BB%BA/</url>
    <content><![CDATA[<h3 id="1-新建module，cloud-eureka-server7001"><a href="#1-新建module，cloud-eureka-server7001" class="headerlink" title="1.新建module，cloud-eureka-server7001"></a>1.新建module，cloud-eureka-server7001</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>myspringcloud2020<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>cloud-eureka-server7001<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span>        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-starter-eureka-server --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-eureka-server<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>cloud-api-common<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;project.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span>        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-web  --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-actuator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span>        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-devtools --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-devtools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span>        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.projectlombok/lombok --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span>        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-test --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>application.yml</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">7001</span></span><br><span class="line"><span class="comment">#eureka:</span></span><br><span class="line"><span class="comment">#  instance:</span></span><br><span class="line"><span class="comment">#    hostname: localhost  #eureka服务端的实例名字</span></span><br><span class="line"><span class="comment">#    client:</span></span><br><span class="line"><span class="comment">#      #表识不向注册中心注册自己</span></span><br><span class="line"><span class="comment">#      register-with-eureka: false</span></span><br><span class="line"><span class="comment">#      #表示自己就是注册中心，职责是维护服务实例，并不需要去检索服务</span></span><br><span class="line"><span class="comment">#      fetch-registry: false</span></span><br><span class="line"><span class="comment">#      service-url:</span></span><br><span class="line"><span class="comment">#        #设置与eureka server交互的地址查询服务和注册服务都需要依赖这个地址</span></span><br><span class="line"><span class="comment">#        defaultZone: http://$&#123;eureka.instance.hostname&#125;:$&#123;server.port&#125;/eureka/</span></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line">  <span class="attr">instance:</span></span><br><span class="line">    <span class="attr">hostname:</span> <span class="string">eureka7001.com</span></span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">    <span class="attr">register-with-eureka:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">fetch-registry:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">service-url:</span></span><br><span class="line"><span class="comment">#      defaultZone: http://eureka7001.com:7001/eureka/</span></span><br><span class="line">      <span class="attr">defaultZone:</span> <span class="string">http://eureka7002.com:7002/eureka/</span></span><br><span class="line"><span class="comment">#  server:</span></span><br><span class="line"><span class="comment">#    enable-self-preservation: false</span></span><br><span class="line"><span class="comment">#    eviction-interval-timer-in-ms: 2000</span></span><br></pre></td></tr></table></figure>

<p>EurekaServerMain7001.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.springcloud;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.netflix.eureka.server.EnableEurekaServer;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableEurekaServer</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EurekaServerMain7001</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(EurekaServerMain7001<span class="class">.<span class="keyword">class</span>,<span class="title">args</span>)</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="2-新建module，cloud-eureka-server7001"><a href="#2-新建module，cloud-eureka-server7001" class="headerlink" title="2.新建module，cloud-eureka-server7001"></a>2.新建module，cloud-eureka-server7001</h3><p>pom.xml</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>myspringcloud2020<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>cloud-eureka-server7002<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span>        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-starter-eureka-server --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-eureka-server<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>cloud-api-common<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;project.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span>        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-web  --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-actuator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span>        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-devtools --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-devtools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span>        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.projectlombok/lombok --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span>        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-test --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>application.yml</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">7002</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">eureka7002.com</span></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">    <span class="attr">register-with-eureka:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">fetch-registry:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">service-url:</span></span><br><span class="line">      <span class="attr">defaultZone:</span> <span class="string">http://eureka7001.com:7001/eureka</span></span><br></pre></td></tr></table></figure>

<p>EurekaServerMain7002.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.springboot;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.netflix.eureka.server.EnableEurekaServer;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableEurekaServer</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EurekaServerMain7002</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(EurekaServerMain7002<span class="class">.<span class="keyword">class</span>,<span class="title">args</span>)</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>SpringCloud</category>
      </categories>
      <tags>
        <tag>SpringCloud</tag>
      </tags>
  </entry>
  <entry>
    <title>SpringCloud02 订单模块</title>
    <url>/2020/05/26/SpringCloud02-%E8%AE%A2%E5%8D%95%E6%A8%A1%E5%9D%97/</url>
    <content><![CDATA[<h3 id="1-新建module-cloud-consumer-order80"><a href="#1-新建module-cloud-consumer-order80" class="headerlink" title="1.新建module,cloud-consumer-order80"></a>1.新建module,cloud-consumer-order80</h3><p>pom.xml</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>myspringcloud2020<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>cloud-consumer-order80<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span>        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-web --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>cloud-api-common<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;project.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span>        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-web  --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-actuator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span>        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-devtools --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-devtools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span>        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.projectlombok/lombok --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span>        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-test --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-eureka-client<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>application.yml</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8080</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">cloud-order-service</span></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">    <span class="attr">register-with-eureka:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">fetch-registry:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">service-url:</span></span><br><span class="line">      <span class="attr">defaultZone:</span> <span class="string">http://eureka7001.com:7001/eureka,http://eureka7002.com:7002/eureka</span></span><br><span class="line">  <span class="attr">instance:</span></span><br><span class="line">    <span class="attr">instance-id:</span> <span class="string">order8080</span></span><br><span class="line">    <span class="attr">prefer-ip-address:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<p>启动类OrderMain80.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.springcloud;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.rule.MySelfRule;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.netflix.eureka.EnableEurekaClient;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.netflix.ribbon.RibbonClient;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableEurekaClient</span></span><br><span class="line"><span class="meta">@RibbonClient</span>(name=<span class="string">"CLOUD-PAYMENT-SERVICE"</span>,configuration= MySelfRule<span class="class">.<span class="keyword">class</span>)</span></span><br><span class="line"><span class="class"><span class="title">public</span> <span class="title">class</span> <span class="title">OrderMain80</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(OrderMain80<span class="class">.<span class="keyword">class</span>, <span class="title">args</span>)</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>ApplicationContextConfig.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.springcloud.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.client.loadbalancer.LoadBalanced;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.client.RestTemplate;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ApplicationContextConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="meta">@LoadBalanced</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> RestTemplate <span class="title">restTemplate</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> RestTemplate();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>OrderController.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.springcloud.web;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.springcloud.entity.CommonResult;</span><br><span class="line"><span class="keyword">import</span> com.example.springcloud.entity.Payment;</span><br><span class="line"><span class="keyword">import</span> com.example.springcloud.lb.LoadBalancer;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.client.ServiceInstance;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.client.discovery.DiscoveryClient;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.ResponseEntity;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.*;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.client.RestTemplate;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.annotation.Resource;</span><br><span class="line"><span class="keyword">import</span> java.net.URI;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> doubledumbao</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OrderController</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String PAYMENT_URL = <span class="string">"http://CLOUD-PAYMENT-SERVICE"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> RestTemplate restTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> DiscoveryClient discoveryClient;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> LoadBalancer loadBalancer;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/consumer/payment/create"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> CommonResult <span class="title">create</span><span class="params">(Payment payment)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> restTemplate.postForObject(PAYMENT_URL + <span class="string">"/payment/create"</span>, payment, CommonResult<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/consumer/payment/query/&#123;id&#125;"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> CommonResult <span class="title">query</span><span class="params">(@PathVariable Long id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> restTemplate.getForObject(PAYMENT_URL + <span class="string">"/payment/query/"</span> + id, CommonResult<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/consumer/payment/queryForEntity/&#123;id&#125;"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> CommonResult <span class="title">queryForEntity</span><span class="params">(@PathVariable Long id)</span> </span>&#123;</span><br><span class="line">        ResponseEntity&lt;CommonResult&gt; ent = restTemplate.getForEntity(PAYMENT_URL + <span class="string">"/payment/query/"</span> + id, CommonResult<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        <span class="keyword">if</span> (ent.getStatusCode().is2xxSuccessful()) &#123;</span><br><span class="line">            <span class="keyword">return</span> ent.getBody();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> CommonResult(<span class="number">444</span>, <span class="string">"查询失败"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/consumer/payment/createForEntity"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> CommonResult <span class="title">createForEntity</span><span class="params">(Payment payment)</span> </span>&#123;</span><br><span class="line">        ResponseEntity&lt;CommonResult&gt; entity = restTemplate.postForEntity(PAYMENT_URL + <span class="string">"/payment/create"</span>, payment, CommonResult<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        <span class="keyword">if</span> (entity.getStatusCode().is2xxSuccessful()) &#123;</span><br><span class="line">            <span class="keyword">return</span> entity.getBody();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> CommonResult(<span class="number">444</span>, <span class="string">"创建失败"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/consumer/payment/lb"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">paymentLb</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        List&lt;ServiceInstance&gt; instances = discoveryClient.getInstances(<span class="string">"CLOUD-PAYMENT-SERVICE"</span>);</span><br><span class="line">        <span class="keyword">if</span> (instances == <span class="keyword">null</span> || instances.size() == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        ServiceInstance instance = loadBalancer.getInstance(instances);</span><br><span class="line"></span><br><span class="line">        URI uri = instance.getUri();</span><br><span class="line">        <span class="keyword">return</span> restTemplate.getForObject(uri + <span class="string">"/payment/lb"</span>, String<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="2-提取公共代码，新建module-cloud-api-common"><a href="#2-提取公共代码，新建module-cloud-api-common" class="headerlink" title="2.提取公共代码，新建module,cloud-api-common"></a>2.提取公共代码，新建module,cloud-api-common</h3><p>pom.xml</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>myspringcloud2020<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>cloud-api-common<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span>        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-devtools --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-devtools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span>        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/cn.hutool/hutool-all --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn.hutool<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>hutool-all<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>CommonResult.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.springcloud.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.AllArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> lombok.NoArgsConstructor;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CommonResult</span>&lt;<span class="title">T</span>&gt; </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Integer code;</span><br><span class="line">    <span class="keyword">private</span> String message;</span><br><span class="line">    <span class="keyword">private</span> T data;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">CommonResult</span><span class="params">(Integer code, String message)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>(code, message, <span class="keyword">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>Payment.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.springcloud.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * payment</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Payment</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * ID</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String serial;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>SpringCloud</category>
      </categories>
      <tags>
        <tag>SpringCloud</tag>
      </tags>
  </entry>
  <entry>
    <title>SpringCloud01 支付模块搭建</title>
    <url>/2020/05/26/SpringCloud01-%E6%94%AF%E4%BB%98%E6%A8%A1%E5%9D%97%E6%90%AD%E5%BB%BA/</url>
    <content><![CDATA[<h3 id="1-创建父工程myspringcloud2020"><a href="#1-创建父工程myspringcloud2020" class="headerlink" title="1.创建父工程myspringcloud2020"></a>1.创建父工程myspringcloud2020</h3><p>pom.xml</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>myspringcloud2020<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modules</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">module</span>&gt;</span>cloud-provider-payment8001<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">module</span>&gt;</span>cloud-consumer-order80<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">module</span>&gt;</span>cloud-api-common<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">module</span>&gt;</span>cloud-eureka-server7001<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">module</span>&gt;</span>cloud-eureka-server7002<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">module</span>&gt;</span>cloud-provider-payment8002<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">module</span>&gt;</span>cloud-provider-payment8004<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">module</span>&gt;</span>cloud-consumerzk-order80<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">module</span>&gt;</span>cloud-provider-payment8006<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">module</span>&gt;</span>cloud-consumerconsul-order80<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">modules</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">junit.version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">junit.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">log4j.version</span>&gt;</span>1.2.17<span class="tag">&lt;/<span class="name">log4j.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">lombok.version</span>&gt;</span>1.16.18<span class="tag">&lt;/<span class="name">lombok.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mysql.version</span>&gt;</span>5.1.47<span class="tag">&lt;/<span class="name">mysql.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">druid.version</span>&gt;</span>1.1.16<span class="tag">&lt;/<span class="name">druid.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mybatis.spring.boot.version</span>&gt;</span>1.3.0<span class="tag">&lt;/<span class="name">mybatis.spring.boot.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">fastjson.version</span>&gt;</span>1.2.68<span class="tag">&lt;/<span class="name">fastjson.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span>  <span class="comment">&lt;!-- 子模块继承之后，提供作用：锁定版本+子modlue不用写groupId和version  --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span>      <span class="comment">&lt;!--spring boot 2.2.2--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2.2.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span>      <span class="comment">&lt;!--spring cloud Hoxton.SR1--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>Hoxton.SR1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span>      <span class="comment">&lt;!--spring cloud alibaba 2.1.0.RELEASE--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-alibaba-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.0.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;mysql.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;druid.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.spring.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;mybatis.spring.boot.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;junit.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;log4j.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;lombok.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- https://mvnrepository.com/artifact/com.alibaba/fastjson --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>fastjson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;fastjson.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">fork</span>&gt;</span>true<span class="tag">&lt;/<span class="name">fork</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">addResources</span>&gt;</span>true<span class="tag">&lt;/<span class="name">addResources</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="2-新建module-cloud-provider-payment8001"><a href="#2-新建module-cloud-provider-payment8001" class="headerlink" title="2.新建module,cloud-provider-payment8001"></a>2.新建module,cloud-provider-payment8001</h3><p>pom.xml</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>myspringcloud2020<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>cloud-provider-payment8001<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span>        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-web --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>cloud-api-common<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;project.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span>        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-web --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-actuator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span>        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-web --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.spring.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span>        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/com.alibaba/druid --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.10<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span>        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span>        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-jdbc --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span>        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-devtools --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-devtools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span>        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.projectlombok/lombok --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span>        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-test --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/com.alibaba/fastjson --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>fastjson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-eureka-client<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">fork</span>&gt;</span>true<span class="tag">&lt;/<span class="name">fork</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">addResources</span>&gt;</span>true<span class="tag">&lt;/<span class="name">addResources</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>application.yml</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8001</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">cloud-payment-service</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">com.alibaba.druid.pool.DruidDataSource</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">org.gjt.mm.mysql.Driver</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://192.168.0.119:3306/db2019?useUnicode=true&amp;characterEncoding=utf-8&amp;useSSL=false</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="number">123456</span></span><br><span class="line"><span class="attr">mybatis:</span></span><br><span class="line">    <span class="attr">mapperLocations:</span> <span class="string">classpath:mapper/*.xml</span></span><br><span class="line">    <span class="attr">type-aliases-package:</span> <span class="string">com.example.springcloud.entities</span></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">    <span class="attr">fetch-registry:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">register-with-eureka:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">service-url:</span></span><br><span class="line">      <span class="attr">defaultZone:</span> <span class="string">http://eureka7001.com:7001/eureka,http://eureka7002.com:7002/eureka</span></span><br><span class="line">  <span class="attr">instance:</span></span><br><span class="line">    <span class="attr">instance-id:</span> <span class="string">payment8001</span></span><br><span class="line">    <span class="attr">prefer-ip-address:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">lease-renewal-interval-in-seconds:</span> <span class="number">1</span></span><br><span class="line">    <span class="attr">lease-expiration-duration-in-seconds:</span> <span class="number">2</span></span><br></pre></td></tr></table></figure>

<p>启动类PaymentMain8001.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.springcloud;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.client.discovery.EnableDiscoveryClient;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.netflix.eureka.EnableEurekaClient;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> doubledumbao</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableEurekaClient</span></span><br><span class="line"><span class="meta">@EnableDiscoveryClient</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PaymentMain8001</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(PaymentMain8001<span class="class">.<span class="keyword">class</span>,<span class="title">args</span>)</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>PaymentController.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.springcloud.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.springcloud.entity.CommonResult;</span><br><span class="line"><span class="keyword">import</span> com.example.springcloud.entity.Payment;</span><br><span class="line"><span class="keyword">import</span> com.example.springcloud.service.PaymentService;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Value;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.client.ServiceInstance;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.client.discovery.DiscoveryClient;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.annotation.Resource;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectInputStream;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/payment"</span>)</span><br><span class="line"><span class="meta">@Slf</span>4j</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PaymentController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> PaymentService paymentService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;server.port&#125;"</span>)</span><br><span class="line">    <span class="keyword">private</span> String port;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> DiscoveryClient discoveryClient;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/query/&#123;id&#125;"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> CommonResult <span class="title">query</span><span class="params">(@PathVariable(value = <span class="string">"id"</span>)</span> Long id)</span>&#123;</span><br><span class="line">        Payment payment = paymentService.selectByPrimaryKey(id);</span><br><span class="line">        <span class="keyword">if</span>(payment!=<span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> CommonResult(<span class="number">200</span>,<span class="string">"success port:"</span>+port,payment);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> CommonResult(<span class="number">400</span>,<span class="string">"未查询到数据"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@PostMapping</span>(<span class="string">"/create"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> CommonResult <span class="title">create</span><span class="params">(@RequestBody Payment payment)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> rows = paymentService.insert(payment);</span><br><span class="line">        <span class="keyword">if</span>(rows&gt;<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> CommonResult(<span class="number">200</span>,<span class="string">"创建成功 port:"</span>+port);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> CommonResult(<span class="number">400</span>,<span class="string">"创建失败"</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/discovery"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">discovery</span><span class="params">()</span></span>&#123;</span><br><span class="line">        List&lt;String&gt; services = discoveryClient.getServices();</span><br><span class="line">        <span class="keyword">for</span> (String element: services) &#123;</span><br><span class="line">            log.info(<span class="string">"element:&#123;&#125;"</span>,element);</span><br><span class="line">        &#125;</span><br><span class="line">        List&lt;ServiceInstance&gt; instances = discoveryClient.getInstances(<span class="string">"CLOUD-PAYMENT-SERVICE"</span>);</span><br><span class="line">        <span class="keyword">for</span> (ServiceInstance instance:instances)&#123;</span><br><span class="line">            log.info(<span class="string">"&#123;&#125; --  &#123;&#125; --  &#123;&#125; --  &#123;&#125; -- &#123;&#125;"</span>,instance.getInstanceId(),instance.getHost(),instance.getPort(),instance.getUri(),instance.getServiceId());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> instances;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/lb"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">paymentLb</span><span class="params">()</span></span>&#123;</span><br><span class="line">        log.info(<span class="string">"paymentLb port:&#123;&#125;"</span>,port);</span><br><span class="line">        <span class="keyword">return</span> port;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>PaymentService.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.springcloud.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.springcloud.entity.Payment;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">PaymentService</span> </span>&#123;</span><br><span class="line">    <span class="function">Payment <span class="title">selectByPrimaryKey</span><span class="params">(Long id)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">insert</span><span class="params">(Payment record)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>PaymentServiceImpl.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.springcloud.service.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.springcloud.dao.PaymentDao;</span><br><span class="line"><span class="keyword">import</span> com.example.springcloud.entity.Payment;</span><br><span class="line"><span class="keyword">import</span> com.example.springcloud.service.PaymentService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.annotation.Resource;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PaymentServiceImpl</span> <span class="keyword">implements</span> <span class="title">PaymentService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> PaymentDao paymentDao;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Payment <span class="title">selectByPrimaryKey</span><span class="params">(Long id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> paymentDao.selectByPrimaryKey(id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">insert</span><span class="params">(Payment record)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> paymentDao.insert(record);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>PaymentDao.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.springcloud.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.springcloud.entity.Payment;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Mapper;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Mapper</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">PaymentDao</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">deleteByPrimaryKey</span><span class="params">(Long id)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">insert</span><span class="params">(Payment record)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">insertSelective</span><span class="params">(Payment record)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">Payment <span class="title">selectByPrimaryKey</span><span class="params">(Long id)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">updateByPrimaryKeySelective</span><span class="params">(Payment record)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">updateByPrimaryKey</span><span class="params">(Payment record)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>PaymentDao.xml</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.example.springcloud.dao.PaymentDao"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"BaseResultMap"</span> <span class="attr">type</span>=<span class="string">"com.example.springcloud.entity.Payment"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">"id"</span> <span class="attr">jdbcType</span>=<span class="string">"BIGINT"</span> <span class="attr">property</span>=<span class="string">"id"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"serial"</span> <span class="attr">jdbcType</span>=<span class="string">"VARCHAR"</span> <span class="attr">property</span>=<span class="string">"serial"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">sql</span> <span class="attr">id</span>=<span class="string">"Base_Column_List"</span>&gt;</span></span><br><span class="line">    id, serial</span><br><span class="line">  <span class="tag">&lt;/<span class="name">sql</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"selectByPrimaryKey"</span> <span class="attr">parameterType</span>=<span class="string">"java.lang.Long"</span> <span class="attr">resultMap</span>=<span class="string">"BaseResultMap"</span>&gt;</span></span><br><span class="line">    select</span><br><span class="line">    <span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">"Base_Column_List"</span> /&gt;</span></span><br><span class="line">    from payment</span><br><span class="line">    where id = #&#123;id,jdbcType=BIGINT&#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">delete</span> <span class="attr">id</span>=<span class="string">"deleteByPrimaryKey"</span> <span class="attr">parameterType</span>=<span class="string">"java.lang.Long"</span>&gt;</span></span><br><span class="line">    delete from payment</span><br><span class="line">    where id = #&#123;id,jdbcType=BIGINT&#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">delete</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">"insert"</span> <span class="attr">keyColumn</span>=<span class="string">"id"</span> <span class="attr">keyProperty</span>=<span class="string">"id"</span> <span class="attr">parameterType</span>=<span class="string">"com.example.springcloud.entity.Payment"</span> <span class="attr">useGeneratedKeys</span>=<span class="string">"true"</span>&gt;</span></span><br><span class="line">    insert into payment (serial)</span><br><span class="line">    values (#&#123;serial,jdbcType=VARCHAR&#125;)</span><br><span class="line">  <span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">"insertSelective"</span> <span class="attr">keyColumn</span>=<span class="string">"id"</span> <span class="attr">keyProperty</span>=<span class="string">"id"</span> <span class="attr">parameterType</span>=<span class="string">"com.example.springcloud.entity.Payment"</span> <span class="attr">useGeneratedKeys</span>=<span class="string">"true"</span>&gt;</span></span><br><span class="line">    insert into payment</span><br><span class="line">    <span class="tag">&lt;<span class="name">trim</span> <span class="attr">prefix</span>=<span class="string">"("</span> <span class="attr">suffix</span>=<span class="string">")"</span> <span class="attr">suffixOverrides</span>=<span class="string">","</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"serial != null"</span>&gt;</span></span><br><span class="line">        serial,</span><br><span class="line">      <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">trim</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">trim</span> <span class="attr">prefix</span>=<span class="string">"values ("</span> <span class="attr">suffix</span>=<span class="string">")"</span> <span class="attr">suffixOverrides</span>=<span class="string">","</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"serial != null"</span>&gt;</span></span><br><span class="line">        #&#123;serial,jdbcType=VARCHAR&#125;,</span><br><span class="line">      <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">trim</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">"updateByPrimaryKeySelective"</span> <span class="attr">parameterType</span>=<span class="string">"com.example.springcloud.entity.Payment"</span>&gt;</span></span><br><span class="line">    update payment</span><br><span class="line">    <span class="tag">&lt;<span class="name">set</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"serial != null"</span>&gt;</span></span><br><span class="line">        serial = #&#123;serial,jdbcType=VARCHAR&#125;,</span><br><span class="line">      <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br><span class="line">    where id = #&#123;id,jdbcType=BIGINT&#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">"updateByPrimaryKey"</span> <span class="attr">parameterType</span>=<span class="string">"com.example.springcloud.entity.Payment"</span>&gt;</span></span><br><span class="line">    update payment</span><br><span class="line">    set serial = #&#123;serial,jdbcType=VARCHAR&#125;</span><br><span class="line">    where id = #&#123;id,jdbcType=BIGINT&#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>全局异常</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.springcloud.common;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSON;</span><br><span class="line"><span class="keyword">import</span> com.example.springcloud.entity.CommonResult;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ControllerAdvice;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ExceptionHandler;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.ModelAndView;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.View;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.view.AbstractView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="meta">@ControllerAdvice</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CommonExceptionAdvice</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@ExceptionHandler</span>(Exception<span class="class">.<span class="keyword">class</span>)</span></span><br><span class="line"><span class="class">    <span class="title">public</span> <span class="title">ModelAndView</span> <span class="title">defaultErrorHandler</span>(<span class="title">HttpServletRequest</span> <span class="title">req</span>, <span class="title">Exception</span> <span class="title">e</span>) <span class="title">throws</span> <span class="title">Exception</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/** 构建向前端响应的消息对象**/</span></span><br><span class="line">        CommonResult errMsg = <span class="keyword">new</span> CommonResult(<span class="number">400</span>,e.getMessage());</span><br><span class="line">        <span class="comment">/** 构建视图，将消息对象以JSON形式发出**/</span></span><br><span class="line">        ModelAndView mav = <span class="keyword">new</span> ModelAndView();</span><br><span class="line">        View view = <span class="keyword">new</span> AbstractView() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">renderMergedOutputModel</span><span class="params">(Map&lt;String, Object&gt; map, HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">                PrintWriter out = httpServletResponse.getWriter();</span><br><span class="line">                out.print(JSON.toJSONString(errMsg));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        mav.setView(view);</span><br><span class="line">        <span class="keyword">return</span> mav;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="3-新建module，cloud-provider-payment8002"><a href="#3-新建module，cloud-provider-payment8002" class="headerlink" title="3.新建module，cloud-provider-payment8002"></a>3.新建module，cloud-provider-payment8002</h3><p>修改application.yml</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8002</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">cloud-payment-service</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">com.alibaba.druid.pool.DruidDataSource</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">org.gjt.mm.mysql.Driver</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://192.168.0.119:3306/db2019?useUnicode=true&amp;characterEncoding=utf-8&amp;useSSL=false</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="number">123456</span></span><br><span class="line"><span class="attr">mybatis:</span></span><br><span class="line">    <span class="attr">mapperLocations:</span> <span class="string">classpath:mapper/*.xml</span></span><br><span class="line">    <span class="attr">type-aliases-package:</span> <span class="string">com.example.springcloud.entities</span></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">    <span class="attr">fetch-registry:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">register-with-eureka:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">service-url:</span></span><br><span class="line">      <span class="attr">defaultZone:</span> <span class="string">http://eureka7001.com:7001/eureka,http://eureka7002.com:7002/eureka</span></span><br><span class="line">  <span class="attr">instance:</span></span><br><span class="line">    <span class="attr">instance-id:</span> <span class="string">payment8002</span></span><br><span class="line">    <span class="attr">prefer-ip-address:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>



<h3 id="4-修改-etc-hosts"><a href="#4-修改-etc-hosts" class="headerlink" title="4.修改/etc/hosts"></a>4.修改/etc/hosts</h3><p>添加：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">127.0.0.1 eureka7001.com </span><br><span class="line">127.0.0.1 eureka7002.com</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>SpringCloud</category>
      </categories>
      <tags>
        <tag>SpringCloud</tag>
      </tags>
  </entry>
  <entry>
    <title>IDEA调试远程代码</title>
    <url>/2020/05/26/IDEA%E8%B0%83%E8%AF%95%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81/</url>
    <content><![CDATA[<h3 id="1-新建SpringBoot项目"><a href="#1-新建SpringBoot项目" class="headerlink" title="1.新建SpringBoot项目"></a>1.新建SpringBoot项目</h3><p>代码如下：</p>
<p>启动类SpringbootDemoApplication.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.springbootdemo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringbootDemoApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(SpringbootDemoApplication<span class="class">.<span class="keyword">class</span>, <span class="title">args</span>)</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>配置文件application.yml</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">9000</span></span><br></pre></td></tr></table></figure>

<p>业务类HelloController.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.springbootdemo.controller;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/hello"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">hello</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"----------"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"hello"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="2-将项目打成jar包，并部署到远程服务器192-168-0-119"><a href="#2-将项目打成jar包，并部署到远程服务器192-168-0-119" class="headerlink" title="2.将项目打成jar包，并部署到远程服务器192.168.0.119"></a>2.将项目打成jar包，并部署到远程服务器192.168.0.119</h3><h3 id="3-配置IDEA-remote"><a href="#3-配置IDEA-remote" class="headerlink" title="3.配置IDEA remote"></a>3.配置IDEA remote</h3><p>Edit Configurations -&gt;Add New Configuration -&gt;Remote -&gt;配置host、port-&gt;OK </p>
<h3 id="4-远程启动项目，命令如下"><a href="#4-远程启动项目，命令如下" class="headerlink" title="4.远程启动项目，命令如下"></a>4.远程启动项目，命令如下</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">java -Xdebug -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005 -jar springboot-demo-0.0.1-SNAPSHOT.jar</span><br></pre></td></tr></table></figure>

<h3 id="5-Dubug启动本地工程，IDEA中相关代码打断点，访问http-192-168-0-119-9000-hello，看是否进入本地断点。"><a href="#5-Dubug启动本地工程，IDEA中相关代码打断点，访问http-192-168-0-119-9000-hello，看是否进入本地断点。" class="headerlink" title="5.Dubug启动本地工程，IDEA中相关代码打断点，访问http://192.168.0.119:9000/hello，看是否进入本地断点。"></a>5.Dubug启动本地工程，IDEA中相关代码打断点，访问<a href="http://192.168.0.119:9000/hello，看是否进入本地断点。" target="_blank" rel="noopener">http://192.168.0.119:9000/hello，看是否进入本地断点。</a></h3>]]></content>
      <categories>
        <category>Java</category>
      </categories>
  </entry>
  <entry>
    <title>Sentinel初体验</title>
    <url>/2020/05/16/Sentinel%E5%88%9D%E4%BD%93%E9%AA%8C/</url>
    <content><![CDATA[<p>Sentinel官网：<a href="https://sentinelguard.io/zh-cn/index.html" target="_blank" rel="noopener">https://sentinelguard.io/zh-cn/index.html</a></p>
<p>Sentinel中文文档：<a href="https://github.com/alibaba/Sentinel/wiki/介绍" target="_blank" rel="noopener">https://github.com/alibaba/Sentinel/wiki/%E4%BB%8B%E7%BB%8D</a></p>
<h2 id="1-下载Sentinel"><a href="#1-下载Sentinel" class="headerlink" title="1.下载Sentinel"></a>1.下载Sentinel</h2><p>github下载地址：<a href="https://github.com/alibaba/Sentinel/releases" target="_blank" rel="noopener">https://github.com/alibaba/Sentinel/releases</a></p>
<p>gitee下载地址：<a href="https://gitee.com/mirrors/Sentinel/tags" target="_blank" rel="noopener">https://gitee.com/mirrors/Sentinel/tags</a></p>
<h2 id="2-编译打包Sentinel"><a href="#2-编译打包Sentinel" class="headerlink" title="2.编译打包Sentinel"></a>2.编译打包Sentinel</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mvn clean  package -Dmaven.test.skip=<span class="literal">true</span></span><br></pre></td></tr></table></figure>

<h3 id="3-启动Sentinel"><a href="#3-启动Sentinel" class="headerlink" title="3.启动Sentinel"></a>3.启动Sentinel</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /Users/doubledumbao/software/Sentinel/sentinel-dashboard/target</span><br><span class="line">java -jar sentinel-dashboard.jar</span><br></pre></td></tr></table></figure>

<h3 id="4-查看页面"><a href="#4-查看页面" class="headerlink" title="4.查看页面"></a>4.查看页面</h3><p>localhost:8080</p>
]]></content>
      <categories>
        <category>SpringCloud</category>
      </categories>
      <tags>
        <tag>Sentinel</tag>
      </tags>
  </entry>
  <entry>
    <title>nacos集群初探</title>
    <url>/2020/05/16/nacos%E9%9B%86%E7%BE%A4%E5%88%9D%E6%8E%A2/</url>
    <content><![CDATA[<h2 id="1-下载nacos"><a href="#1-下载nacos" class="headerlink" title="1.下载nacos"></a>1.下载nacos</h2><p>github下载地址：<a href="https://github.com/alibaba/nacos/releases" target="_blank" rel="noopener">https://github.com/alibaba/nacos/releases</a></p>
<p>下载速度实在太慢了，换成gitee下载吧</p>
<p>下载地址：<a href="https://gitee.com/mirrors/Nacos" target="_blank" rel="noopener">https://gitee.com/mirrors/Nacos</a></p>
<p>下载并解压到本地目录，我的目录是/Users/doubledumbao/software</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 解压文件</span></span><br><span class="line">unzip mirrors-Nacos-1.1.4.zip</span><br><span class="line"><span class="comment"># 进入解压后目录Nacos</span></span><br><span class="line"><span class="built_in">cd</span> Nacos</span><br><span class="line"><span class="comment"># 使用maven进行编译打包</span></span><br><span class="line">mvn -Prelease-nacos clean install -U</span><br><span class="line"><span class="comment"># 进入编译后的目录</span></span><br><span class="line"><span class="built_in">cd</span>  /Users/doubledumbao/software/Nacos/distribution/target</span><br><span class="line"><span class="comment"># 目录下nacos-server-1.1.4.tar.gz就是我们需要的压缩包</span></span><br></pre></td></tr></table></figure>

<h2 id="2-将压缩包上传到Linux服务器，步骤略"><a href="#2-将压缩包上传到Linux服务器，步骤略" class="headerlink" title="2.将压缩包上传到Linux服务器，步骤略"></a>2.将压缩包上传到Linux服务器，步骤略</h2><h2 id="3-配置集群模式"><a href="#3-配置集群模式" class="headerlink" title="3.配置集群模式"></a>3.配置集群模式</h2><h3 id="3-1-修改集群配置文件"><a href="#3-1-修改集群配置文件" class="headerlink" title="3.1 修改集群配置文件"></a>3.1 修改集群配置文件</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 进入/opt目录</span></span><br><span class="line"><span class="built_in">cd</span> /opt</span><br><span class="line"><span class="comment"># 解压</span></span><br><span class="line">tar -zxvf nacos-server-1.1.4.tar.gz </span><br><span class="line"><span class="comment"># 进入conf目录</span></span><br><span class="line"><span class="built_in">cd</span> /opt/nacos/conf</span><br><span class="line"><span class="comment"># 修改集群配置文件</span></span><br><span class="line">cp cluster.conf.example cluster.conf</span><br><span class="line">vim cluster.conf</span><br><span class="line"><span class="comment"># 内容修改为ip:port形式</span></span><br><span class="line">192.168.0.119:3333</span><br><span class="line">192.168.0.119:4444</span><br><span class="line">192.168.0.119:5555</span><br></pre></td></tr></table></figure>

<h3 id="3-2-修改application-properties"><a href="#3-2-修改application-properties" class="headerlink" title="3.2 修改application.properties"></a>3.2 修改application.properties</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 备份application.properties</span></span><br><span class="line">cp application.properties application.properties.bak</span><br><span class="line">vim application.properties</span><br><span class="line"><span class="comment"># 添加如下内容(黏贴模式 set paste)</span></span><br><span class="line">spring.datasource.platform=mysql </span><br><span class="line">db.num=1</span><br><span class="line">db.url.0=jdbc:mysql://192.168.0.119:3306/nacos_config?characterEncoding=utf8&amp;connectTimeout=1000&amp;socketTimeout=3000&amp;autoReconnect=<span class="literal">true</span></span><br><span class="line">db.user=root</span><br><span class="line">db.password=123456</span><br></pre></td></tr></table></figure>

<h3 id="3-3-执行nacos-mysql-sql中的语句"><a href="#3-3-执行nacos-mysql-sql中的语句" class="headerlink" title="3.3 执行nacos-mysql.sql中的语句"></a>3.3 执行nacos-mysql.sql中的语句</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 执行nacos-mysql.sql中的语句</span></span><br><span class="line">mysql -uroot -p</span><br><span class="line"><span class="comment">## 创建数据库</span></span><br><span class="line">create database nacos_config;</span><br><span class="line"><span class="comment">## 使用nacos_config数据库</span></span><br><span class="line">use nacos_config;</span><br><span class="line"><span class="comment">## 执行nacos-mysql.sql中的语句</span></span><br><span class="line"><span class="built_in">source</span> /opt/nacos/conf/nacos-mysql.sql</span><br></pre></td></tr></table></figure>

<h3 id="3-4-修改启动文件"><a href="#3-4-修改启动文件" class="headerlink" title="3.4 修改启动文件"></a>3.4 修改启动文件</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 修改启动文件</span></span><br><span class="line"><span class="comment">## 进入/opt/nacos/bin目录</span></span><br><span class="line"><span class="built_in">cd</span> /opt/nacos/bin</span><br><span class="line"><span class="comment">## 修改启动文件</span></span><br><span class="line">vim startup.sh</span><br><span class="line"><span class="comment">### 修改两处地方，第一处</span></span><br><span class="line"> 57 <span class="keyword">while</span> <span class="built_in">getopts</span> <span class="string">":m:f:s:p:"</span> opt</span><br><span class="line"> 58 <span class="keyword">do</span></span><br><span class="line"> 59     <span class="keyword">case</span> <span class="variable">$opt</span> <span class="keyword">in</span></span><br><span class="line"> 60         m)</span><br><span class="line"> 61             MODE=<span class="variable">$OPTARG</span>;;</span><br><span class="line"> 62         f)</span><br><span class="line"> 63             FUNCTION_MODE=<span class="variable">$OPTARG</span>;;</span><br><span class="line"> 64         s)</span><br><span class="line"> 65             SERVER=<span class="variable">$OPTARG</span>;;</span><br><span class="line"> 66         p)</span><br><span class="line"> 67             PORT=<span class="variable">$OPTARG</span>;;</span><br><span class="line"> 68         ?)</span><br><span class="line"> 69         <span class="built_in">echo</span> <span class="string">"Unknown parameter"</span></span><br><span class="line"> 70         <span class="built_in">exit</span> 1;;</span><br><span class="line"> 71     <span class="keyword">esac</span></span><br><span class="line"> 72 <span class="keyword">done</span></span><br><span class="line"> <span class="comment">### 修改第二处地方</span></span><br><span class="line"> 135 nohup <span class="variable">$JAVA</span> -Dserver.port=<span class="variable">$&#123;PORT&#125;</span>  <span class="variable">$&#123;JAVA_OPT&#125;</span>  nacos.nacos &gt;&gt; <span class="variable">$&#123;BASE_DIR&#125;</span>/logs/start.out 2&gt;&amp;1 &amp;</span><br><span class="line"> <span class="comment">### 注释掉一处地方（非常重要） </span></span><br><span class="line"> <span class="comment">#JAVA_OPT="$&#123;JAVA_OPT&#125; -Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=8000"</span></span><br><span class="line"> <span class="comment"># 否则会报错如下：</span></span><br><span class="line"> ERROR: transport error 202: <span class="built_in">bind</span> failed: 地址已在使用</span><br><span class="line"> ERROR: JDWP Transport dt_socket failed to initialize, TRANSPORT_INIT(510)</span><br><span class="line"> JDWP <span class="built_in">exit</span> error AGENT_ERROR_TRANSPORT_INIT(197): No transports initialized [debugInit.c:750]</span><br><span class="line"> FATAL ERROR <span class="keyword">in</span> native method: JDWP No transports initialized,   jvmtiError=AGENT_ERROR_TRANSPORT_INIT(197)</span><br></pre></td></tr></table></figure>

<h3 id="3-5-启动"><a href="#3-5-启动" class="headerlink" title="3.5 启动"></a>3.5 启动</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./startup.sh -p 3333</span><br><span class="line">./startup.sh -p 4444</span><br><span class="line">./startup.sh -p 5555</span><br></pre></td></tr></table></figure>

<h3 id="3-6-查看启动结果"><a href="#3-6-查看启动结果" class="headerlink" title="3.6 查看启动结果"></a>3.6 查看启动结果</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">lsof -i:3333</span><br><span class="line">lsof -i:4444</span><br><span class="line">lsof -i:5555</span><br></pre></td></tr></table></figure>

<h3 id="3-7-配置nginx"><a href="#3-7-配置nginx" class="headerlink" title="3.7 配置nginx"></a>3.7 配置nginx</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 修改nginx.conf</span></span><br><span class="line">upstream nacos&#123;</span><br><span class="line">  server 192.168.0.119:3333;</span><br><span class="line">  server 192.168.0.119:4444;</span><br><span class="line">  server 192.168.0.119:5555;</span><br><span class="line">&#125;</span><br><span class="line">server &#123;</span><br><span class="line">  listen         8848;</span><br><span class="line">  location  / &#123;</span><br><span class="line">  	proxy_pass http://nacos;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="3-8-验证"><a href="#3-8-验证" class="headerlink" title="3.8 验证"></a>3.8 验证</h3><p>浏览器访问192.168.0.119:8848/nacos</p>
<p>架构图如下：</p>
<p><img src="https://note.youdao.com/yws/public/resource/adcfc73ce82209eac9c749c8e762f8e6/xmlnote/73A215E93E9146D79166A3ED3FE01252/5228" alt="nacos集群"></p>
]]></content>
      <categories>
        <category>SpringCloud</category>
        <category>nacos</category>
      </categories>
      <tags>
        <tag>nacos</tag>
      </tags>
  </entry>
  <entry>
    <title>Redis主从复制</title>
    <url>/2020/05/15/Redis%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6/</url>
    <content><![CDATA[<h1 id="主从复制"><a href="#主从复制" class="headerlink" title="主从复制"></a>主从复制</h1><p>在 Redis 复制的基础上，使用和配置主从复制非常简单，能使得从 Redis 服务器（下文称 slave）能精确得复制主 Redis 服务器（下文称 master）的内容。每次当 slave 和 master 之间的连接断开时， slave 会自动重连到 master 上，并且无论这期间 master 发生了什么， slave 都将尝试让自身成为 master 的精确副本。</p>
<p>这个系统的运行依靠三个主要的机制：</p>
<ul>
<li>当一个 master 实例和一个 slave 实例连接正常时， master 会发送一连串的命令流来保持对 slave 的更新，以便于将自身数据集的改变复制给 slave ， ：包括客户端的写入、key 的过期或被逐出等等。</li>
<li>当 master 和 slave 之间的连接断开之后，因为网络问题、或者是主从意识到连接超时， slave 重新连接上 master 并会尝试进行部分重同步：这意味着它会尝试只获取在断开连接期间内丢失的命令流。</li>
<li>当无法进行部分重同步时， slave 会请求进行全量重同步。这会涉及到一个更复杂的过程，例如 master 需要创建所有数据的快照，将之发送给 slave ，之后在数据集更改时持续发送命令流到 slave 。</li>
</ul>
<p>Redis使用默认的异步复制，其特点是低延迟和高性能，是绝大多数 Redis 用例的自然复制模式。但是，从 Redis 服务器会异步地确认其从主 Redis 服务器周期接收到的数据量。</p>
<p>客户端可以使用 <a href="https://redis.io/commands/wait" target="_blank" rel="noopener">WAIT</a> 命令来请求同步复制某些特定的数据。但是，WAIT 命令只能确保在其他 Redis 实例中有指定数量的已确认的副本：在故障转移期间，由于不同原因的故障转移或是由于 Redis 持久性的实际配置，故障转移期间确认的写入操作可能仍然会丢失。你可以查看 Sentinel 或 Redis 集群文档，了解关于高可用性和故障转移的更多信息。本文的其余部分主要描述 Redis 基本复制功能的基本特性。</p>
<p>接下来的是一些关于 Redis 复制的非常重要的事实：</p>
<ul>
<li>Redis 使用异步复制，slave 和 master 之间异步地确认处理的数据量</li>
<li>一个 master 可以拥有多个 slave</li>
<li>slave 可以接受其他 slave 的连接。除了多个 slave 可以连接到同一个 master 之外， slave 之间也可以像层叠状的结构（cascading-like structure）连接到其他 slave 。自 Redis 4.0 起，所有的 sub-slave 将会从 master 收到完全一样的复制流。</li>
<li>Redis 复制在 master 侧是非阻塞的。这意味着 master 在一个或多个 slave 进行初次同步或者是部分重同步时，可以继续处理查询请求。</li>
<li>复制在 slave 侧大部分也是非阻塞的。当 slave 进行初次同步时，它可以使用旧数据集处理查询请求，假设你在 redis.conf 中配置了让 Redis 这样做的话。否则，你可以配置如果复制流断开， Redis slave 会返回一个 error 给客户端。但是，在初次同步之后，旧数据集必须被删除，同时加载新的数据集。 slave 在这个短暂的时间窗口内（如果数据集很大，会持续较长时间），会阻塞到来的连接请求。自 Redis 4.0 开始，可以配置 Redis 使删除旧数据集的操作在另一个不同的线程中进行，但是，加载新数据集的操作依然需要在主线程中进行并且会阻塞 slave 。</li>
<li>复制既可以被用在可伸缩性，以便只读查询可以有多个 slave 进行（例如 O(N) 复杂度的慢操作可以被下放到 slave ），或者仅用于数据安全。</li>
<li>可以使用复制来避免 master 将全部数据集写入磁盘造成的开销：一种典型的技术是配置你的 master Redis.conf 以避免对磁盘进行持久化，然后连接一个 slave ，其配置为不定期保存或是启用 AOF。但是，这个设置必须小心处理，因为重新启动的 master 程序将从一个空数据集开始：如果一个 slave 试图与它同步，那么这个 slave 也会被清空。</li>
</ul>
<h2 id="当-master-关闭持久化时，复制的安全性"><a href="#当-master-关闭持久化时，复制的安全性" class="headerlink" title="当 master 关闭持久化时，复制的安全性"></a>当 master 关闭持久化时，复制的安全性</h2><p>在使用 Redis 复制功能时的设置中，强烈建议在 master 和在 slave 中启用持久化。当不可能启用时，例如由于非常慢的磁盘性能而导致的延迟问题，<strong>应该配置实例来避免重置后自动重启</strong>。</p>
<p>为了更好地理解为什么关闭了持久化并配置了自动重启的 master 是危险的，检查以下故障模式，这些故障模式中数据会从 master 和所有 slave 中被删除：</p>
<ol>
<li>我们设置节点 A 为 master 并关闭它的持久化设置，节点 B 和 C 从 节点 A 复制数据。</li>
<li>节点 A 崩溃，但是他有一些自动重启的系统可以重启进程。但是由于持久化被关闭了，节点重启后其数据集合为空。</li>
<li>节点 B 和 节点 C 会从节点 A 复制数据，但是节点 A 的数据集是空的，因此复制的结果是它们会销毁自身之前的数据副本。</li>
</ol>
<p>当 Redis Sentinel 被用于高可用并且 master 关闭持久化，这时如果允许自动重启进程也是很危险的。例如， master 可以重启的足够快以致于 Sentinel 没有探测到故障，因此上述的故障模式也会发生。</p>
<p>任何时候数据安全性都是很重要的，所以如果 master 使用复制功能的同时未配置持久化，那么自动重启进程这项应该被禁用。</p>
<h2 id="Redis-复制功能是如何工作的"><a href="#Redis-复制功能是如何工作的" class="headerlink" title="Redis 复制功能是如何工作的"></a>Redis 复制功能是如何工作的</h2><p>每一个 Redis master 都有一个 replication ID ：这是一个较大的伪随机字符串，标记了一个给定的数据集。每个 master 也持有一个偏移量，master 将自己产生的复制流发送给 slave 时，发送多少个字节的数据，自身的偏移量就会增加多少，目的是当有新的操作修改自己的数据集时，它可以以此更新 slave 的状态。复制偏移量即使在没有一个 slave 连接到 master 时，也会自增，所以基本上每一对给定的</p>
<blockquote>
<p>Replication ID, offset</p>
</blockquote>
<p>都会标识一个 master 数据集的确切版本。</p>
<p>当 slave 连接到 master 时，它们使用 PSYNC 命令来发送它们记录的旧的 master replication ID 和它们至今为止处理的偏移量。通过这种方式， master 能够仅发送 slave 所需的增量部分。但是如果 master 的缓冲区中没有足够的命令积压缓冲记录，或者如果 slave 引用了不再知道的历史记录（replication ID），则会转而进行一个全量重同步：在这种情况下， slave 会得到一个完整的数据集副本，从头开始。</p>
<p>下面是一个全量同步的工作细节：</p>
<p>master 开启一个后台保存进程，以便于生产一个 RDB 文件。同时它开始缓冲所有从客户端接收到的新的写入命令。当后台保存完成时， master 将数据集文件传输给 slave， slave将之保存在磁盘上，然后加载文件到内存。再然后 master 会发送所有缓冲的命令发给 slave。这个过程以指令流的形式完成并且和 Redis 协议本身的格式相同。</p>
<p>你可以用 telnet 自己进行尝试。在服务器正在做一些工作的同时连接到 Redis 端口并发出 <a href="https://redis.io/commands/sync" target="_blank" rel="noopener">SYNC</a> 命令。你将会看到一个批量传输，并且之后每一个 master 接收到的命令都将在 telnet 回话中被重新发出。事实上 SYNC 是一个旧协议，在新的 Redis 实例中已经不再被使用，但是其仍然向后兼容：但它不允许部分重同步，所以现在 <strong>PSYNC</strong> 被用来替代 SYNC。</p>
<p>之前说过，当主从之间的连接因为一些原因崩溃之后， slave 能够自动重连。如果 master 收到了多个 slave 要求同步的请求，它会执行一个单独的后台保存，以便于为多个 slave 服务。</p>
<h2 id="无需磁盘参与的复制"><a href="#无需磁盘参与的复制" class="headerlink" title="无需磁盘参与的复制"></a>无需磁盘参与的复制</h2><p>正常情况下，一个全量重同步要求在磁盘上创建一个 RDB 文件，然后将它从磁盘加载进内存，然后 slave以此进行数据同步。</p>
<p>如果磁盘性能很低的话，这对 master 是一个压力很大的操作。Redis 2.8.18 是第一个支持无磁盘复制的版本。在此设置中，子进程直接发送 RDB 文件给 slave，无需使用磁盘作为中间储存介质。</p>
<h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>配置基本的 Redis 复制功能是很简单的：只需要将以下内容加进 slave 的配置文件：</p>
<blockquote>
<p>slaveof 192.168.1.1 6379</p>
</blockquote>
<p>当然你需要用你自己的 master IP 地址（或者主机名）和端口替换掉 192.168.1.1 6379。另一种方法，你也可以使用 <a href="https://redis.io/commands/slaveof" target="_blank" rel="noopener">SLAVEOF</a> 命令， master 会开启一个跟 slave 间的同步。</p>
<p>还有一些参数用于调节内存中保存的缓冲积压部分（replication backlog），以便执行部分重同步。详见 redis.conf 和 Redis Distribution 了解更多信息。</p>
<p>无磁盘复制可以使用 repl-diskless-sync 配置参数。repl-diskless-sync-delay 参数可以延迟启动数据传输，目的可以在第一个 slave就绪后，等待更多的 slave就绪。可以在 Redis Distribution 例子中的 redis.conf 中看到更多细节信息。</p>
<h2 id="只读性质的-slave"><a href="#只读性质的-slave" class="headerlink" title="只读性质的 slave"></a>只读性质的 slave</h2><p>自从 Redis 2.6 之后， slave 支持只读模式且默认开启。redis.conf 文件中的 slave-read-only 变量控制这个行为，且可以在运行时使用 <a href="https://redis.io/commands/config-set" target="_blank" rel="noopener">CONFIG SET</a> 来随时开启或者关闭。</p>
<p>只读模式下的 slave 将会拒绝所有写入命令，因此实践中不可能由于某种出错而将数据写入 slave 。但这并不意味着该特性旨在将一个 slave 实例暴露到 Internet ，或者更广泛地说，将之暴露在存在不可信客户端的网络，因为像 <strong>DEBUG</strong> 或者 <strong>CONFIG</strong> 这样的管理员命令仍在启用。但是，在 redis.conf 文件中使用 rename-command 指令可以禁用上述管理员命令以提高只读实例的安全性。</p>
<p>您也许想知道为什么可以还原只读设置，并有可以通过写入操作来设置 slave 实例。如果 slave 跟 master 在同步或者 slave 在重启，那么这些写操作将会无效，但是将短暂数据存储在 writable slave 中还是有一些合理的用例的。</p>
<p>例如，计算 slow Set 或者 Sorted Set 的操作并将它们存储在本地 key 中是多次观察到的使用 writable slave 的用例。</p>
<p>但是注意，4.0 版本之前的 writable slaves 不能用生存时间来淘汰 key 。这意味着，如果你使用 <a href="https://redis.io/commands/expire" target="_blank" rel="noopener">EXPIRE</a> 或者其他命令为 key 设置了最大 TTL 的话，你将会在键值计数（count of keys）中看到这个 key ，并且它还在内存中。所以总的来说，将 writable slaves 和设置过 TTL 的 key 混用将会导致问题。</p>
<p>Redis 4.0 RC3 及更高版本彻底解决了这个问题，现在 writable slaves 能够像 master 一样驱逐 TTL 设置过的 key 了，但 DB 编号大于 63（但默认情况下，Redis实例只有16个数据库）的 key 除外。</p>
<p>另请注意，由于 Redis 4.0 writable slaves 仅能本地，并且不会将数据传播到与该实例相连的 sub-slave 上。sub-slave 将总是接收与最顶层 master 向 intermediate slaves 发送的复制流相同的复制流。所以例如在以下设置中：</p>
<blockquote>
<p>A —&gt; B —-&gt; C</p>
</blockquote>
<p>及时节点 B 是可写的，C 也不会看到 B 的写入，而是将拥有和 master 实例 A 相同的数据集。</p>
<h2 id="设置一个-slave-对-master-进行验证"><a href="#设置一个-slave-对-master-进行验证" class="headerlink" title="设置一个 slave 对 master 进行验证"></a>设置一个 slave 对 master 进行验证</h2><p>如果你的 master 通过 requirepass 设置了密码，则在所有同步操作中配置 slave 使用该密码是很简单的。</p>
<p>要在正在运行的实例上执行此操作，请使用 redis-cli 并输入：</p>
<blockquote>
<p>config set masterauth <password></p>
</blockquote>
<p>要永久设置的话，请将其添加到您的配置文件中：</p>
<blockquote>
<p>masterauth <password></p>
</blockquote>
<h2 id="允许只写入-N-个附加的副本"><a href="#允许只写入-N-个附加的副本" class="headerlink" title="允许只写入 N 个附加的副本"></a>允许只写入 N 个附加的副本</h2><p>从Redis 2.8开始，只有当至少有 N 个 slave 连接到 master 时，才有可能配置 Redis master 接受写查询。</p>
<p>但是，由于 Redis 使用异步复制，因此无法确保 slave 是否实际接收到给定的写命令，因此总会有一个数据丢失窗口。</p>
<p>以下是该特性的工作原理：</p>
<ul>
<li>Redis slave 每秒钟都会 ping master，确认已处理的复制流的数量。</li>
<li>Redis master 会记得上一次从每个 slave 都收到 ping 的时间。</li>
<li>用户可以配置一个最小的 slave 数量，使得它滞后 &lt;= 最大秒数。</li>
</ul>
<p>如果至少有 N 个 slave ，并且滞后小于 M 秒，则写入将被接受。</p>
<p>你可能认为这是一个尽力而为的数据安全机制，对于给定的写入来说，不能保证一致性，但至少数据丢失的时间窗限制在给定的秒数内。一般来说，绑定的数据丢失比不绑定的更好。</p>
<p>如果条件不满足，master 将会回复一个 error 并且写入将不被接受。</p>
<p>这个特性有两个配置参数：</p>
<ul>
<li>min-slaves-to-write &lt;slave 数量&gt;</li>
<li>min-slaves-max-lag &lt;秒数&gt;</li>
</ul>
<p>有关更多信息，请查看随 Redis 源代码发行版一起提供的示例 redis.conf 文件。</p>
<h2 id="Redis-复制如何处理-key-的过期"><a href="#Redis-复制如何处理-key-的过期" class="headerlink" title="Redis 复制如何处理 key 的过期"></a>Redis 复制如何处理 key 的过期</h2><p>Redis 的过期机制可以限制 key 的生存时间。此功能取决于 Redis 实例计算时间的能力，但是，即使使用 Lua 脚本更改了这些 key，Redis slaves 也能正确地复制具有过期时间的 key。</p>
<p>为了实现这样的功能，Redis 不能依靠主从使用同步时钟，因为这是一个无法解决的并且会导致 race condition 和数据集不一致的问题，所以 Redis 使用三种主要的技术使过期的 key 的复制能够正确工作：</p>
<ul>
<li>slave 不会让 key 过期，而是等待 master 让 key 过期。当一个 master 让一个 key 到期（或由于 LRU 算法将之驱逐）时，它会合成一个 DEL 命令并传输到所有的 slave。</li>
<li>但是，由于这是 master 驱动的 key 过期行为，master 无法及时提供 DEL 命令，所以有时候 slave 的内存中仍然可能存在在逻辑上已经过期的 key 。为了处理这个问题，slave 使用它的逻辑时钟以报告只有在不违反数据集的一致性的读取操作（从主机的新命令到达）中才存在 key。用这种方法，slave 避免报告逻辑过期的 key 仍然存在。在实际应用中，使用 slave 程序进行缩放的 HTML 碎片缓存，将避免返回已经比期望的时间更早的数据项。</li>
<li>在Lua脚本执行期间，不执行任何 key 过期操作。当一个Lua脚本运行时，从概念上讲，master 中的时间是被冻结的，这样脚本运行的时候，一个给定的键要么存在要么不存在。这可以防止 key 在脚本中间过期，保证将相同的脚本发送到 slave ，从而在二者的数据集中产生相同的效果。</li>
</ul>
<p>一旦一个 slave 被提升为一个 master ，它将开始独立地过期 key，而不需要任何旧 master 的帮助。</p>
<h2 id="在-Docker-和-NAT-中配置复制"><a href="#在-Docker-和-NAT-中配置复制" class="headerlink" title="在 Docker 和 NAT 中配置复制"></a>在 Docker 和 NAT 中配置复制</h2><p>当使用 Docker 或其他类型的容器使用端口转发或网络地址转换时，Redis 复制需要特别小心，特别是在使用 Redis Sentinel 或其他系统（其中扫描 master INFO 或 ROLE 命令的输出情况以便于发现 slave 地址的）。</p>
<p>问题是 ROLE 命令和 INFO 输出的复制部分在发布到 master 实例中时，将显示 slave 具有的用于连接到 master 的 IP 地址，而在使用 NAT 的环境中，和 slave 实例的逻辑地址（客户机用来连接 slave 的地址）相比较可能会不同。</p>
<p>类似地，slaves 将以 redis.conf 文件中监听的端口为序列出，在重新映射端口的情况下，该端口可能与转发的端口不同。</p>
<p>为了解决这两个问题，从 Redis 3.2.2 开始，可以强制一个 slave 向 master 通告一对任意的 IP 和端口。使用的两个配置指令是：</p>
<blockquote>
<p>slave-announce-ip 5.5.5.5</p>
</blockquote>
<blockquote>
<p>slave-announce-port 1234</p>
</blockquote>
<p>在近期 Redis distributions 中的 redis.conf 的样例中可以找到记录。</p>
<h2 id="INFO-和-ROLE-命令"><a href="#INFO-和-ROLE-命令" class="headerlink" title="INFO 和 ROLE 命令"></a>INFO 和 ROLE 命令</h2><p>有两个 Redis 命令可以提供有关主从实例当前复制参数的很多信息。一个是INFO。如果使用复制参数像 INFO replication 调用该命令，，则只显示与复制相关的信息。另一个更加 computer-friendly 的命令是 ROLE，它提供 master 和 slave 的复制状态以及它们的复制偏移量，连接的 slaves 列表等等。</p>
<h2 id="重新启动和故障转移后的部分重同步"><a href="#重新启动和故障转移后的部分重同步" class="headerlink" title="重新启动和故障转移后的部分重同步"></a>重新启动和故障转移后的部分重同步</h2><p>从 Redis 4.0 开始，当一个实例在故障转移后被提升为 master 时，它仍然能够与旧 master 的 slaves 进行部分重同步。为此，slave 会记住旧 master 的旧 replication ID 和复制偏移量，因此即使询问旧的 replication ID，其也可以将部分复制缓冲提供给连接的 slave 。</p>
<p>但是，升级的 slave 的新 replication ID 将不同，因为它构成了数据集的不同历史记录。例如，master 可以返回可用，并且可以在一段时间内继续接受写入命令，因此在被提升的 slave 中使用相同的 replication ID 将违反一对复制标识和偏移对只能标识单一数据集的规则。</p>
<p>另外，slave 在关机并重新启动后，能够在 RDB 文件中存储所需信息，以便与 master 进行重同步。这在升级的情况下很有用。当需要时，最好使用 SHUTDOWN 命令来执行 slave 的保存和退出操作。</p>
<h2 id="Docker搭建主从复制环境"><a href="#Docker搭建主从复制环境" class="headerlink" title="Docker搭建主从复制环境"></a>Docker搭建主从复制环境</h2><p>编写docker-compose.yml</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">'3'</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">    <span class="attr">master:</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">redis</span></span><br><span class="line">        <span class="attr">container_name:</span> <span class="string">redis-master</span></span><br><span class="line">        <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">        <span class="attr">command:</span> <span class="string">redis-server</span> <span class="string">--port</span> <span class="number">6379</span> <span class="string">--requirepass</span> <span class="string">master123</span> <span class="string">--appendonly</span> <span class="literal">yes</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="number">6379</span><span class="string">:6379</span></span><br><span class="line">        <span class="attr">volumes:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">./data/master:/data</span></span><br><span class="line">    <span class="attr">slave1:</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">redis</span></span><br><span class="line">        <span class="attr">container_name:</span> <span class="string">redis-slave-1</span></span><br><span class="line">        <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">        <span class="attr">command:</span> <span class="string">redis-server</span> <span class="string">--slaveof</span> <span class="string">master</span> <span class="number">6379</span> <span class="string">--port</span> <span class="number">6380</span> <span class="string">--requirepass</span> <span class="string">slave123</span> <span class="string">--masterauth</span> <span class="string">master123</span> <span class="string">--appendonly</span> <span class="literal">yes</span></span><br><span class="line">        <span class="attr">ports:</span> </span><br><span class="line">            <span class="bullet">-</span> <span class="number">6380</span><span class="string">:6380</span></span><br><span class="line">        <span class="attr">volumes:</span> </span><br><span class="line">            <span class="bullet">-</span> <span class="string">./data/slave1:/data</span></span><br><span class="line">    <span class="attr">slave2:</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">redis</span></span><br><span class="line">        <span class="attr">container_name:</span> <span class="string">redis-slave-2</span></span><br><span class="line">        <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">        <span class="attr">command:</span> <span class="string">redis-server</span> <span class="string">--slaveof</span> <span class="string">master</span> <span class="number">6379</span> <span class="string">--port</span> <span class="number">6381</span> <span class="string">--requirepass</span> <span class="string">slave123</span> <span class="string">--masterauth</span> <span class="string">master123</span> <span class="string">--appendonly</span> <span class="literal">yes</span></span><br><span class="line">        <span class="attr">ports:</span> </span><br><span class="line">            <span class="bullet">-</span> <span class="number">6381</span><span class="string">:6381</span></span><br><span class="line">        <span class="attr">volumes:</span> </span><br><span class="line">            <span class="bullet">-</span> <span class="string">./data/slave2:/data</span></span><br></pre></td></tr></table></figure>

<p>启动主从复制服务器</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker-compose up</span><br></pre></td></tr></table></figure>

<p>关闭主从复制服务器</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker-compose down</span><br></pre></td></tr></table></figure>

<p>参考文档：</p>
<p><a href="http://redis.cn/topics/replication.html" target="_blank" rel="noopener">Redis中文官网-复制</a></p>
]]></content>
      <categories>
        <category>Redis</category>
      </categories>
      <tags>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title>高性能MySQL--1.3事务</title>
    <url>/2020/05/14/%E9%AB%98%E6%80%A7%E8%83%BDMySQL-1-3%E4%BA%8B%E5%8A%A1/</url>
    <content><![CDATA[<p>在理解事务的概念之前，接触数据库系统的其他高级特性还言之过早。事务就是一组原子性的SQL查询，或者说一个独立的工作单元。如果数据库引擎能够成功地对数据库应用该组查询的全部语句，那么就执行该组查询。如果其中有任何一条语句因为崩溃或其他原因无法执行，那么所有的语句都不会执行。也就是说，事务内的语句，要么全部执行成功，要么全部执行失败。</p>
<p>本节的内容并非专属于MySQL，如果读者已经熟悉了事务的ACID的概念，可以直接跳转到1.3.4节。<br>银行应用是解释事务必要性的一个经典例子。假设一个银行的数据库有两张表：支票（checking）表和储蓄（savings）表。现在要从用户Jane的支票账户转移200美元到她的储蓄账户，那么需要至少三个步骤：</p>
<p>1.检查支票账户的余额高于200美元。<br>2.从支票账户余额中减去200美元。<br>3.在储蓄账户余额中增加200美元。<br>上述三个步骤的操作必须打包在一个事务中，任何一个步骤失败，则必须回滚所有的步骤。<br>可以用START TRANSACTION语句开始一个事务，然后要么使用COMMIT提交事务将修改的数据持久保留，要么使用ROLLBACK撤销所有的修改。事务SQL的样本如下：</p>
<p><img src="https://note.youdao.com/yws/public/resource/c73fe14647eee0b91e81ce4dcbf5b045/xmlnote/02EAA60312F745B380B9BCB1A5086A68/5221" alt="sql"></p>
<p>单纯的事务概念并不是故事的全部。试想一下，如果执行到第四条语句时服务器崩溃了，会发生什么？天知道，用户可能会损失200美元。再假如，在执行到第三条语句和第四条语句之间时，另外一个进程要删除支票账户的所有余额，那么结果可能就是银行在不知道这个逻辑的情况下白白给了Jane 200美元。<br>除非系统通过严格的ACID测试，否则空谈事务的概念是不够的。ACID表示原子性（atomicity）、一致性（consistency）、隔离性（isolation）和持久性（durability）。一个运行良好的事务处理系统，必须具备这些标准特征。</p>
<ul>
<li>原子性（atomicity）</li>
</ul>
<p>一个事务必须被视为一个不可分割的最小工作单元，整个事务中的所有操作要么全部提交成功，要么全部失败回滚，对于一个事务来说，不可能只执行其中的一部分操作，这就是事务的原子性。</p>
<ul>
<li>一致性（consistency）</li>
</ul>
<p>数据库总是从一个一致性的状态转换到另外一个一致性的状态。在前面的例子中，一致性确保了，即使在执行第三、四条语句之间时系统崩溃，支票账户中也不会损失200美元，因为事务最终没有提交，所以事务中所做的修改也不会保存到数据库中。</p>
<ul>
<li>隔离性（isolation）</li>
</ul>
<p>通常来说，一个事务所做的修改在最终提交以前，对其他事务是不可见的。在前面的例子中，当执行完第三条语句、第四条语句还未开始时，此时有另外一个账户汇总程序开始运行，则其看到的支票账户的余额并没有被减去200美元。后面我们讨论隔离级别（Isolation level）的时候，会发现为什么我们要说“通常来说”是不可见的。</p>
<ul>
<li>持久性（durability）</li>
</ul>
<p>一旦事务提交，则其所做的修改就会永久保存到数据库中。此时即使系统崩溃，修改的数据也不会丢失。持久性是个有点模糊的概念，因为实际上持久性也分很多不同的级别。有些持久性策略能够提供非常强的安全保障，而有些则未必。而且不可能有能做到100%的持久性保证的策略（如果数据库本身就能做到真正的持久性，那么备份又怎么能增加持久性呢？）。在后面的一些章节中，我们会继续讨论MySQL中持久性的真正含义。</p>
<p>事务的ACID特性可以确保银行不会弄丢你的钱。而在应用逻辑中，要实现这一点非常难，甚至可以说是不可能完成的任务。一个兼容ACID的数据库系统，需要做很多复杂但可能用户并没有觉察到的工作，才能确保ACID的实现。<br>就像锁粒度的升级会增加系统开销一样，这种事务处理过程中额外的安全性，也会需要数据库系统做更多的额外工作。一个实现了ACID的数据库，相比没有实现ACID的数据库，通常会需要更强的CPU处理能力、更大的内存和更多的磁盘空间。正如本章不断重复的，这也正是MySQL的存储引擎架构可以发挥优势的地方。用户可以根据业务是否需要事务处理，来选择合适的存储引擎。对于一些不需要事务的查询类应用，选择一个非事务型的存储引擎，可以获得更高的性能。即使存储引擎不支持事务，也可以通过LOCK TABLES语句为应用提供一定程度的保护，这些选择用户都可以自主决定。</p>
<p>1.3.1 隔离级别<br>隔离性其实比想象的要复杂。在SQL标准中定义了四种隔离级别，每一种级别都规定了一个事务中所做的修改，哪些在事务内和事务间是可见的，哪些是不可见的。较低级别的隔离通常可以执行更高的并发，系统的开销也更低。</p>
<p>下面简单地介绍一下四种隔离级别。</p>
<ul>
<li>READ UNCOMMITTED（未提交读）</li>
</ul>
<p>在READ UNCOMMITTED级别，事务中的修改，即使没有提交，对其他事务也都是可见的。事务可以读取未提交的数据，这也被称为脏读（Dirty Read）。这个级别会导致很多问题，从性能上来说，READ UNCOMMITTED不会比其他的级别好太多，但却缺乏其他级别的很多好处，除非真的有非常必要的理由，在实际应用中一般很少使用。</p>
<ul>
<li>READ COMMITTED（提交读）</li>
</ul>
<p>大多数数据库系统的默认隔离级别都是READ COMMITTED（但MySQL不是）。READ COMMITTED满足前面提到的隔离性的简单定义：一个事务开始时，只能“看见”已经提交的事务所做的修改。换句话说，一个事务从开始直到提交之前，所做的任何修改对其他事务都是不可见的。这个级别有时候也叫做不可重复读（nonrepeatable read），因为两次执行同样的查询，可能会得到不一样的结果。</p>
<ul>
<li>REPEATABLE READ（可重复读）</li>
</ul>
<p>REPEATABLE READ解决了脏读的问题。该级别保证了在同一个事务中多次读取同样记录的结果是一致的。但是理论上，可重复读隔离级别还是无法解决另外一个幻读（Phantom Read）的问题。所谓幻读， 指的是当某个事务在读取某个范围内的记录时，另外一个事务又在该范围内插入了新的记录，当之前的事务再次读取该范围的记录时，会产生幻行（Phantom Row）。InnoDB和XtraDB存储引擎通过多版本并发控制（MVCC,Multiversion Concurrency Control）解决了幻读的问题。本章稍后会做进一步的讨论。</p>
<ul>
<li>REPEATABLE READ（可重复读）</li>
</ul>
<p>REPEATABLE READ解决了脏读的问题。该级别保证了在同一个事务中多次读取同样记录的结果是一致的。但是理论上，可重复读隔离级别还是无法解决另外一个幻读（Phantom Read）的问题。所谓幻读， 指的是当某个事务在读取某个范围内的记录时，另外一个事务又在该范围内插入了新的记录，当之前的事务再次读取该范围的记录时，会产生幻行（Phantom Row）。InnoDB和XtraDB存储引擎通过多版本并发控制（MVCC,Multiversion Concurrency Control）解决了幻读的问题。本章稍后会做进一步的讨论。</p>
<p>表1-1：ANSI SQL隔离级别</p>
<p><img src="https://note.youdao.com/yws/public/resource/c73fe14647eee0b91e81ce4dcbf5b045/xmlnote/9FF86F5771954561B6BBC84C9EFEBEB8/5225" alt="隔离级别"></p>
<p>摘自：《高性能MySQL（第3版）》 — 〔美〕施瓦茨（Baron Schwartz）  〔美〕扎伊采夫（Peter Zaitsev）  〔美〕特卡琴科（Vadim Tkachenko）</p>
]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
        <tag>事务</tag>
      </tags>
  </entry>
  <entry>
    <title>关于Java流的几个概念：IO、BIO、NIO、AIO</title>
    <url>/2020/05/13/%E5%85%B3%E4%BA%8EJava%E6%B5%81%E7%9A%84%E5%87%A0%E4%B8%AA%E6%A6%82%E5%BF%B5%EF%BC%9AIO%E3%80%81BIO%E3%80%81NIO%E3%80%81AIO/</url>
    <content><![CDATA[<p>关于同步、阻塞的知识我之前的文章有介绍，所以关于流用到这些概念与之前多线程用的概念一样。</p>
<p>下面具体来看看java中的几种流</p>
<blockquote>
<p><strong>IO/BIO</strong></p>
</blockquote>
<p>BIO就是指IO，即传统的Blocking IO,即同步并阻塞的IO。这也是jdk1.4之前的唯一选择，依赖于ServerSocket实现，即一个请求对应一个线程，如果线程数不够连接则会等待空余线程或者拒绝连接。所以用这种方式，在高并发情况下效率是很低的，也不可靠，一般只应用于连接数比较小且固定架构的应用，但api也比较容易使用。</p>
<blockquote>
<p><strong>NIO</strong></p>
</blockquote>
<p>新的IO,即New IO或者Non-Blocking IO,即同步不阻塞的IO。jdk1.4之后提供了一系列的方法来操作流，定义在java.nio包下面。相比于传统的BIO,NIO 提供了高速的面向快的I/O,它加入了Buffer、Channel、Selector等概念。它是基于事件驱动的，采用了Reactor模式，它使用一个线程管理所有的socket通道，即客户端发送的连接请求都会注册到多路复用器上，多路复用器轮询到连接有I/O请求时才启动一个线程进行处理。它的特点是要不断主动地去询问数据有没有处理完，一般只适用于连接数目较大但连接时间短的应用，如聊天应用等。</p>
<blockquote>
<p><strong>AIO</strong></p>
</blockquote>
<p>新的IO2.0，即NIO2.0，jdk1.7开始应用，叫做异步不阻塞的IO。AIO引入异常通道的概念，采用了Proactor模式，简化了程序编写，一个有效的请求才启动一个线程，它的特点是先由操作系统完成后才通知服务端程序启动线程去处理，一般适用于连接数较多且连接时间长的应用。</p>
<p>几种IO的综合对比：</p>
<table>
<thead>
<tr>
<th></th>
<th>BIO</th>
<th>NIO</th>
<th>AIO</th>
</tr>
</thead>
<tbody><tr>
<td>客户端:线程数</td>
<td>1:1</td>
<td>M:1</td>
<td>M:0</td>
</tr>
<tr>
<td>阻塞类型</td>
<td>阻塞</td>
<td>非阻塞</td>
<td>非阻塞</td>
</tr>
<tr>
<td>同步类型</td>
<td>同步</td>
<td>同步</td>
<td>异步</td>
</tr>
<tr>
<td>编程难度</td>
<td>简单</td>
<td>非常复杂</td>
<td>复杂</td>
</tr>
<tr>
<td>调试难度</td>
<td>简单</td>
<td>复杂</td>
<td>复杂</td>
</tr>
<tr>
<td>可靠性</td>
<td>非常差</td>
<td>高</td>
<td>高</td>
</tr>
<tr>
<td>吞吐量</td>
<td>低</td>
<td>高</td>
<td>高</td>
</tr>
</tbody></table>
<p>java提供的NIO的api使用比较复杂，一般建议使用像netty这样的框架，而不要使用jdk自带的api。</p>
<p>参考资料：<a href="https://mp.weixin.qq.com/s?src=11&timestamp=1589383756&ver=2336&signature=NnEosAC2ZzCSQ8*vGWbXB91aszMNFn9lhC8kahomW3M6xDNKrl5M1qxxOMXbymBqqSn74DGOMLe-X9wApLLcz6mHB3e5Lpa55nqSu0xOkN71PZ2j8OGmXh4iy9jvDafQ&new=1" target="_blank" rel="noopener">关于java流的几个概念：IO、BIO、NIO、AIO，有几个人全知道？</a></p>
]]></content>
      <categories>
        <category>Java</category>
        <category>IO</category>
      </categories>
      <tags>
        <tag>IO</tag>
      </tags>
  </entry>
  <entry>
    <title>Redis面试题汇总</title>
    <url>/2020/05/13/Redis%E9%9D%A2%E8%AF%95%E9%A2%98%E6%B1%87%E6%80%BB/</url>
    <content><![CDATA[<h1 id="redis面试题汇总"><a href="#redis面试题汇总" class="headerlink" title="redis面试题汇总"></a>redis面试题汇总</h1><p>　　redis是一个基于内存的高性能key-value数据库，目前职场中对这方面的人才还是有较高的需求。今天W3Cschool为大家整理了一些关于Redis方面的经典面试题，希望可以帮到还在求职路上的童鞋们。</p>
<p>　　<strong>相关阅读：</strong></p>
<p>　　<a href="https://www.w3cschool.cn/redis/" target="_blank" rel="noopener">Reids教程</a></p>
<p>　　<a href="https://www.w3cschool.cn/redis_all_about/" target="_blank" rel="noopener">Redis开发运维实践指南</a></p>
<p>　　<a href="https://www.w3cschool.cn/hdclil/" target="_blank" rel="noopener">Redis 设计与实现</a></p>
<p>　　<strong>1、redis是什么？</strong></p>
<p>　　Redis是一个开源（BSD许可）的，内存中的数据结构存储系统，它可以用作数据库、缓存和消息中间件。</p>
<p>　　<strong>2、Redis有什么特点</strong></p>
<p>　　Redis是一个Key-Value类型的内存数据库，和memcached有点像，整个数据库都是在内存当中进行加载操作，定期通过异步操作把数据库数据flush到硬盘上进行保存。Redis的性能很高，可以处理超过10万次/秒的读写操作，是目前已知性能最快的Key-Value DB。</p>
<p>　　除了性能外，Redis还支持保存多种数据结构，此外单个value的最大限制是1GB，比memcached的1MB高太多了，因此Redis可以用来实现很多有用的功能，比方说用他的List来做FIFO双向链表，实现一个轻量级的高性 能消息队列服务，用他的Set可以做高性能的tag系统等等。另外Redis也可以对存入的Key-Value设置expire时间，因此也可以被当作一 个功能加强版的memcached来用。</p>
<p>　　当然，Redis也有缺陷，那就是是数据库容量受到物理内存的限制，不能用作海量数据的高性能读写，因此Redis比较适合那些局限在较小数据量的高性能操作和运算上。</p>
<p>**<br>**</p>
<p>　　<strong>3.使用redis有哪些好处？</strong></p>
<p>　　(1) 速度快，因为数据存在内存中，类似于HashMap，HashMap的优势就是查找和操作的时间复杂度都是O(1)</p>
<p>　　(2) 支持丰富数据类型，支持string，list，set，sorted set，hash</p>
<p>　　(3) 支持事务，操作都是原子性，所谓的原子性就是对数据的更改要么全部执行，要么全部不执行</p>
<p>　　(4) 丰富的特性：可用于缓存，消息，按key设置过期时间，过期后将会自动删除</p>
<p>　　<strong>4.redis相比memcached有哪些优势？</strong></p>
<p>　　(1) memcached所有的值均是简单的字符串，redis作为其替代者，支持更为丰富的数据类型</p>
<p>　　(2) redis的速度比memcached快很多 (3) redis可以持久化其数据</p>
<p>　　<strong>5.Memcache与Redis的区别都有哪些？</strong></p>
<p>　　1)、存储方式 Memecache把数据全部存在内存之中，断电后会挂掉，数据不能超过内存大小。 Redis有部份存在硬盘上，这样能保证数据的持久性。</p>
<p>　　2)、数据支持类型 Memcache对数据类型支持相对简单。 Redis有复杂的数据类型。</p>
<p>　　3)、使用底层模型不同 它们之间底层实现方式 以及与客户端之间通信的应用协议不一样。 Redis直接自己构建了VM 机制 ，因为一般的系统调用系统函数的话，会浪费一定的时间去移动和请求。</p>
<p>　　<strong>6.redis常见性能问题和解决方案：</strong></p>
<p>　　1).Master写内存快照，save命令调度rdbSave函数，会阻塞主线程的工作，当快照比较大时对性能影响是非常大的，会间断性暂停服务，所以Master最好不要写内存快照。</p>
<p>　　2).Master AOF持久化，如果不重写AOF文件，这个持久化方式对性能的影响是最小的，但是AOF文件会不断增大，AOF文件过大会影响Master重启的恢复速度。Master最好不要做任何持久化工作，包括内存快照和AOF日志文件，特别是不要启用内存快照做持久</p>
<p>　　化,如果数据比较关键，某个Slave开启AOF备份数据，策略为每秒同步一次。</p>
<p>　　3).Master调用BGREWRITEAOF重写AOF文件，AOF在重写的时候会占大量的CPU和内存资源，导致服务load过高，出现短暂服务暂停现象。</p>
<p>　　4). Redis主从复制的性能问题，为了主从复制的速度和连接的稳定性，Slave和Master最好在同一个局域网内</p>
<p>　　<strong>7. mySQL里有2000w数据，redis中只存20w的数据，如何保证redis中的数据都是热点数据</strong></p>
<p>　　相关知识：redis 内存数据集大小上升到一定大小的时候，就会施行数据淘汰策略（回收策略）。redis 提供 6种数据淘汰策略：</p>
<p>　　volatile-lru：从已设置过期时间的数据集（server.db[i].expires）中挑选最近最少使用的数据淘汰</p>
<p>　　volatile-ttl：从已设置过期时间的数据集（server.db[i].expires）中挑选将要过期的数据淘汰</p>
<p>　　volatile-random：从已设置过期时间的数据集（server.db[i].expires）中任意选择数据淘汰</p>
<p>　　allkeys-lru：从数据集（server.db[i].dict）中挑选最近最少使用的数据淘汰</p>
<p>　　allkeys-random：从数据集（server.db[i].dict）中任意选择数据淘汰</p>
<p>　　no-enviction（驱逐）：禁止驱逐数据</p>
<p>　　<strong>8.请用Redis和任意语言实现一段恶意登录保护的代码，限制1小时内每用户Id最多只能登录5次。具体登录函数或功能用空函数即可，不用详细写出。</strong></p>
<p>　　用列表实现:列表中每个元素代表登陆时间,只要最后的第5次登陆时间和现在时间差不超过1小时就禁止登陆.用Python写的代码如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#!&#x2F;usr&#x2F;bin&#x2F;env python3</span><br><span class="line">import redis  </span><br><span class="line">import sys  </span><br><span class="line">import time  </span><br><span class="line"> </span><br><span class="line">r &#x3D; redis.StrictRedis(host&#x3D;’127.0.0.1′, port&#x3D;6379, db&#x3D;0)  </span><br><span class="line">try:       </span><br><span class="line">    id &#x3D; sys.argv[1]</span><br><span class="line">except:      </span><br><span class="line">    print(‘input argument error’)    </span><br><span class="line">    sys.exit(0)  </span><br><span class="line">if r.llen(id) &gt;&#x3D; 5 and time.time() – float(r.lindex(id, 4)) &lt;&#x3D; 3600:      </span><br><span class="line">    print(“you are forbidden logining”)</span><br><span class="line">else:       </span><br><span class="line">    print(‘you are allowed to login’)    </span><br><span class="line">    r.lpush(id, time.time())    </span><br><span class="line">    # login_func()</span><br></pre></td></tr></table></figure>

<p>　　<strong>9.为什么redis需要把所有数据放到内存中?</strong></p>
<p>　　Redis为了达到最快的读写速度将数据都读到内存中，并通过异步的方式将数据写入磁盘。所以redis具有快速和数据持久化的特征。如果不将数据放在内存中，磁盘I/O速度为严重影响redis的性能。在内存越来越便宜的今天，redis将会越来越受欢迎。</p>
<p>　　如果设置了最大使用的内存，则数据已有记录数达到内存限值后不能继续插入新值。</p>
<p>　　<strong>10.Redis是单进程单线程的</strong></p>
<p>　　redis利用队列技术将并发访问变为串行访问，消除了传统数据库串行控制的开销</p>
<p>　　<strong>11.redis的并发竞争问题如何解决?</strong></p>
<p>　　Redis为单进程单线程模式，采用队列模式将并发访问变为串行访问。Redis本身没有锁的概念，Redis对于多个客户端连接并不存在竞争，但是在Jedis客户端对Redis进行并发访问时会发生连接超时、数据转换错误、阻塞、客户端关闭连接等问题，这些问题均是</p>
<p>　　由于客户端连接混乱造成。对此有2种解决方法：</p>
<p>　　1.客户端角度，为保证每个客户端间正常有序与Redis进行通信，对连接进行池化，同时对客户端读写Redis操作采用内部锁synchronized。</p>
<p>　　2.服务器角度，利用setnx实现锁。</p>
<p>　　注：对于第一种，需要应用程序自己处理资源的同步，可以使用的方法比较通俗，可以使用synchronized也可以使用lock；第二种需要用到Redis的setnx命令，但是需要注意一些问题。</p>
<p>　　<strong>12.redis事物的了解CAS(check-and-set 操作实现乐观锁 )?</strong></p>
<p>　　和众多其它数据库一样，Redis作为NoSQL数据库也同样提供了事务机制。在Redis中，MULTI/EXEC/DISCARD/WATCH这四个命令是我们实现事务的基石。相信对有关系型数据库开发经验的开发者而言这一概念并不陌生，即便如此，我们还是会简要的列出</p>
<p>　　Redis中</p>
<p>　　事务的实现特征：</p>
<p>　　1). 在事务中的所有命令都将会被串行化的顺序执行，事务执行期间，Redis不会再为其它客户端的请求提供任何服务，从而保证了事物中的所有命令被原子的执行。</p>
<p>　　2). 和关系型数据库中的事务相比，在Redis事务中如果有某一条命令执行失败，其后的命令仍然会被继续执行。</p>
<p>　　3). 我们可以通过MULTI命令开启一个事务，有关系型数据库开发经验的人可以将其理解为”BEGIN TRANSACTION”语句。在该语句之后执行的命令都将被视为事务之内的操作，最后我们可以通过执行EXEC/DISCARD命令来提交/回滚该事务内的所有操作。这两</p>
<p>　　个Redis命令可被视为等同于关系型数据库中的COMMIT/ROLLBACK语句。</p>
<p>　　4). 在事务开启之前，如果客户端与服务器之间出现通讯故障并导致网络断开，其后所有待执行的语句都将不会被服务器执行。然而如果网络中断事件是发生在客户端执行EXEC命令之后，那么该事务中的所有命令都会被服务器执行。</p>
<p>　　5). 当使用Append-Only模式时，Redis会通过调用系统函数write将该事务内的所有写操作在本次调用中全部写入磁盘。然而如果在写入的过程中出现系统崩溃，如电源故障导致的宕机，那么此时也许只有部分数据被写入到磁盘，而另外一部分数据却已经丢失。</p>
<p>　　Redis服务器会在重新启动时执行一系列必要的一致性检测，一旦发现类似问题，就会立即退出并给出相应的错误提示。此时，我们就要充分利用Redis工具包中提供的redis-check-aof工具，该工具可以帮助我们定位到数据不一致的错误，并将已经写入的部</p>
<p>　　分数据进行回滚。修复之后我们就可以再次重新启动Redis服务器了。</p>
<p>　　<strong>13.WATCH命令和基于CAS的乐观锁：</strong></p>
<p>　　在Redis的事务中，WATCH命令可用于提供CAS(check-and-set)功能。假设我们通过WATCH命令在事务执行之前监控了多个Keys，倘若在WATCH之后有任何Key的值发生了变化，EXEC命令执行的事务都将被放弃，同时返回Null multi-bulk应答以通知调用者事务</p>
<p>　　执行失败。例如，我们再次假设Redis中并未提供incr命令来完成键值的原子性递增，如果要实现该功能，我们只能自行编写相应的代码。其伪码如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">　　val &#x3D; GET mykey</span><br><span class="line">　　val &#x3D; val + 1</span><br><span class="line">　　SET mykey $val</span><br></pre></td></tr></table></figure>

<p>　　以上代码只有在单连接的情况下才可以保证执行结果是正确的，因为如果在同一时刻有多个客户端在同时执行该段代码，那么就会出现多线程程序中经常出现的一种错误场景–竞态争用(race condition)。比如，客户端A和B都在同一时刻读取了mykey的原有值，假设该值为10，此后两个客户端又均将该值加一后set回Redis服务器，这样就会导致mykey的结果为11，而不是我们认为的12。为了解决类似的问题，我们需要借助WATCH命令的帮助，见如下代码：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">　　WATCH mykey</span><br><span class="line">　　val &#x3D; GET mykey</span><br><span class="line">　　val &#x3D; val + 1</span><br><span class="line">　　MULTI</span><br><span class="line">　　SET mykey $val</span><br><span class="line">　　EXEC</span><br></pre></td></tr></table></figure>

<p>　　和此前代码不同的是，新代码在获取mykey的值之前先通过WATCH命令监控了该键，此后又将set命令包围在事务中，这样就可以有效的保证每个连接在执行EXEC之前，如果当前连接获取的mykey的值被其它连接的客户端修改，那么当前连接的EXEC命令将执行失败。这样调用者在判断返回值后就可以获悉val是否被重新设置成功。</p>
<p>**<br>**</p>
<p>　　<strong>14.redis持久化的几种方式</strong></p>
<p>　　1、快照（snapshots）</p>
<p>　　缺省情况情况下，Redis把数据快照存放在磁盘上的二进制文件中，文件名为dump.rdb。你可以配置Redis的持久化策略，例如数据集中每N秒钟有超过M次更新，就将数据写入磁盘；或者你可以手工调用命令SAVE或BGSAVE。</p>
<p>　　工作原理</p>
<p>　　． Redis forks.</p>
<p>　　． 子进程开始将数据写到临时RDB文件中。</p>
<p>　　． 当子进程完成写RDB文件，用新文件替换老文件。</p>
<p>　　． 这种方式可以使Redis使用copy-on-write技术。</p>
<p>　　2、AOF</p>
<p>　　快照模式并不十分健壮，当系统停止，或者无意中Redis被kill掉，最后写入Redis的数据就会丢失。这对某些应用也许不是大问题，但对于要求高可靠性的应用来说，</p>
<p>　　Redis就不是一个合适的选择。</p>
<p>　　Append-only文件模式是另一种选择。</p>
<p>　　你可以在配置文件中打开AOF模式</p>
<p>　　3、虚拟内存方式</p>
<p>　　当你的key很小而value很大时,使用VM的效果会比较好.因为这样节约的内存比较大.</p>
<p>　　当你的key不小时,可以考虑使用一些非常方法将很大的key变成很大的value,比如你可以考虑将key,value组合成一个新的value.</p>
<p>　　vm-max-threads这个参数,可以设置访问swap文件的线程数,设置最好不要超过机器的核数,如果设置为0,那么所有对swap文件的操作都是串行的.可能会造成比较长时间的延迟,但是对数据完整性有很好的保证.</p>
<p>　　自己测试的时候发现用虚拟内存性能也不错。如果数据量很大，可以考虑分布式或者其他数据库</p>
<p>　　<strong>15.redis的缓存失效策略和主键失效机制</strong></p>
<p>　　作为缓存系统都要定期清理无效数据，就需要一个主键失效和淘汰策略.</p>
<p>　　在Redis当中，有生存期的key被称为volatile。在创建缓存时，要为给定的key设置生存期，当key过期的时候（生存期为0），它可能会被删除。</p>
<p>　　1、影响生存时间的一些操作</p>
<p>　　生存时间可以通过使用 DEL 命令来删除整个 key 来移除，或者被 SET 和 GETSET 命令覆盖原来的数据，也就是说，修改key对应的value和使用另外相同的key和value来覆盖以后，当前数据的生存时间不同。</p>
<p>　　比如说，对一个 key 执行INCR命令，对一个列表进行LPUSH命令，或者对一个哈希表执行HSET命令，这类操作都不会修改 key 本身的生存时间。另一方面，如果使用RENAME对一个 key 进行改名，那么改名后的 key的生存时间和改名前一样。</p>
<p>　　RENAME命令的另一种可能是，尝试将一个带生存时间的 key 改名成另一个带生存时间的 another_key ，这时旧的 another_key (以及它的生存时间)会被删除，然后旧的 key 会改名为 another_key ，因此，新的 another_key 的生存时间也和原本的 key 一样。使用PERSIST命令可以在不删除 key 的情况下，移除 key 的生存时间，让 key 重新成为一个persistent key 。</p>
<p>　　2、如何更新生存时间</p>
<p>　　可以对一个已经带有生存时间的 key 执行EXPIRE命令，新指定的生存时间会取代旧的生存时间。过期时间的精度已经被控制在1ms之内，主键失效的时间复杂度是O（1），</p>
<p>　　EXPIRE和TTL命令搭配使用，TTL可以查看key的当前生存时间。设置成功返回 1；当 key 不存在或者不能为 key 设置生存时间时，返回 0 。</p>
<p>　　最大缓存配置</p>
<p>　　在 redis 中，允许用户设置最大使用内存大小</p>
<p>　　server.maxmemory</p>
<p>　　默认为0，没有指定最大缓存，如果有新的数据添加，超过最大内存，则会使redis崩溃，所以一定要设置。redis 内存数据集大小上升到一定大小的时候，就会实行数据淘汰策略。</p>
<p>　　redis 提供 6种数据淘汰策略：</p>
<p>　　． volatile-lru：从已设置过期时间的数据集（server.db[i].expires）中挑选最近最少使用的数据淘汰</p>
<p>　　． volatile-ttl：从已设置过期时间的数据集（server.db[i].expires）中挑选将要过期的数据淘汰</p>
<p>　　． volatile-random：从已设置过期时间的数据集（server.db[i].expires）中任意选择数据淘汰</p>
<p>　　． allkeys-lru：从数据集（server.db[i].dict）中挑选最近最少使用的数据淘汰</p>
<p>　　． allkeys-random：从数据集（server.db[i].dict）中任意选择数据淘汰</p>
<p>　　． no-enviction（驱逐）：禁止驱逐数据</p>
<p>　　注意这里的6种机制，volatile和allkeys规定了是对已设置过期时间的数据集淘汰数据还是从全部数据集淘汰数据，后面的lru、ttl以及random是三种不同的淘汰策略，再加上一种no-enviction永不回收的策略。</p>
<p>　  使用策略规则：</p>
<p>　　1、如果数据呈现幂律分布，也就是一部分数据访问频率高，一部分数据访问频率低，则使用allkeys-lru</p>
<p>　　2、如果数据呈现平等分布，也就是所有的数据访问频率都相同，则使用allkeys-random</p>
<p>　　三种数据淘汰策略：</p>
<p>　　ttl和random比较容易理解，实现也会比较简单。主要是Lru最近最少使用淘汰策略，设计上会对key 按失效时间排序，然后取最先失效的key进行淘汰。</p>
<p>　　以上就是W3Cschool为大家带来的redis面试题汇总，希望对大家有所帮助。</p>
]]></content>
      <categories>
        <category>Redis</category>
      </categories>
      <tags>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title>Redis分布式锁正确的实现方法</title>
    <url>/2020/05/13/Redis%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81%E6%AD%A3%E7%A1%AE%E7%9A%84%E5%AE%9E%E7%8E%B0%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<h1 id="Redis分布式锁正确的实现方法"><a href="#Redis分布式锁正确的实现方法" class="headerlink" title="Redis分布式锁正确的实现方法"></a>Redis分布式锁正确的实现方法</h1><p>分布式锁一般有数据库乐观锁、基于Redis的分布式锁以及基于ZooKeeper的分布式锁三种实现方式，而本文将为大家带来的就是第二种基于Redis的分布式锁正确的实现方法，希望对大家会有所帮助。</p>
<p><strong>可靠性</strong></p>
<p>首先，想要保证分布式锁可以使用，下面这四个条件是必须要满足的：</p>
<p>1、互斥性。在任意时刻，只有一个客户端能持有锁。</p>
<p>2、不会发生死锁。即使有一个客户端在持有锁的期间崩溃而没有主动解锁，也能保证后续其他客户端能加锁。</p>
<p>3、具有容错性。只要大部分的Redis节点正常运行，客户端就可以加锁和解锁。</p>
<p>4、解铃还须系铃人。加锁和解锁必须是同一个客户端，客户端自己不能把别人加的锁给解了。</p>
<p><strong>代码实现</strong></p>
<p>引入Jedis开源组件</p>
<p>首先我们要通过Maven引入Jedis开源组件，在pom.xml文件加入下面的代码：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>redis.clients<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jedis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.9.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>加锁代码</strong></p>
<p><strong>正确代码</strong></p>
<p>Talk is cheap, show me the code。先展示代码，再带大家慢慢解释为什么这样实现：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RedisTool</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String LOCK_SUCCESS = <span class="string">"OK"</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String SET_IF_NOT_EXIST = <span class="string">"NX"</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String SET_WITH_EXPIRE_TIME = <span class="string">"PX"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 尝试获取分布式锁</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> jedis Redis客户端</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> lockKey 锁</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> requestId 请求标识</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> expireTime 超期时间 单位毫秒</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 是否获取成功</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">tryGetDistributedLock</span><span class="params">(Jedis jedis, String lockKey, String requestId, <span class="keyword">int</span> expireTime)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        String result = jedis.set(lockKey, requestId, SET_IF_NOT_EXIST, SET_WITH_EXPIRE_TIME, expireTime);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (LOCK_SUCCESS.equals(result)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>可以看到，我们加锁就一行代码：jedis.set(String key, String value, String nxxx, String expx, int time)，这个set()方法一共有五个形参：</p>
<p>第一个为key，我们使用key来当锁，因为key是唯一的。</p>
<p>第二个为value，我们传的是requestId，很多童鞋可能不明白，有key作为锁不就够了吗，为什么还要用到value？原因就是我们在上面讲到可靠性时，分布式锁要满足第四个条件解铃还须系铃人，通过给value赋值为requestId，我们就知道这把锁是哪个请求加的了，在解锁的时候就可以有依据。requestId可以使用UUID.randomUUID().toString()方法生成。</p>
<p>第三个为nxxx，这个参数我们填的是NX，意思是SET IF NOT EXIST，即当key不存在时，我们进行set操作；若key已经存在，则不做任何操作；</p>
<p>第四个为expx，这个参数我们传的是PX，意思是我们要给这个key加一个过期的设置，具体时间由第五个参数决定。</p>
<p>第五个为time，与第四个参数相呼应，代表key的过期时间。</p>
<p>总的来说，执行上面的set()方法就只会导致两种结果：</p>
<ol>
<li><p>当前没有锁（key不存在），那么就进行加锁操作，并对锁设置个有效期，同时value表示加锁的客户端。</p>
</li>
<li><p>已有锁存在，不做任何操作。</p>
</li>
</ol>
<p><strong>jedis版本号升级3.2.0后</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>redis.clients<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jedis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.2.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>代码修改为：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 尝试获取分布式锁</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> jedis      Redis客户端</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> lockKey    锁</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> requestId  请求标识</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> expireTime 超期时间 单位毫秒</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 是否获取成功</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">tryGetDistributedLock</span><span class="params">(Jedis jedis, String lockKey, String requestId, <span class="keyword">int</span> expireTime)</span> </span>&#123;</span><br><span class="line">        SetParams setParams = SetParams.setParams().px(expireTime).nx();</span><br><span class="line">        <span class="comment">//String result = jedis.set(lockKey, requestId, SET_IF_NOT_EXIST, SET_WITH_EXPIRE_TIME, expireTime);</span></span><br><span class="line">        String result = jedis.set(lockKey, requestId, setParams);</span><br><span class="line">        <span class="keyword">if</span> (LOCK_SUCCESS.equals(result)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p><strong>错误示例1</strong></p>
<p>比较常见的错误示例就是使用jedis.setnx()和jedis.expire()组合实现加锁，代码如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">wrongGetLock1</span><span class="params">(Jedis jedis, String lockKey, String requestId, <span class="keyword">int</span> expireTime)</span> </span>&#123;</span><br><span class="line">    Long result = jedis.setnx(lockKey, requestId);</span><br><span class="line">    <span class="keyword">if</span> (result == <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="comment">// 若在这里程序突然崩溃，则无法设置过期时间，将发生死锁</span></span><br><span class="line">        jedis.expire(lockKey, expireTime);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>setnx()方法作用就是SET IF NOT EXIST，expire()方法就是给锁加一个过期时间。乍一看好像和前面的set()方法结果一样，然而由于这是两条Redis命令，不具有原子性，如果程序在执行完setnx()之后突然崩溃，导致锁没有设置过期时间。那么将会发生死锁。网上之所以有人这样实现，是因为低版本的jedis并不支持多参数的set()方法。</p>
<p><strong>错误示例2</strong></p>
<p>这一种错误示例就比较难以发现问题，而且实现也比较复杂。实现思路：使用jedis.setnx()命令实现加锁，其中key是锁，value是锁的过期时间。执行过程：1. 通过setnx()方法尝试加锁，如果当前锁不存在，返回加锁成功。2. 如果锁已经存在则获取锁的过期时间，和当前时间比较，如果锁已经过期，则设置新的过期时间，返回加锁成功。代码如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">wrongGetLock2</span><span class="params">(Jedis jedis, String lockKey, <span class="keyword">int</span> expireTime)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">long</span> expires = System.currentTimeMillis() + expireTime;</span><br><span class="line">    String expiresStr = String.valueOf(expires);</span><br><span class="line">    <span class="comment">// 如果当前锁不存在，返回加锁成功</span></span><br><span class="line">    <span class="keyword">if</span> (jedis.setnx(lockKey, expiresStr) == <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 如果锁存在，获取锁的过期时间</span></span><br><span class="line">    String currentValueStr = jedis.get(lockKey);</span><br><span class="line">    <span class="keyword">if</span> (currentValueStr != <span class="keyword">null</span> &amp;&amp; Long.parseLong(currentValueStr) &lt; System.currentTimeMillis()) &#123;</span><br><span class="line">        <span class="comment">// 锁已过期，获取上一个锁的过期时间，并设置现在锁的过期时间</span></span><br><span class="line">        String oldValueStr = jedis.getSet(lockKey, expiresStr);</span><br><span class="line">        <span class="keyword">if</span> (oldValueStr != <span class="keyword">null</span> &amp;&amp; oldValueStr.equals(currentValueStr)) &#123;</span><br><span class="line">            <span class="comment">// 考虑多线程并发的情况，只有一个线程的设置值和当前值相同，它才有权利加锁</span></span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 其他情况，一律返回加锁失败</span></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>这段代码的错误之处在于：</p>
<ol>
<li><p>由于是客户端自己生成过期时间，所以需要强制要求分布式下每个客户端的时间必须同步。</p>
</li>
<li><p>当锁过期的时候，如果多个客户端同时执行jedis.getSet()方法，那么虽然最终只有一个客户端可以加锁，但是这个客户端的锁的过期时间可能被其他客户端覆盖。</p>
</li>
<li><p>锁不具备拥有者标识，即任何客户端都可以解锁。</p>
</li>
</ol>
<p><strong>解锁代码</strong></p>
<p><strong>正确代码</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RedisTool</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Long RELEASE_SUCCESS = <span class="number">1L</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 释放分布式锁</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> jedis Redis客户端</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> lockKey 锁</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> requestId 请求标识</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 是否释放成功</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">releaseDistributedLock</span><span class="params">(Jedis jedis, String lockKey, String requestId)</span> </span>&#123;</span><br><span class="line">        String script = <span class="string">"if redis.call('get', KEYS[1]) == ARGV[1] then return redis.call('del', KEYS[1]) else return 0 end"</span>;</span><br><span class="line">        Object result = jedis.eval(script, Collections.singletonList(lockKey), Collections.singletonList(requestId));</span><br><span class="line">        <span class="keyword">if</span> (RELEASE_SUCCESS.equals(result)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>可以看到，我们解锁只需要两行代码就搞定了！第一行代码，我们写了一个简单的Lua脚本代码，上一次见到这个编程语言还是在《黑客与画家》里，没想到这次居然用上了。第二行代码，我们将Lua代码传到jedis.eval()方法里，并使参数KEYS[1]赋值为lockKey，ARGV[1]赋值为requestId。eval()方法是将Lua代码交给Redis服务端执行。</p>
<p>那么这段Lua代码的功能是什么呢？其实很简单，首先获取锁对应的value值，检查是否与requestId相等，如果相等则删除锁（解锁）。那么为什么要使用Lua语言来实现呢？因为要确保上述操作是原子性的。关于非原子性会带来什么问题，可以阅读【解锁代码-错误示例2】 。那么为什么执行eval()方法可以确保原子性，源于Redis的特性，简单来说，就是在eval命令执行Lua代码的时候，Lua代码将被当成一个命令去执行，并且直到eval命令执行完成，Redis才会执行其他命令。</p>
<p><strong>错误示例1</strong></p>
<p>最常见的解锁代码就是直接使用jedis.del()方法删除锁，这种不先判断锁的拥有者而直接解锁的方式，会导致任何客户端都可以随时进行解锁，即使这把锁不是它的。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">wrongReleaseLock1</span><span class="params">(Jedis jedis, String lockKey)</span> </span>&#123;</span><br><span class="line">    jedis.del(lockKey);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p><strong>错误示例2</strong></p>
<p>这种解锁代码乍一看也是没问题，甚至我之前也差点这样实现，与正确姿势差不多，唯一区别的是分成两条命令去执行，代码如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">wrongReleaseLock2</span><span class="params">(Jedis jedis, String lockKey, String requestId)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 判断加锁与解锁是不是同一个客户端</span></span><br><span class="line">    <span class="keyword">if</span> (requestId.equals(jedis.get(lockKey))) &#123;</span><br><span class="line">        <span class="comment">// 若在此时，这把锁突然不是这个客户端的，则会误解锁</span></span><br><span class="line">        jedis.del(lockKey);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>如代码注释，这个代码的问题在于如果调用jedis.del()方法的时候，这把锁已经不属于当前客户端的时候会解除他人加的锁。那么是否真的有这种场景？答案是肯定的，比如客户端A加锁，一段时间之后客户端A解锁，在执行jedis.del()之前，锁突然过期了，此时客户端B尝试加锁成功，然后客户端A再执行del()方法，则将客户端B的锁给解除了。</p>
<p><strong>总结</strong></p>
<p>本文介绍的Redis分布式锁都是用JAVA实现，对于加锁和解锁的方法也分别给出了错误示例供大家参考。其实想要通过Redis实现分布式锁难度并不高，只要能满足上面给出的十个可靠性条件即可。</p>
<p>参考资料：<a href="https://www.w3cschool.cn/redis/redis-yj3f2p0c.html" target="_blank" rel="noopener">Redis分布式锁正确的实现方法</a></p>
]]></content>
  </entry>
  <entry>
    <title>排序算法</title>
    <url>/2020/05/12/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/</url>
    <content><![CDATA[<p>​    排序算法是最经典的算法知识。因为其实现代码短，应该广，在面试中经常会问到排序算法及其相关的问题。一般在面试中最常考的是快速排序和归并排序等基本的排序算法，并且经常要求现场手写基本的排序算法。如果这些问题回答不好，估计面试就凉凉了。所以熟练掌握排序算法思想及其特点并能够熟练地手写代码至关重要。</p>
<p>​    下面介绍几种常见的排序算法：冒泡排序、选择排序、插入排序、归并排序、快速排序、希尔排序、堆排序、计数排序、桶排序、基数排序的思想，其代码均采用Java实现。</p>
<h2 id="1-冒泡排序"><a href="#1-冒泡排序" class="headerlink" title="1. 冒泡排序"></a><strong>1. 冒泡排序</strong></h2><p>冒泡排序是一种简单的排序算法。它重复地走访过要排序的数列，一次比较两个元素，如果它们的顺序错误就把它们交换过来。走访数列的工作是重复地进行直到没有再需要交换，也就是说该数列已经排序完成。这个算法的名字由来是因为越小的元素会经由交换慢慢“浮”到数列的顶端。</p>
<h2 id="算法描述"><a href="#算法描述" class="headerlink" title="算法描述"></a><strong>算法描述</strong></h2><ol>
<li>比较相邻的元素。如果第一个比第二个大，就交换它们两个；</li>
<li>对每一对相邻元素作同样的工作，从开始第一对到结尾的最后一对，这样在最后的元素应该会是最大的数；</li>
<li>针对所有的元素重复以上的步骤，除了最后一个；</li>
<li>重复步骤1~3，直到排序完成。</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 冒泡排序</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;</span></span><br><span class="line"><span class="comment">     * 冒泡排序是一种简单的排序算法。它重复地走访过要排序的数列，一次比较两个元素，如果它们的顺序错误就把它们交换过来。</span></span><br><span class="line"><span class="comment">     * 走访数列的工作是重复地进行直到没有再需要交换，也就是说该数列已经排序完成。这个算法的名字由来是因为越小的元素会经由交换慢慢“浮”到数列的顶端。</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;</span></span><br><span class="line"><span class="comment">     * 算法描述</span></span><br><span class="line"><span class="comment">     * 比较相邻的元素。如果第一个比第二个大，就交换它们两个；</span></span><br><span class="line"><span class="comment">     * 对每一对相邻元素作同样的工作，从开始第一对到结尾的最后一对，这样在最后的元素应该会是最大的数；</span></span><br><span class="line"><span class="comment">     * 针对所有的元素重复以上的步骤，除了最后一个；</span></span><br><span class="line"><span class="comment">     * 重复步骤1~3，直到排序完成。</span></span><br><span class="line"><span class="comment">     * 稳定性</span></span><br><span class="line"><span class="comment">     * 在相邻元素相等时，它们并不会交换位置，所以，冒泡排序是稳定排序。</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;</span></span><br><span class="line"><span class="comment">     * 适用场景</span></span><br><span class="line"><span class="comment">     * 冒泡排序思路简单，代码也简单，特别适合小数据的排序。但是，由于算法复杂度较高，在数据量大的时候不适合使用。</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">bubbleSort</span><span class="params">(<span class="keyword">int</span>[] arr)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> temp = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = arr.length - <span class="number">1</span>; i &gt; <span class="number">0</span>; i--) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; i; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (arr[j] &gt; arr[j + <span class="number">1</span>]) &#123;</span><br><span class="line">                    temp = arr[j + <span class="number">1</span>];</span><br><span class="line">                    arr[j + <span class="number">1</span>] = arr[j];</span><br><span class="line">                    arr[j] = temp;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<h2 id="稳定性"><a href="#稳定性" class="headerlink" title="稳定性"></a><strong>稳定性</strong></h2><p>在相邻元素相等时，它们并不会交换位置，所以，冒泡排序是稳定排序。</p>
<h2 id="适用场景"><a href="#适用场景" class="headerlink" title="适用场景"></a><strong>适用场景</strong></h2><p>冒泡排序思路简单，代码也简单，特别适合小数据的排序。但是，由于算法复杂度较高，在数据量大的时候不适合使用。</p>
<h2 id="2-选择排序"><a href="#2-选择排序" class="headerlink" title="2. 选择排序"></a><strong>2. 选择排序</strong></h2><p>选择排序是一种简单直观的排序算法，它也是一种交换排序算法，和冒泡排序有一定的相似度，可以认为选择排序是冒泡排序的一种改进。</p>
<h2 id="算法描述-1"><a href="#算法描述-1" class="headerlink" title="算法描述"></a><strong>算法描述</strong></h2><ol>
<li>在未排序序列中找到最小（大）元素，存放到排序序列的起始位置</li>
<li>从剩余未排序元素中继续寻找最小（大）元素，然后放到已排序序列的末尾。</li>
<li>重复第二步，直到所有元素均排序完毕。</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 选择排序</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;</span></span><br><span class="line"><span class="comment">     * 选择排序是一种简单直观的排序算法，它也是一种交换排序算法，和冒泡排序有一定的相似度，可以认为选择排序是冒泡排序的一种改进。</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;</span></span><br><span class="line"><span class="comment">     * 算法描述</span></span><br><span class="line"><span class="comment">     * 在未排序序列中找到最小（大）元素，存放到排序序列的起始位置</span></span><br><span class="line"><span class="comment">     * 从剩余未排序元素中继续寻找最小（大）元素，然后放到已排序序列的末尾。</span></span><br><span class="line"><span class="comment">     * 重复第二步，直到所有元素均排序完毕。</span></span><br><span class="line"><span class="comment">     * 稳定性</span></span><br><span class="line"><span class="comment">     * 用数组实现的选择排序是不稳定的，用链表实现的选择排序是稳定的。</span></span><br><span class="line"><span class="comment">     * 不过，一般提到排序算法时，大家往往会默认是数组实现，所以选择排序是不稳定的。</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;</span></span><br><span class="line"><span class="comment">     * 适用场景</span></span><br><span class="line"><span class="comment">     * 选择排序实现也比较简单，并且由于在各种情况下复杂度波动小，因此一般是优于冒泡排序的。</span></span><br><span class="line"><span class="comment">     * 在所有的完全交换排序中，选择排序也是比较不错的一种算法。</span></span><br><span class="line"><span class="comment">     * 但是，由于固有的O(n2)复杂度，选择排序在海量数据面前显得力不从心。因此，它适用于简单数据排序。</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> arr</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">selectSort</span><span class="params">(<span class="keyword">int</span>[] arr)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//临时变量，交换值时临时存储数据</span></span><br><span class="line">        <span class="keyword">int</span> temp = <span class="number">0</span>;</span><br><span class="line">        <span class="comment">//最小数值对应的坐标</span></span><br><span class="line">        <span class="keyword">int</span> min = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arr.length - <span class="number">1</span>; i++) &#123;</span><br><span class="line">            min = i;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = i + <span class="number">1</span>; j &lt; arr.length; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (arr[min] &gt; arr[j]) &#123;</span><br><span class="line">                    min = j;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (i != min) &#123;</span><br><span class="line">                temp = arr[min];</span><br><span class="line">                arr[min] = arr[i];</span><br><span class="line">                arr[i] = temp;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<h2 id="稳定性-1"><a href="#稳定性-1" class="headerlink" title="稳定性"></a><strong>稳定性</strong></h2><p>用数组实现的选择排序是不稳定的，用链表实现的选择排序是稳定的。<br>不过，一般提到排序算法时，大家往往会默认是数组实现，所以选择排序是不稳定的。</p>
<h2 id="适用场景-1"><a href="#适用场景-1" class="headerlink" title="适用场景"></a><strong>适用场景</strong></h2><p>选择排序实现也比较简单，并且由于在各种情况下复杂度波动小，因此一般是优于冒泡排序的。在所有的完全交换排序中，选择排序也是比较不错的一种算法。但是，由于固有的O(n2)复杂度，选择排序在海量数据面前显得力不从心。因此，它适用于简单数据排序。</p>
<h2 id="3-插入排序"><a href="#3-插入排序" class="headerlink" title="3. 插入排序"></a><strong>3. 插入排序</strong></h2><p>插入排序是一种简单直观的排序算法。它的工作原理是通过构建有序序列，对于未排序数据，在已排序序列中从后向前扫描，找到相应位置并插入。</p>
<h2 id="算法描述-2"><a href="#算法描述-2" class="headerlink" title="算法描述"></a><strong>算法描述</strong></h2><ol>
<li>把待排序的数组分成已排序和未排序两部分，初始的时候把第一个元素认为是已排好序的。</li>
<li>从第二个元素开始，在已排好序的子数组中寻找到该元素合适的位置并插入该位置。</li>
<li>重复上述过程直到最后一个元素被插入有序子数组中。</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 插入排序</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;</span></span><br><span class="line"><span class="comment">     * 插入排序是一种简单直观的排序算法。它的工作原理是通过构建有序序列，对于未排序数据，在已排序序列中从后向前扫描，找到相应位置并插入。</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;</span></span><br><span class="line"><span class="comment">     * 算法描述</span></span><br><span class="line"><span class="comment">     * 把待排序的数组分成已排序和未排序两部分，初始的时候把第一个元素认为是已排好序的。</span></span><br><span class="line"><span class="comment">     * 从第二个元素开始，在已排好序的子数组中寻找到该元素合适的位置并插入该位置。</span></span><br><span class="line"><span class="comment">     * 重复上述过程直到最后一个元素被插入有序子数组中。</span></span><br><span class="line"><span class="comment">     * 稳定性</span></span><br><span class="line"><span class="comment">     * 由于只需要找到不大于当前数的位置而并不需要交换，因此，直接插入排序是稳定的排序方法。</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;</span></span><br><span class="line"><span class="comment">     * 适用场景</span></span><br><span class="line"><span class="comment">     * 插入排序由于O( n2 )的复杂度，在数组较大的时候不适用。但是，在数据比较少的时候，是一个不错的选择，一般做为快速排序的扩充。</span></span><br><span class="line"><span class="comment">     * 例如，在STL的sort算法和stdlib的qsort算法中，都将插入排序作为快速排序的补充，用于少量元素的排序。</span></span><br><span class="line"><span class="comment">     * 又如，在JDK 7 java.util.Arrays所用的sort方法的实现中，当待排数组长度小于47时，会使用插入排序。</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">insertSort</span><span class="params">(<span class="keyword">int</span>[] arr)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">            <span class="comment">//当前带排序的值</span></span><br><span class="line">            <span class="keyword">int</span> value = arr[i];</span><br><span class="line">            <span class="comment">//位置指针，初始指向当前位置</span></span><br><span class="line">            <span class="keyword">int</span> position = i;</span><br><span class="line">            <span class="keyword">while</span> (position &gt; <span class="number">0</span> &amp;&amp; arr[position - <span class="number">1</span>] &gt; value) &#123;</span><br><span class="line">                arr[position] = arr[position - <span class="number">1</span>];</span><br><span class="line">                position--;</span><br><span class="line">            &#125;</span><br><span class="line">            arr[position] = value;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<h2 id="稳定性-2"><a href="#稳定性-2" class="headerlink" title="稳定性"></a><strong>稳定性</strong></h2><p>由于只需要找到不大于当前数的位置而并不需要交换，因此，直接插入排序是稳定的排序方法。</p>
<h2 id="适用场景-2"><a href="#适用场景-2" class="headerlink" title="适用场景"></a><strong>适用场景</strong></h2><p>插入排序由于O( n2 )的复杂度，在数组较大的时候不适用。但是，在数据比较少的时候，是一个不错的选择，一般做为快速排序的扩充。例如，在STL的sort算法和stdlib的qsort算法中，都将插入排序作为快速排序的补充，用于少量元素的排序。又如，在JDK 7 java.util.Arrays所用的sort方法的实现中，当待排数组长度小于47时，会使用插入排序。</p>
<p>参考文章：<a href="https://zhuanlan.zhihu.com/p/42586566" target="_blank" rel="noopener">[算法总结] 十大排序算法</a></p>
]]></content>
      <categories>
        <category>算法与数据结构</category>
      </categories>
      <tags>
        <tag>算法与数据结构</tag>
      </tags>
  </entry>
  <entry>
    <title>CAP定理和BASE理论</title>
    <url>/2020/05/12/CAP%E5%AE%9A%E7%90%86%E5%92%8CBASE%E7%90%86%E8%AE%BA/</url>
    <content><![CDATA[<h3 id="CAP定理"><a href="#CAP定理" class="headerlink" title="CAP定理"></a>CAP定理</h3><blockquote>
<p>2000 年 7 月，加州大学伯克利分校的 Eric Brewer 教授在 ACM PODC 会议上提出 CAP 猜想。2年后，麻省理工学院的 Seth Gilbert 和 Nancy Lynch 从理论上证明了 CAP。之后，CAP 理论正式成为分布式计算领域的公认定理。</p>
</blockquote>
<blockquote>
<p>CAP 理论为：一个分布式系统最多只能同时满足一致性（Consistency）、可用性（Availability）和分区容错性（Partition tolerance）这三项中的两项。</p>
</blockquote>
<ul>
<li><strong>一致性(Consistency)</strong>： 一致性指 (all nodes see the same data at the same time)，即更新操作成功并返回客户端完成后，所有节点在同一时间的数据完全一致。</li>
<li><strong>可用性(Availability)</strong>： 可用性指(Reads and writes always succeed)，即服务一直可用，而且是正常响应时间。</li>
<li><strong>分区容错性(Partition tolerance)</strong>： 分区容错性指(the system continues to operate despite arbitrary message loss or failure of part of the system)，即分布式系统在遇到某节点或网络分区故障的时候，仍然能够对外提供满足一致性和可用性的服务。</li>
</ul>
<h3 id="CAP-权衡"><a href="#CAP-权衡" class="headerlink" title="CAP 权衡"></a>CAP 权衡</h3><blockquote>
<p>通过 CAP 理论，我们知道无法同时满足一致性、可用性和分区容错性这三个特性，那要舍弃哪个呢？</p>
</blockquote>
<p>对于多数大型互联网应用的场景，主机众多、部署分散，而且现在的集群规模越来越大，所以节点故障、网络故障是常态，而且要保证服务可用性达到 N 个 9，即保证 P 和 A，舍弃C（退而求其次保证最终一致性）。虽然某些地方会影响客户体验，但没达到造成用户流程的严重程度。</p>
<p>对于涉及到钱财这样不能有一丝让步的场景，C 必须保证。网络发生故障宁可停止服务，这是保证 CA，舍弃 P。貌似这几年国内银行业发生了不下 10 起事故，但影响面不大，报道也不多，广大群众知道的少。还有一种是保证 CP，舍弃 A。例如网络故障是只读不写。</p>
<p>孰优孰略，没有定论，只能根据场景定夺，适合的才是最好的。</p>
<h3 id="BASE-理论"><a href="#BASE-理论" class="headerlink" title="BASE 理论"></a>BASE 理论</h3><blockquote>
<p>eBay 的架构师 Dan Pritchett 源于对大规模分布式系统的实践总结，在 ACM 上发表文章提出 BASE 理论，BASE 理论是对 CAP 理论的延伸，核心思想是即使无法做到强一致性（Strong Consistency，CAP 的一致性就是强一致性），但应用可以采用适合的方式达到最终一致性（Eventual Consitency）。</p>
</blockquote>
<ul>
<li><p><strong>基本可用(Basically Available)</strong>： 基本可用是指分布式系统在出现故障的时候，允许损失部分可用性，即保证核心可用。电商大促时，为了应对访问量激增，部分用户可能会被引导到降级页面，服务层也可能只提供降级服务。这就是损失部分可用性的体现。</p>
</li>
<li><p><strong>软状态(Soft State)</strong>： 软状态是指允许系统存在中间状态，而该中间状态不会影响系统整体可用性。分布式存储中一般一份数据至少会有三个副本，允许不同节点间副本同步的延时就是软状态的体现。MySQL Replication 的异步复制也是一种体现。</p>
</li>
<li><p><strong>最终一致性(Eventual Consistency)</strong>： 最终一致性是指系统中的所有数据副本经过一定时间后，最终能够达到一致的状态。弱一致性和强一致性相反，最终一致性是弱一致性的一种特殊情况。</p>
<h3 id="ACID-和-BASE-的区别与联系"><a href="#ACID-和-BASE-的区别与联系" class="headerlink" title="ACID 和 BASE 的区别与联系"></a>ACID 和 BASE 的区别与联系</h3><p>ACID 是传统数据库常用的设计理念，追求强一致性模型。BASE 支持的是大型分布式系统，提出通过牺牲强一致性获得高可用性。</p>
</li>
</ul>
<p>ACID 和 BASE 代表了两种截然相反的设计哲学，在分布式系统设计的场景中，系统组件对一致性要求是不同的，因此 ACID 和 BASE 又会结合使用。</p>
]]></content>
      <categories>
        <category>分布式</category>
      </categories>
      <tags>
        <tag>分布式</tag>
      </tags>
  </entry>
  <entry>
    <title>Java脑图整理</title>
    <url>/2020/05/12/Java%E8%84%91%E5%9B%BE%E6%95%B4%E7%90%86/</url>
    <content><![CDATA[<p><strong>GC2019.mmap</strong> 链接: <a href="https://pan.baidu.com/s/1MYrxGkAwKRXR85-FwKocIQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1MYrxGkAwKRXR85-FwKocIQ</a>  密码: f1ra</p>
<p><strong>mysql_zhouyang_yuan.mmap</strong> 链接: <a href="https://pan.baidu.com/s/1l3eM_fgqYUeDeam3nh6_3g" target="_blank" rel="noopener">https://pan.baidu.com/s/1l3eM_fgqYUeDeam3nh6_3g</a>  密码: 74bd</p>
<p><strong>MySQL高级19v04.mmap</strong> 链接: <a href="https://pan.baidu.com/s/1p0mxixZODzwnSaocBNu-RA" target="_blank" rel="noopener">https://pan.baidu.com/s/1p0mxixZODzwnSaocBNu-RA</a>  密码: 1sc0</p>
<p><strong>Docker.mmap</strong> 链接: <a href="https://pan.baidu.com/s/1aOt532IMqQsr2hIG4ndPmw" target="_blank" rel="noopener">https://pan.baidu.com/s/1aOt532IMqQsr2hIG4ndPmw</a>  密码: i02f</p>
<p><strong>尚硅谷SpringCloud第2季2020.3.2.mmap</strong> 链接: <a href="https://pan.baidu.com/s/1-8e2d1QOBt4nVo1izOZuSw" target="_blank" rel="noopener">https://pan.baidu.com/s/1-8e2d1QOBt4nVo1izOZuSw</a>  密码: baug</p>
]]></content>
      <categories>
        <category>脑图</category>
      </categories>
      <tags>
        <tag>脑图</tag>
      </tags>
  </entry>
  <entry>
    <title>Java集合时间复杂度</title>
    <url>/2020/05/12/Java%E9%9B%86%E5%90%88%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6/</url>
    <content><![CDATA[<p>List<br>ArrayList LinkedList<br>Arraylist 可增长的数组长度 查询快 get（） set（） 常数级<br>插入和现有所有项的删除代价昂贵 除非在表的末端</p>
<p>ArrayList 是线性表（数组）<br>get() 直接读取第几个下标，复杂度 O(1)<br>add(E) 添加元素，直接在后面添加，复杂度O（1）<br>add(index, E) 添加元素，在第几个元素后面插入，后面的元素需要向后移动，复杂度O（n）<br>remove（）删除元素，后面的元素需要逐个移动，复杂度O（n）</p>
<p>总结：查 O（1） 增 末尾0（1）中间0（n） 删0（n）<br>移动是消耗时间复杂度的</p>
<p>LinkedList 双链表 删快<br>新项的插入和现有项的删除都是非常的快<br>在表的前端添加和删除都是常数级<br>addFrist  removeFrist  addLast  removeLast  getFirst  getLast<br>但是不容易做索引</p>
<p>LinkedList 是链表的操作<br>get() 获取第几个元素，依次遍历，复杂度O(n)<br>add(E) 添加到末尾，复杂度O(1)<br>add(index, E) 添加第几个元素后，需要先查找到第几个元素，直接指针指向操作，复杂度O(n)<br>remove（）删除元素，直接指针指向操作，复杂度O(1)</p>
<p>总结：查 O（n） 增 末尾O（1）中间O（n） 删O（1）</p>
<p>Set集合有三个常见的实现类：HashSet，TreeSet，LinkedHashSet。<br>简单的说，如果你关注性能，应该使用HashSet；<br>如果你需要一个有序的Set集合，应该使用TreeSet；<br>如果你需要一个Set集合保存了原始的元素插入顺序，应该使用LinkedHashSet。</p>
<p>HashSet是基于散列表实现的，元素没有顺序；add、remove、contains方法的时间复杂度为O(1)。(contains为false时，就直接往集合里存)<br>总结：查 O（1） 增 O（1） 删O（1）</p>
<p>TreeSet是基于树实现的（红黑树），元素是有序的；add、remove、contains方法的时间复杂度为O(log (n))(contains为false时，插入前需要重新排序)。</p>
<p>总结：查 O（log n） 增 O（log n） 删O（log n）<br>因为元素是有序的，它提供了若干个相关方法如first(), last(), headSet(), tailSet()等；<br>LinkedHashSet介于HashSet和TreeSet之间，是基于哈希表和链表实现的，支持元素的插入顺序；基本方法的时间复杂度为O(1)；</p>
<p>待定<br>总结：查 O（1） 增 O（1） 删O（1）</p>
<p>map集合有三个常见的实现类：HashMap，TreeMap，LinkedHashMap。</p>
<p>TreeMap基于红黑树（一种自平衡二叉查找树）实现的，时间复杂度平均能达到O(log n)。<br>HashMap是基于散列表实现的，时间复杂度平均能达到O(1)。正常是O(1)到O（n） jdk1.8添加了 红黑树 是 O（log n）</p>
<p>TreeMap的get操作的时间复杂度是O(log(n))的，相比于HashMap的O(1)还是差不少的。<br>LinkedHashMap的出现就是为了平衡这些因素，能以O(1)时间复杂度查找元素，又能够保证key的有序性</p>
<p>在描述算法复杂度时,经常用到o(1), o(n), o(logn), o(nlogn)来表示对应算法的时间复杂度, 这里进行归纳一下它们代表的含义:</p>
<p>这是算法的时空复杂度的表示。不仅仅用于表示时间复杂度，也用于表示空间复杂度。<br>O后面的括号中有一个函数，指明某个算法的耗时/耗空间与数据增长量之间的关系。其中的n代表输入数据的量。<br>比如时间复杂度为O(n)，就代表数据量增大几倍，耗时也增大几倍。比如常见的遍历算法。<br>比如时间复杂度O(n^2)，就代表数据量增大n倍时，耗时增大n的平方倍，这是比线性更高的时间复杂度。比如冒泡排序，就是典型的O(n^2)的算法，对n个数排序，需要扫描n×n次。<br>比如O(logn)，当数据增大n倍时，耗时增大logn倍（这里的log是以2为底的，比如，当数据增大256倍时，耗时只增大8倍，是比线性还要低的时间复杂度）。二分查找就是O(logn)的算法，每找一次排除一半的可能，256个数据中查找只要找8次就可以找到目标。<br>O(nlogn)同理，就是n乘以logn，当数据增大256倍时，耗时增大256*8=2048倍。这个复杂度高于线性低于平方。归并排序就是O(nlogn)的时间复杂度。<br>O(1)就是最低的时空复杂度了，也就是耗时/耗空间与输入数据大小无关，无论输入数据增大多少倍，耗时/耗空间都不变。 哈希算法就是典型的O(1)时间复杂度，无论数据规模多大，都可以在一次计算后找到目标（不考虑冲突的话）</p>
<p>文章来源：<a href="https://www.cnblogs.com/alex-xyl/p/11460931.html" target="_blank" rel="noopener">https://www.cnblogs.com/alex-xyl/p/11460931.html</a></p>
]]></content>
      <categories>
        <category>Java</category>
        <category>数据结构和算法</category>
      </categories>
      <tags>
        <tag>数据结构和算法</tag>
      </tags>
  </entry>
  <entry>
    <title>虚拟机栈的5道面试题</title>
    <url>/2020/05/11/%E8%99%9A%E6%8B%9F%E6%9C%BA%E6%A0%88%E7%9A%845%E9%81%93%E9%9D%A2%E8%AF%95%E9%A2%98/</url>
    <content><![CDATA[<p>举例栈溢出的情况（StackOverflowError）</p>
<ul>
<li>通过-Xss设置栈的大小；OOM</li>
</ul>
<p>调整栈大小，就能保证不出现溢出吗？不能</p>
<p>分配的栈内存越大越好吗？不是</p>
<p>垃圾回收是否会涉及到虚拟机栈？不会</p>
<p>方法中定义的局部变量是否线程安全？具体情况具体分析</p>
]]></content>
  </entry>
  <entry>
    <title>docker-compose 例子</title>
    <url>/2020/05/11/docker-compose-%E4%BE%8B%E5%AD%90/</url>
    <content><![CDATA[<h2 id="Mysql-8-x"><a href="#Mysql-8-x" class="headerlink" title="Mysql 8.x"></a>Mysql 8.x</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">'3.1'</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">db:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">mysql</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">MYSQL_ROOT_PASSWORD:</span> <span class="number">123456</span></span><br><span class="line">    <span class="attr">command:</span></span><br><span class="line">      <span class="string">--default-authentication-plugin=mysql_native_password</span></span><br><span class="line">      <span class="string">--character-set-server=utf8mb4</span></span><br><span class="line">      <span class="string">--collation-server=utf8mb4_general_ci</span></span><br><span class="line">      <span class="string">--explicit_defaults_for_timestamp=true</span></span><br><span class="line">      <span class="string">--lower_case_table_names=1</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">3306</span><span class="string">:3306</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./data:/var/lib/mysql</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">adminer:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">adminer</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">9090</span><span class="string">:8080</span></span><br></pre></td></tr></table></figure>

<h2 id="GitLab"><a href="#GitLab" class="headerlink" title="GitLab"></a>GitLab</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">'3'</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">    <span class="attr">web:</span></span><br><span class="line">      <span class="attr">image:</span> <span class="string">'twang2218/gitlab-ce-zh'</span></span><br><span class="line">      <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">      <span class="attr">hostname:</span> <span class="string">'192.168.0.120'</span></span><br><span class="line">      <span class="attr">environment:</span></span><br><span class="line">        <span class="attr">TZ:</span> <span class="string">'Asia/Shanghai'</span></span><br><span class="line">        <span class="attr">GITLAB_OMNIBUS_CONFIG:</span> <span class="string">|</span></span><br><span class="line">          <span class="string">external_url</span> <span class="string">'http://192.168.0.120:8080'</span></span><br><span class="line">          <span class="string">gitlab_rails['gitlab_shell_ssh_port']</span> <span class="string">=</span> <span class="number">2222</span></span><br><span class="line">          <span class="string">unicorn['port']</span> <span class="string">=</span> <span class="number">8888</span></span><br><span class="line">          <span class="string">nginx['listen_port']</span> <span class="string">=</span> <span class="number">8080</span></span><br><span class="line">      <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">'8080:8080'</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">'8443:443'</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">'2222:22'</span></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">./config:/etc/gitlab</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">./data:/var/opt/gitlab</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">./logs:/var/log/gitlab</span></span><br></pre></td></tr></table></figure>

<h2 id="Nexus"><a href="#Nexus" class="headerlink" title="Nexus"></a>Nexus</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">'3.1'</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">nexus:</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">sonatype/nexus3</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">nexus</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">8081</span><span class="string">:8081</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">data:/nexus-data</span></span><br><span class="line"></span><br><span class="line"><span class="attr">volumes:</span></span><br><span class="line">  <span class="attr">data:</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Docker</category>
        <category>docker-compose</category>
      </categories>
      <tags>
        <tag>Docker</tag>
        <tag>docker-compose</tag>
      </tags>
  </entry>
  <entry>
    <title>CentOS安装Docker</title>
    <url>/2020/05/11/CentOS%E5%AE%89%E8%A3%85Docker/</url>
    <content><![CDATA[<p>1.卸载Docker旧版本</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum remove docker \</span><br><span class="line">                  docker-client \</span><br><span class="line">                  docker-client-latest \</span><br><span class="line">                  docker-common \</span><br><span class="line">                  docker-latest \</span><br><span class="line">                  docker-latest-logrotate \</span><br><span class="line">                  docker-logrotate \</span><br><span class="line">                  docker-engine</span><br></pre></td></tr></table></figure>

<p>2.使用存储库安装</p>
<p>设置存储库</p>
<p>安装<code>yum-utils</code>软件包（提供<code>yum-config-manager</code> 实用程序）并设置<strong>稳定的</strong>存储库。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo yum install -y yum-utils</span><br><span class="line"></span><br><span class="line">$ sudo yum-config-manager \</span><br><span class="line">    --add-repo \</span><br><span class="line">    https://download.docker.com/linux/centos/docker-ce.repo</span><br></pre></td></tr></table></figure>

<p>3.安装Docker引擎</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install docker-ce docker-ce-cli containerd.io</span><br></pre></td></tr></table></figure>

<p>4.启动Docker</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl start docker</span><br></pre></td></tr></table></figure>

<p>5.验证</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run hello-world</span><br></pre></td></tr></table></figure>



<p>参考资料：</p>
<p><a href="https://docs.docker.com/engine/install/centos/" target="_blank" rel="noopener">Docker官网</a></p>
]]></content>
      <categories>
        <category>Docker</category>
      </categories>
      <tags>
        <tag>Docker</tag>
        <tag>CentOS</tag>
      </tags>
  </entry>
  <entry>
    <title>Dockerfile初探</title>
    <url>/2020/05/11/Dockerfile%E5%88%9D%E6%8E%A2/</url>
    <content><![CDATA[<h3 id="测试使用Dockerfile创建一个myshop镜像"><a href="#测试使用Dockerfile创建一个myshop镜像" class="headerlink" title="测试使用Dockerfile创建一个myshop镜像"></a>测试使用Dockerfile创建一个myshop镜像</h3><p>1.新建文件夹myshop</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mkdir myshop</span><br><span class="line"><span class="comment">#查看当前目录</span></span><br><span class="line"><span class="built_in">pwd</span></span><br><span class="line">/Users/doubledumbao/docker-demo/202005/myshop</span><br></pre></td></tr></table></figure>

<p>2.新建index.html文件，文件内容如下：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>hello docker <span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>hello docker!!!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>3.将index.html打包</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tar -zcvf myshop.tar.gz index.html</span><br></pre></td></tr></table></figure>

<p>4.编写Dockerfile文件</p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="comment"># FROM 指令用于指定其后构建新镜像所使用的基础镜像。FROM 指令必是 Dockerfile 文件中的首条命令，启动构建流程后，Docker 将会基于该镜像构建新镜像，FROM 后的命令也会基于这个基础镜像。</span></span><br><span class="line"><span class="keyword">FROM</span> tomcat:latest</span><br><span class="line"><span class="comment"># 删除/usr/local/tomcat/webapps/ROOT/目录下的内容</span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> rm -rf /usr/<span class="built_in">local</span>/tomcat/webapps/ROOT/*</span></span><br><span class="line"><span class="comment"># COPY 指令将从构建上下文目录中 &lt;源路径&gt; 的文件/目录复制到新的一层的镜像内的&amp;lt;目标路径&amp;gt;位置。</span></span><br><span class="line"><span class="keyword">COPY</span><span class="bash"> myshop.tar.gz /usr/<span class="built_in">local</span>/tomcat/webapps/ROOT/</span></span><br><span class="line"><span class="comment"># WORKDIR用于在容器内设置一个工作目录</span></span><br><span class="line"><span class="keyword">WORKDIR</span><span class="bash"> /usr/<span class="built_in">local</span>/tomcat/webapps/ROOT/</span></span><br><span class="line"><span class="comment"># RUN在镜像的构建过程中执行特定的命令，并生成一个中间镜像。</span></span><br><span class="line"><span class="comment"># 解压tar包并删除tar包</span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> tar -zxvf myshop.tar.gz \</span></span><br><span class="line"><span class="bash">   &amp;&amp; rm -fr myshop.tar.gz</span></span><br><span class="line"><span class="comment"># 为构建的镜像设置监听端口，使容器在运行时监听。格式：EXPOSE &lt;port&gt; [&lt;port&gt;...]。EXPOSE 指令并不会让容器监听 host 的端口，如果需要，需要在 docker run 时使用 -p、-P 参数来发布容器端口到 host 的某个端口上。</span></span><br><span class="line"><span class="keyword">EXPOSE</span> <span class="number">8080</span></span><br></pre></td></tr></table></figure>

<p>5.编译Dockerfile</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker build -t myshop .</span><br></pre></td></tr></table></figure>

<p>6.运行容器</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker build -t myshop .</span><br></pre></td></tr></table></figure>

<p>7.查看浏览器localhost:8080效果</p>
<p>8.查看容器内目录结构，使用命令如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -it 11474d41fac5 /bin/bash</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Docker</category>
      </categories>
      <tags>
        <tag>Docker</tag>
      </tags>
  </entry>
  <entry>
    <title>HashMap源码详解和面试题分析</title>
    <url>/2020/05/09/HashMap%E6%BA%90%E7%A0%81%E8%AF%A6%E8%A7%A3%E5%92%8C%E9%9D%A2%E8%AF%95%E9%A2%98%E5%88%86%E6%9E%90/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>HashMap</tag>
      </tags>
  </entry>
  <entry>
    <title>docker服务编排</title>
    <url>/2020/05/08/docker%E6%9C%8D%E5%8A%A1%E7%BC%96%E6%8E%92/</url>
    <content><![CDATA[<p><strong><em>根据哔哩哔哩视频<a href="https://www.bilibili.com/video/BV1Wt411w72h/?spm_id_from=333.788.videocard.0" target="_blank" rel="noopener">【docker入门2】实战~如何组织一个多容器项目docker-compose</a>进行学习</em></strong></p>
<h2 id="利用网站https-labs-play-with-docker-com-进行测试"><a href="#利用网站https-labs-play-with-docker-com-进行测试" class="headerlink" title="利用网站https://labs.play-with-docker.com/进行测试"></a>利用网站<a href="https://labs.play-with-docker.com/进行测试" target="_blank" rel="noopener">https://labs.play-with-docker.com/进行测试</a></h2><h3 id="第一步，安装nginx镜像"><a href="#第一步，安装nginx镜像" class="headerlink" title="第一步，安装nginx镜像"></a>第一步，安装nginx镜像</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 拉取nginx镜像</span></span><br><span class="line">docker pull nginx</span><br><span class="line"><span class="comment"># 运行nginx容器</span></span><br><span class="line">docker run -d -p80:80 --name mynginx nginx </span><br><span class="line"><span class="comment">#容器ID</span></span><br><span class="line">87702c4c192061036d731df8f533a82f20b972284b650a850adec3aba9580342</span><br><span class="line"><span class="comment"># 查看运行中的容器</span></span><br><span class="line">docker ps</span><br><span class="line">CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                NAMES</span><br><span class="line">87702c4c1920        nginx               <span class="string">"nginx -g 'daemon of…"</span>   24 seconds ago      Up 23 seconds       0.0.0.0:80-&gt;80/tcp   mynginx </span><br><span class="line"><span class="comment"># 在容器中进行交互操作</span></span><br><span class="line">docker <span class="built_in">exec</span> -it mynginx /bin/bash</span><br><span class="line"><span class="comment"># 查看容器IP地址</span></span><br><span class="line">cat /etc/hosts</span><br><span class="line"></span><br><span class="line">127.0.0.1	localhost</span><br><span class="line">::1	localhost ip6-localhost ip6-loopback</span><br><span class="line">fe00::0	ip6-localnet</span><br><span class="line">ff00::0	ip6-mcastprefix</span><br><span class="line">ff02::1	ip6-allnodes</span><br><span class="line">ff02::2	ip6-allrouters</span><br><span class="line">172.17.0.2	87702c4c1920</span><br></pre></td></tr></table></figure>
<h3 id="第二步：安装最小化Linux镜像alpine"><a href="#第二步：安装最小化Linux镜像alpine" class="headerlink" title="第二步：安装最小化Linux镜像alpine"></a>第二步：安装最小化Linux镜像alpine</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 拉取alpine镜像</span></span><br><span class="line">docker pull alpine</span><br><span class="line"><span class="comment"># 安装curl</span></span><br><span class="line">apk add curl</span><br><span class="line"><span class="comment"># curl nginx容器</span></span><br><span class="line">curl 172.17.0.2</span><br><span class="line"></span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt;Welcome to nginx!&lt;/title&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">    body &#123;</span><br><span class="line">        width: 35em;</span><br><span class="line">        margin: 0 auto;</span><br><span class="line">        font-family: Tahoma, Verdana, Arial, sans-serif;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1&gt;Welcome to nginx!&lt;/h1&gt;</span><br><span class="line">&lt;p&gt;If you see this page, the nginx web server is successfully installed and</span><br><span class="line">working. Further configuration is required.&lt;/p&gt;</span><br><span class="line"></span><br><span class="line">&lt;p&gt;For online documentation and support please refer to</span><br><span class="line">&lt;a href=<span class="string">"http://nginx.org/"</span>&gt;nginx.org&lt;/a&gt;.&lt;br/&gt;</span><br><span class="line">Commercial support is available at</span><br><span class="line">&lt;a href=<span class="string">"http://nginx.com/"</span>&gt;nginx.com&lt;/a&gt;.&lt;/p&gt;</span><br><span class="line"></span><br><span class="line">&lt;p&gt;&lt;em&gt;Thank you <span class="keyword">for</span> using nginx.&lt;/em&gt;&lt;/p&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>

<h3 id="另外一种方式-–link方式"><a href="#另外一种方式-–link方式" class="headerlink" title="另外一种方式 –link方式"></a>另外一种方式 –link方式</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#后台运行alpine,并将mynginx容器绑定域名myng</span></span><br><span class="line">docker run -dit --link mynginx:myng alpine   </span><br><span class="line">825d4b3d221238bda2f29411fcae6d72fafb97d5002986660aa8c3b7cc501d99</span><br><span class="line"><span class="comment"># 安装curl</span></span><br><span class="line">apk add curl</span><br><span class="line"></span><br><span class="line">fetch http://dl-cdn.alpinelinux.org/alpine/v3.11/main/x86_64/APKINDEX.tar.gz</span><br><span class="line">fetch http://dl-cdn.alpinelinux.org/alpine/v3.11/community/x86_64/APKINDEX.tar.gz</span><br><span class="line">(1/4) Installing ca-certificates (20191127-r1)</span><br><span class="line">(2/4) Installing nghttp2-libs (1.40.0-r0)</span><br><span class="line">(3/4) Installing libcurl (7.67.0-r0)</span><br><span class="line">(4/4) Installing curl (7.67.0-r0)</span><br><span class="line">Executing busybox-1.31.1-r9.trigger</span><br><span class="line">Executing ca-certificates-20191127-r1.trigger</span><br><span class="line">OK: 7 MiB <span class="keyword">in</span> 18 packages</span><br><span class="line"><span class="comment"># curl nginx镜像</span></span><br><span class="line">curl myng</span><br><span class="line"></span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt;Welcome to nginx!&lt;/title&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">    body &#123;</span><br><span class="line">        width: 35em;</span><br><span class="line">        margin: 0 auto;</span><br><span class="line">        font-family: Tahoma, Verdana, Arial, sans-serif;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1&gt;Welcome to nginx!&lt;/h1&gt;</span><br><span class="line">&lt;p&gt;If you see this page, the nginx web server is successfully installed and</span><br><span class="line">working. Further configuration is required.&lt;/p&gt;</span><br><span class="line"></span><br><span class="line">&lt;p&gt;For online documentation and support please refer to</span><br><span class="line">&lt;a href=<span class="string">"http://nginx.org/"</span>&gt;nginx.org&lt;/a&gt;.&lt;br/&gt;</span><br><span class="line">Commercial support is available at</span><br><span class="line">&lt;a href=<span class="string">"http://nginx.com/"</span>&gt;nginx.com&lt;/a&gt;.&lt;/p&gt;</span><br><span class="line"></span><br><span class="line">&lt;p&gt;&lt;em&gt;Thank you <span class="keyword">for</span> using nginx.&lt;/em&gt;&lt;/p&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 原理，增加了172.17.0.2      myng d2d78de2ad2f</span></span><br><span class="line">cat /etc/hosts</span><br><span class="line">127.0.0.1       localhost</span><br><span class="line">::1     localhost ip6-localhost ip6-loopback</span><br><span class="line">fe00::0 ip6-localnet</span><br><span class="line">ff00::0 ip6-mcastprefix</span><br><span class="line">ff02::1 ip6-allnodes</span><br><span class="line">ff02::2 ip6-allrouters</span><br><span class="line">172.17.0.2      myng d2d78de2ad2f</span><br><span class="line">172.17.0.3      9688a42fec94</span><br></pre></td></tr></table></figure>

<h3 id="docker-compose方式"><a href="#docker-compose方式" class="headerlink" title="docker-compose方式"></a>docker-compose方式</h3><h4 id="Users-doubledumbao-docker-demo-compose-demo目录下，新建html目录，添加index-html"><a href="#Users-doubledumbao-docker-demo-compose-demo目录下，新建html目录，添加index-html" class="headerlink" title="/Users/doubledumbao/docker-demo/compose-demo目录下，新建html目录，添加index.html"></a>/Users/doubledumbao/docker-demo/compose-demo目录下，新建html目录，添加index.html</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>hello world nginx<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>hello world nginx!!!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="Users-doubledumbao-docker-demo-compose-demo-html目录下，添加test-php"><a href="#Users-doubledumbao-docker-demo-compose-demo-html目录下，添加test-php" class="headerlink" title="/Users/doubledumbao/docker-demo/compose-demo/html目录下，添加test.php"></a>/Users/doubledumbao/docker-demo/compose-demo/html目录下，添加test.php</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">"Hello World PHP!!!"</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>

<h4 id="Users-doubledumbao-docker-demo-compose-demo-html目录下，添加mysql-php"><a href="#Users-doubledumbao-docker-demo-compose-demo-html目录下，添加mysql-php" class="headerlink" title="/Users/doubledumbao/docker-demo/compose-demo/html目录下，添加mysql.php"></a>/Users/doubledumbao/docker-demo/compose-demo/html目录下，添加mysql.php</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$servername = <span class="string">"mysql"</span>;</span><br><span class="line">$username = <span class="string">"root"</span>;</span><br><span class="line">$password = <span class="string">"123456"</span>;</span><br><span class="line"> </span><br><span class="line"><span class="comment">// 创建连接</span></span><br><span class="line">$conn = <span class="keyword">new</span> mysqli($servername, $username, $password);</span><br><span class="line"> </span><br><span class="line"><span class="comment">// 检测连接</span></span><br><span class="line"><span class="keyword">if</span> ($conn-&gt;connect_error) &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">"连接失败: "</span> . $conn-&gt;connect_error);</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">echo</span> <span class="string">"connected success !!!!!"</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="Users-doubledumbao-docker-demo-compose-demo目录下，新建conf目录"><a href="#Users-doubledumbao-docker-demo-compose-demo目录下，新建conf目录" class="headerlink" title="/Users/doubledumbao/docker-demo/compose-demo目录下，新建conf目录"></a>/Users/doubledumbao/docker-demo/compose-demo目录下，新建conf目录</h4><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="comment">#user  nobody;</span></span><br><span class="line"><span class="attribute">worker_processes</span>  <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">#error_log  logs/error.log;</span></span><br><span class="line"><span class="comment">#error_log  logs/error.log  notice;</span></span><br><span class="line"><span class="comment">#error_log  logs/error.log  info;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#pid        logs/nginx.pid;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="section">events</span> &#123;</span><br><span class="line">    <span class="attribute">worker_connections</span>  <span class="number">1024</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="section">http</span> &#123;</span><br><span class="line">    <span class="attribute">include</span>       mime.types;</span><br><span class="line">    <span class="attribute">default_type</span>  application/octet-stream;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '</span></span><br><span class="line">    <span class="comment">#                  '$status $body_bytes_sent "$http_referer" '</span></span><br><span class="line">    <span class="comment">#                  '"$http_user_agent" "$http_x_forwarded_for"';</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#access_log  logs/access.log  main;</span></span><br><span class="line"></span><br><span class="line">    <span class="attribute">sendfile</span>        <span class="literal">on</span>;</span><br><span class="line">    <span class="comment">#tcp_nopush     on;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#keepalive_timeout  0;</span></span><br><span class="line">    <span class="attribute">keepalive_timeout</span>  <span class="number">65</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#gzip  on;</span></span><br><span class="line"></span><br><span class="line">    <span class="section">server</span> &#123;</span><br><span class="line">        <span class="attribute">listen</span>       <span class="number">80</span>;</span><br><span class="line">        <span class="attribute">server_name</span>  localhost;</span><br><span class="line"></span><br><span class="line">        <span class="comment">#charset koi8-r;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">#access_log  logs/host.access.log  main;</span></span><br><span class="line"></span><br><span class="line">        <span class="attribute">location</span> / &#123;</span><br><span class="line">            <span class="attribute">root</span>   /usr/share/nginx/html;</span><br><span class="line">            <span class="attribute">index</span>  index.html index.htm;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">#error_page  404              /404.html;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># redirect server error pages to the static page /50x.html</span></span><br><span class="line">        <span class="comment">#</span></span><br><span class="line">        <span class="attribute">error_page</span>   <span class="number">500</span> <span class="number">502</span> <span class="number">503</span> <span class="number">504</span>  /50x.html;</span><br><span class="line">        <span class="attribute">location</span> = /50x.html &#123;</span><br><span class="line">            <span class="attribute">root</span>   html;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"># proxy the PHP scripts to Apache listening on 127.0.0.1:80</span></span><br><span class="line">        <span class="comment">#</span></span><br><span class="line">        <span class="comment"># location ~ \.php$ &#123;</span></span><br><span class="line">        <span class="comment">#    proxy_pass   http://127.0.0.1;</span></span><br><span class="line">        <span class="comment"># &#125;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000</span></span><br><span class="line">        <span class="comment">#</span></span><br><span class="line">        <span class="attribute">location</span> <span class="regexp">~ \.php$</span> &#123;</span><br><span class="line">           <span class="attribute">fastcgi_pass</span>   php:<span class="number">9000</span>;</span><br><span class="line">           <span class="attribute">fastcgi_index</span>  index.php;</span><br><span class="line">           <span class="attribute">fastcgi_param</span>  SCRIPT_FILENAME  /var/www/html/<span class="variable">$fastcgi_script_name</span>;</span><br><span class="line">           <span class="attribute">include</span>        fastcgi_params;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"># deny access to .htaccess files, if Apache's document root</span></span><br><span class="line">        <span class="comment"># concurs with nginx's one</span></span><br><span class="line">        <span class="comment">#</span></span><br><span class="line">        <span class="comment">#location ~ /\.ht &#123;</span></span><br><span class="line">        <span class="comment">#    deny  all;</span></span><br><span class="line">        <span class="comment">#&#125;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment"># another virtual host using mix of IP-, name-, and port-based configuration</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment">#server &#123;</span></span><br><span class="line">    <span class="comment">#    listen       8000;</span></span><br><span class="line">    <span class="comment">#    listen       somename:8080;</span></span><br><span class="line">    <span class="comment">#    server_name  somename  alias  another.alias;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#    location / &#123;</span></span><br><span class="line">    <span class="comment">#        root   html;</span></span><br><span class="line">    <span class="comment">#        index  index.html index.htm;</span></span><br><span class="line">    <span class="comment">#    &#125;</span></span><br><span class="line">    <span class="comment">#&#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment"># HTTPS server</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment">#server &#123;</span></span><br><span class="line">    <span class="comment">#    listen       443 ssl;</span></span><br><span class="line">    <span class="comment">#    server_name  localhost;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#    ssl_certificate      cert.pem;</span></span><br><span class="line">    <span class="comment">#    ssl_certificate_key  cert.key;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#    ssl_session_cache    shared:SSL:1m;</span></span><br><span class="line">    <span class="comment">#    ssl_session_timeout  5m;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#    ssl_ciphers  HIGH:!aNULL:!MD5;</span></span><br><span class="line">    <span class="comment">#    ssl_prefer_server_ciphers  on;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#    location / &#123;</span></span><br><span class="line">    <span class="comment">#        root   html;</span></span><br><span class="line">    <span class="comment">#        index  index.html index.htm;</span></span><br><span class="line">    <span class="comment">#    &#125;</span></span><br><span class="line">    <span class="comment">#&#125;</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="Users-doubledumbao-docker-demo-compose-demo目录下，添加docker-compose-yml"><a href="#Users-doubledumbao-docker-demo-compose-demo目录下，添加docker-compose-yml" class="headerlink" title="/Users/doubledumbao/docker-demo/compose-demo目录下，添加docker-compose.yml"></a>/Users/doubledumbao/docker-demo/compose-demo目录下，添加docker-compose.yml</h4><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">'3'</span></span><br><span class="line"><span class="attr">services:</span> </span><br><span class="line">    <span class="attr">nginx:</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">nginx:alpine</span></span><br><span class="line">        <span class="attr">ports:</span> </span><br><span class="line">        <span class="bullet">-</span> <span class="number">80</span><span class="string">:80</span></span><br><span class="line">        <span class="attr">volumes:</span> </span><br><span class="line">        <span class="bullet">-</span> <span class="string">/Users/doubledumbao/docker-demo/compose-demo/html:/usr/share/nginx/html</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">/Users/doubledumbao/docker-demo/compose-demo/conf/nginx.conf:/etc/nginx/nginx.conf</span></span><br><span class="line">    <span class="attr">php:</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">devilbox/php-fpm:5.2-work-0.89</span></span><br><span class="line">        <span class="attr">volumes:</span> </span><br><span class="line">        <span class="bullet">-</span> <span class="string">/Users/doubledumbao/docker-demo/compose-demo/html:/var/www/html</span></span><br><span class="line">    <span class="attr">mysql:</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">mysql:5.6</span></span><br><span class="line">        <span class="attr">environment:</span> </span><br><span class="line">        <span class="bullet">-</span> <span class="string">MYSQL_ROOT_PASSWORD=123456</span></span><br></pre></td></tr></table></figure>

<h4 id="启动docker-compose"><a href="#启动docker-compose" class="headerlink" title="启动docker-compose"></a>启动docker-compose</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker-compose up</span><br></pre></td></tr></table></figure>

<h4 id="打开浏览器，查看效果"><a href="#打开浏览器，查看效果" class="headerlink" title="打开浏览器，查看效果"></a>打开浏览器，查看效果</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看nginx配置效果</span></span><br><span class="line">http://localhost</span><br><span class="line"><span class="comment"># 查看php配置效果</span></span><br><span class="line">http://localhost/test.php</span><br><span class="line"><span class="comment"># 查看mysql配置效果</span></span><br><span class="line">http://localhost/mysql.php</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Docker</category>
      </categories>
      <tags>
        <tag>Docker</tag>
      </tags>
  </entry>
  <entry>
    <title>多线程问题整理</title>
    <url>/2020/05/06/%E5%A4%9A%E7%BA%BF%E7%A8%8B%E9%97%AE%E9%A2%98%E6%95%B4%E7%90%86/</url>
    <content><![CDATA[<h2 id="1-如何实现一个生产者和消费者模型？（锁、信号量、线程通信、阻塞队列等）"><a href="#1-如何实现一个生产者和消费者模型？（锁、信号量、线程通信、阻塞队列等）" class="headerlink" title="1.如何实现一个生产者和消费者模型？（锁、信号量、线程通信、阻塞队列等）"></a>1.如何实现一个生产者和消费者模型？（锁、信号量、线程通信、阻塞队列等）</h2><p><a href="https://www.jianshu.com/p/66e8b5ab27f6" target="_blank" rel="noopener">Java生产者和消费者模型的5种实现方式</a></p>
<h2 id="2-如何理解线程的同步和异步、阻塞和非阻塞？"><a href="#2-如何理解线程的同步和异步、阻塞和非阻塞？" class="headerlink" title="2.如何理解线程的同步和异步、阻塞和非阻塞？"></a>2.如何理解线程的同步和异步、阻塞和非阻塞？</h2><p>作者：Yi Lu<br>链接：<a href="https://www.zhihu.com/question/19732473/answer/20851256" target="_blank" rel="noopener">https://www.zhihu.com/question/19732473/answer/20851256</a><br>来源：知乎</p>
<p>“阻塞”与”非阻塞”与”同步”与“异步”不能简单的从字面理解，提供一个从分布式系统角度的回答。<br><strong>1.同步与异步</strong><br>    同步和异步关注的是<strong>消息通信机制</strong> (synchronous communication/ asynchronous communication)<br>所谓同步，就是在发出一个<em>调用</em>时，在没有得到结果之前，该<em>调用</em>就不返回。但是一旦调用返回，就得到返回值了。<br>换句话说，就是由<em>调用者</em>主动等待这个<em>调用</em>的结果。</p>
<p>而异步则是相反，<strong><em>调用\</em>在发出之后，这个调用就直接返回了，所以没有返回结果</strong>。换句话说，当一个异步过程调用发出后，调用者不会立刻得到结果。而是在<em>调用</em>发出后，<em>被调用者</em>通过状态、通知来通知调用者，或通过回调函数处理这个调用。</p>
<p>典型的异步编程模型比如Node.js</p>
<p>举个通俗的例子：<br>你打电话问书店老板有没有《分布式系统》这本书，如果是同步通信机制，书店老板会说，你稍等，”我查一下”，然后开始查啊查，等查好了（可能是5秒，也可能是一天）告诉你结果（返回结果）。<br>而异步通信机制，书店老板直接告诉你我查一下啊，查好了打电话给你，然后直接挂电话了（不返回结果）。然后查好了，他会主动打电话给你。在这里老板通过“回电”这种方式来回调。</p>
<ol start="2">
<li><p>阻塞与非阻塞</p>
<p>阻塞和非阻塞关注的是<strong>程序在等待调用结果（消息，返回值）时的状态.</strong></p>
</li>
</ol>
<p>阻塞调用是指调用结果返回之前，当前线程会被挂起。调用线程只有在得到结果之后才会返回。<br>非阻塞调用指在不能立刻得到结果之前，该调用不会阻塞当前线程。</p>
<p>还是上面的例子，<br>你打电话问书店老板有没有《分布式系统》这本书，你如果是阻塞式调用，你会一直把自己“挂起”，直到得到这本书有没有的结果，如果是非阻塞式调用，你不管老板有没有告诉你，你自己先一边去玩了， 当然你也要偶尔过几分钟check一下老板有没有返回结果。<br>在这里阻塞与非阻塞与是否同步异步无关。跟老板通过什么方式回答你结果无关。</p>
<p>如果是关心阻塞 IO/ 异步 IO, 参考  Unix Network Programming <a href="https://link.zhihu.com/?target=http%3A//english.tebyan.net/newindex.aspx%3Fpid%3D31159%26BookID%3D23760%26PageIndex%3D92%26Language%3D3">View Book</a></p>
<p>还是2014年写的以解释概念为主，主要是同步异步 阻塞和非阻塞会被用在不同层面上，可能会有不准确的地方，并没有针对 阻塞 IO/ 异步 IO 等进行讨论，大家可以后续看看这两个回答：</p>
<p><a href="https://www.zhihu.com/question/19732473/answer/14413599" target="_blank" rel="noopener">怎样理解阻塞非阻塞与同步异步的区别？</a></p>
<p><a href="https://www.zhihu.com/question/19732473/answer/241673170" target="_blank" rel="noopener">怎样理解阻塞非阻塞与同步异步的区别？</a></p>
<h2 id="3-线程池处理任务的流程是怎样的？"><a href="#3-线程池处理任务的流程是怎样的？" class="headerlink" title="3.线程池处理任务的流程是怎样的？"></a>3.线程池处理任务的流程是怎样的？</h2><p>1，首先线程池判断基本线程池是否已满（&lt; corePoolSize ？）？没满，创建一个工作线程来执行任务。满了，则进入下个流程。</p>
<p>2，其次线程池判断工作队列是否已满？没满，则将新提交的任务存储在工作队列里。满了，则进入下个流程。</p>
<p>3，最后线程池判断整个线程池是否已满（&lt; maximumPoolSize ？）？没满，则创建一个新的工作线程来执行任务，满了，则交给饱和策略来处理这个任务。</p>
<p>总结：线程池优先要创建出基本线程池大小（corePoolSize）的线程数量，没有达到这个数量时，每次提交新任务都会直接创建一个新线程，当达到了基本线程数量后，又有新任务到达，优先放入等待队列，如果队列满了，才去创建新的线程（不能超过线程池的最大数maxmumPoolSize）</p>
<h2 id="4-wait和sleep有什么不同？"><a href="#4-wait和sleep有什么不同？" class="headerlink" title="4.wait和sleep有什么不同？"></a>4.wait和sleep有什么不同？</h2><h3 id="区别1：使用限制"><a href="#区别1：使用限制" class="headerlink" title="区别1：使用限制"></a>区别1：使用限制</h3><p>使用 sleep 方法可以让让当前线程休眠，时间一到当前线程继续往下执行，在任何地方都能使用，但需要捕获 InterruptedException 异常。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">try &#123;</span><br><span class="line">    Thread.sleep(3000L);</span><br><span class="line">&#125; catch (InterruptedException e) &#123;</span><br><span class="line">    e.printStackTrace();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>而使用 wait 方法则必须放在 synchronized 块里面，同样需要捕获 InterruptedException 异常，并且需要获取对象的锁。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">synchronized (lock)&#123;</span><br><span class="line">    try &#123;</span><br><span class="line">        lock.wait();</span><br><span class="line">    &#125; catch (InterruptedException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>而且 wait 还需要额外的方法 notify/ notifyAll 进行唤醒，它们同样需要放在 synchronized 块里面，且获取对象的锁。。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">synchronized (lock) &#123;</span><br><span class="line">    &#x2F;&#x2F; 随机唤醒</span><br><span class="line">    lock.notify();</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; 唤醒全部</span><br><span class="line">    lock.notifyAll();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>当然也可以使用带时间的 wait(long millis) 方法，时间一到，无需其他线程唤醒，也会重新竞争获取对象的锁继续执行。</p>
<h3 id="区别2：使用场景"><a href="#区别2：使用场景" class="headerlink" title="区别2：使用场景"></a>区别2：使用场景</h3><p>sleep 一般用于当前线程休眠，或者轮循暂停操作，wait 则多用于多线程之间的通信。</p>
<h3 id="区别3：所属类"><a href="#区别3：所属类" class="headerlink" title="区别3：所属类"></a>区别3：所属类</h3><p>sleep 是 Thread 类的静态本地方法，wait 则是 Object 类的本地方法。</p>
<blockquote>
<p>java.lang.Thread#sleep</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">public static native void sleep(long millis) throws InterruptedException;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>java.lang.Object#wait</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">public final native void wait(long timeout) throws InterruptedException;</span><br></pre></td></tr></table></figure>

<p><strong>为什么要这样设计呢？</strong></p>
<p>因为 sleep 是让当前线程休眠，不涉及到对象类，也不需要获得对象的锁，所以是线程类的方法。wait 是让获得对象锁的线程实现等待，前提是要楚获得对象的锁，所以是类的方法。</p>
<h3 id="区别4：释放锁"><a href="#区别4：释放锁" class="headerlink" title="区别4：释放锁"></a>区别4：释放锁</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Object lock &#x3D; new Object();</span><br><span class="line">synchronized (lock) &#123;</span><br><span class="line">    try &#123;</span><br><span class="line">        lock.wait(3000L);</span><br><span class="line">        Thread.sleep(2000L);</span><br><span class="line">    &#125; catch (InterruptedException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>如上代码所示，wait 可以释放当前线程对 lock 对象锁的持有，而 sleep 则不会。</p>
<h3 id="区别5：线程切换"><a href="#区别5：线程切换" class="headerlink" title="区别5：线程切换"></a>区别5：线程切换</h3><p>sleep 会让出 CPU 执行时间且强制上下文切换，而 wait 则不一定，wait 后可能还是有机会重新竞争到锁继续执行的。</p>
<h2 id="5-Synchronized和ReentrantLock有什么不同？各适合什么场景？"><a href="#5-Synchronized和ReentrantLock有什么不同？各适合什么场景？" class="headerlink" title="5.Synchronized和ReentrantLock有什么不同？各适合什么场景？"></a>5.Synchronized和ReentrantLock有什么不同？各适合什么场景？</h2><h5 id="1、ReentrantLock-拥有Synchronized相同的并发性和内存语义，此外还多了锁投票，定时锁等候和中断锁等候"><a href="#1、ReentrantLock-拥有Synchronized相同的并发性和内存语义，此外还多了锁投票，定时锁等候和中断锁等候" class="headerlink" title="1、ReentrantLock 拥有Synchronized相同的并发性和内存语义，此外还多了锁投票，定时锁等候和中断锁等候"></a>1、ReentrantLock 拥有Synchronized相同的并发性和内存语义，此外还多了<strong>锁投票</strong>，<strong>定时锁等候</strong>和<strong>中断锁等候</strong></h5><h6 id="example：线程A和B都要获取对象O的锁定，假设A获取了对象O锁，B将等待A释放对O的锁定，如果使用-synchronized-，如果A不释放，B将一直等下去，不能被中断如果-使用ReentrantLock，如果A不释放，可以使B在等待了足够长的时间以后，中断等待，而干别的事情"><a href="#example：线程A和B都要获取对象O的锁定，假设A获取了对象O锁，B将等待A释放对O的锁定，如果使用-synchronized-，如果A不释放，B将一直等下去，不能被中断如果-使用ReentrantLock，如果A不释放，可以使B在等待了足够长的时间以后，中断等待，而干别的事情" class="headerlink" title="example：线程A和B都要获取对象O的锁定，假设A获取了对象O锁，B将等待A释放对O的锁定，如果使用 synchronized ，如果A不释放，B将一直等下去，不能被中断如果 使用ReentrantLock，如果A不释放，可以使B在等待了足够长的时间以后，中断等待，而干别的事情"></a><em>example：</em>线程A和B都要获取对象O的锁定，假设A获取了对象O锁，B将等待A释放对O的锁定，如果使用 synchronized ，如果A不释放，B将一直等下去，不能被中断如果 使用ReentrantLock，如果A不释放，可以使B在等待了足够长的时间以后，中断等待，而干别的事情</h6><h6 id="ReentrantLock获取锁定与三种方式："><a href="#ReentrantLock获取锁定与三种方式：" class="headerlink" title="ReentrantLock获取锁定与三种方式："></a>ReentrantLock获取锁定与三种方式：</h6><ul>
<li><h6 id="lock-如果获取了锁立即返回，如果别的线程持有锁，当前线程则一直处于休眠状态，直到获取锁"><a href="#lock-如果获取了锁立即返回，如果别的线程持有锁，当前线程则一直处于休眠状态，直到获取锁" class="headerlink" title="lock(), 如果获取了锁立即返回，如果别的线程持有锁，当前线程则一直处于休眠状态，直到获取锁"></a>lock(), 如果获取了锁立即返回，如果别的线程持有锁，当前线程则一直处于休眠状态，直到获取锁</h6></li>
<li><h6 id="tryLock-如果获取了锁立即返回true，如果别的线程正持有锁，立即返回false；"><a href="#tryLock-如果获取了锁立即返回true，如果别的线程正持有锁，立即返回false；" class="headerlink" title="tryLock(), 如果获取了锁立即返回true，如果别的线程正持有锁，立即返回false；"></a>tryLock(), 如果获取了锁立即返回true，如果别的线程正持有锁，立即返回false；</h6></li>
<li><h6 id="tryLock-long-timeout-TimeUnit-unit-，-如果获取了锁定立即返回true，如果别的线程正持有锁，会等待参数给定的时间，在等待的过程中，如果获取了锁定，就返回true，如果等待超时，返回false；"><a href="#tryLock-long-timeout-TimeUnit-unit-，-如果获取了锁定立即返回true，如果别的线程正持有锁，会等待参数给定的时间，在等待的过程中，如果获取了锁定，就返回true，如果等待超时，返回false；" class="headerlink" title="tryLock(long timeout,TimeUnit unit)， 如果获取了锁定立即返回true，如果别的线程正持有锁，会等待参数给定的时间，在等待的过程中，如果获取了锁定，就返回true，如果等待超时，返回false；"></a>tryLock(long timeout,TimeUnit unit)， 如果获取了锁定立即返回true，如果别的线程正持有锁，会等待参数给定的时间，在等待的过程中，如果获取了锁定，就返回true，如果等待超时，返回false；</h6></li>
<li><h6 id="lockInterruptibly-如果获取了锁定立即返回，如果没有获取锁定，当前线程处于休眠状态，直到或者锁定，或者当前线程被别的线程中断"><a href="#lockInterruptibly-如果获取了锁定立即返回，如果没有获取锁定，当前线程处于休眠状态，直到或者锁定，或者当前线程被别的线程中断" class="headerlink" title="lockInterruptibly:如果获取了锁定立即返回，如果没有获取锁定，当前线程处于休眠状态，直到或者锁定，或者当前线程被别的线程中断"></a>lockInterruptibly:如果获取了锁定立即返回，如果没有获取锁定，当前线程处于休眠状态，直到或者锁定，或者当前线程被别的线程中断</h6></li>
</ul>
<hr>
<h5 id="2、synchronized是在JVM层面上实现的，不但可以通过一些监控工具监控synchronized的锁定，而且在代码执行时出现异常，JVM会自动释放锁定，但是使用Lock则不行，lock是通过代码实现的，要保证锁定一定会被释放，就必须将unLock-放到finally-中"><a href="#2、synchronized是在JVM层面上实现的，不但可以通过一些监控工具监控synchronized的锁定，而且在代码执行时出现异常，JVM会自动释放锁定，但是使用Lock则不行，lock是通过代码实现的，要保证锁定一定会被释放，就必须将unLock-放到finally-中" class="headerlink" title="2、synchronized是在JVM层面上实现的，不但可以通过一些监控工具监控synchronized的锁定，而且在代码执行时出现异常，JVM会自动释放锁定，但是使用Lock则不行，lock是通过代码实现的，要保证锁定一定会被释放，就必须将unLock()放到finally{}中"></a>2、synchronized是在<a href="https://link.jianshu.com?t=https://www.baidu.com/s?wd=JVM&tn=44039180_cpr&fenlei=mv6quAkxTZn0IZRqIHckPjm4nH00T1YkuWc1rHTdnWwbnH9-PW0z0ZwV5Hcvrjm3rH6sPfKWUMw85HfYnjn4nH6sgvPsT6KdThsqpZwYTjCEQLGCpyw9Uz4Bmy-bIi4WUvYETgN-TLwGUv3En1m3rjb1rH0Yn1fLnW01rj0Y" target="_blank" rel="noopener">JVM</a>层面上实现的，不但可以通过一些监控工具监控synchronized的锁定，而且在代码执行时出现异常，<a href="https://link.jianshu.com?t=http://baike.baidu.com/link?url=pUffiLWYkxesyD01y2WoXXiVVG988pvbc3GaaYXFW2TSZPhrH7_C8rRZBFwj7Prg_W8zn8p271NydxdolIh_U_" target="_blank" rel="noopener">JVM</a>会自动释放锁定，但是使用Lock则不行，lock是通过代码实现的，要保证锁定一定会被释放，就必须将unLock()放到finally{}中</h5><hr>
<h5 id="3、在资源竞争不是很激烈的情况下，Synchronized的性能要优于ReetrantLock，但是在资源竞争很激烈的情况下，Synchronized的性能会下降几十倍，但是ReetrantLock的性能能维持常态；"><a href="#3、在资源竞争不是很激烈的情况下，Synchronized的性能要优于ReetrantLock，但是在资源竞争很激烈的情况下，Synchronized的性能会下降几十倍，但是ReetrantLock的性能能维持常态；" class="headerlink" title="3、在资源竞争不是很激烈的情况下，Synchronized的性能要优于ReetrantLock，但是在资源竞争很激烈的情况下，Synchronized的性能会下降几十倍，但是ReetrantLock的性能能维持常态；"></a>3、在资源竞争不是很激烈的情况下，Synchronized的性能要优于ReetrantLock，但是在资源竞争很激烈的情况下，Synchronized的性能会下降几十倍，但是ReetrantLock的性能能维持常态；</h5><p>作者：OverLight<br>链接：<a href="https://www.jianshu.com/p/4dbacf1cadcf" target="_blank" rel="noopener">https://www.jianshu.com/p/4dbacf1cadcf</a><br>来源：简书</p>
<h2 id="6-读写锁适用于什么场景？ReentrantReadWriteLock是如何实现的？"><a href="#6-读写锁适用于什么场景？ReentrantReadWriteLock是如何实现的？" class="headerlink" title="6.读写锁适用于什么场景？ReentrantReadWriteLock是如何实现的？"></a>6.读写锁适用于什么场景？ReentrantReadWriteLock是如何实现的？</h2><p><a href="https://zhuanlan.zhihu.com/p/75879810" target="_blank" rel="noopener">ReentrantReadWriteLock读写锁详解</a></p>
<h2 id="7-线程之间如何通信？"><a href="#7-线程之间如何通信？" class="headerlink" title="7.线程之间如何通信？"></a>7.线程之间如何通信？</h2><p><a href="https://www.cnblogs.com/hapjin/p/5492619.html" target="_blank" rel="noopener"><a href="https://www.cnblogs.com/hapjin/p/5492619.html" target="_blank" rel="noopener">JAVA多线程之线程间的通信方式</a></a></p>
<h2 id="8-保证线程安全的方法有哪些？"><a href="#8-保证线程安全的方法有哪些？" class="headerlink" title="8.保证线程安全的方法有哪些？"></a>8.保证线程安全的方法有哪些？</h2><p><a href="https://www.nowcoder.com/questionTerminal/0e750e2953d144bd942bb1600b2a391e" target="_blank" rel="noopener">如何保证线程安全</a></p>
<h2 id="9-如何尽可能提高多线程并发性能？"><a href="#9-如何尽可能提高多线程并发性能？" class="headerlink" title="9.如何尽可能提高多线程并发性能？"></a>9.如何尽可能提高多线程并发性能？</h2><p><a href="https://my.oschina.net/u/1011494/blog/534822" target="_blank" rel="noopener">如何提高Java并行程序性能</a></p>
<h2 id="10-ThreadLocal用来解决什么问题？ThreadLocal是如何实现的？"><a href="#10-ThreadLocal用来解决什么问题？ThreadLocal是如何实现的？" class="headerlink" title="10.ThreadLocal用来解决什么问题？ThreadLocal是如何实现的？"></a>10.ThreadLocal用来解决什么问题？ThreadLocal是如何实现的？</h2><p><a href="https://baike.sogou.com/v54656329.htm?fromTitle=ThreadLocal" target="_blank" rel="noopener">ThreadLocal</a></p>
<h2 id="11-死锁的产生条件？如何分析是否有线程死锁？"><a href="#11-死锁的产生条件？如何分析是否有线程死锁？" class="headerlink" title="11.死锁的产生条件？如何分析是否有线程死锁？"></a>11.死锁的产生条件？如何分析是否有线程死锁？</h2><p><a href="https://zhuanlan.zhihu.com/p/84490319" target="_blank" rel="noopener">Java 多线程死锁的产生以及如何避免死锁</a></p>
<h2 id="12-在实际工作中遇到过什么样的并发问题，如何发现（排查）并解决的？"><a href="#12-在实际工作中遇到过什么样的并发问题，如何发现（排查）并解决的？" class="headerlink" title="12.在实际工作中遇到过什么样的并发问题，如何发现（排查）并解决的？"></a>12.在实际工作中遇到过什么样的并发问题，如何发现（排查）并解决的？</h2><p> <a href="https://www.cnblogs.com/koubeisi/p/10751035.html" target="_blank" rel="noopener"><a href="https://www.cnblogs.com/koubeisi/p/10751035.html" target="_blank" rel="noopener">Java面试 32个核心必考点完全解析</a></a></p>
]]></content>
      <categories>
        <category>Java</category>
        <category>多线程</category>
      </categories>
  </entry>
  <entry>
    <title>桥接模式</title>
    <url>/2020/05/03/%E6%A1%A5%E6%8E%A5%E6%A8%A1%E5%BC%8F/</url>
    <content><![CDATA[<h1 id="桥接模式"><a href="#桥接模式" class="headerlink" title="桥接模式"></a>桥接模式</h1><p>桥接模式是将抽象部分与它的实现部分分离，使它们都可以独立地变化。它是一种对象<a href="https://baike.sogou.com/lemma/ShowInnerLink.htm?lemmaId=177096017&ss_c=ssc.citiao.link" target="_blank" rel="noopener">结构型模式</a>，又称为柄体(Handle and Body)模式或接口(Interfce)模式。</p>
<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>在软件系统中，某些类型由于自身的逻辑，它具有两个或多个维度的变化，那么如何应对这种“多维度的变化”？如何利用面向对象的技术来使得该类型能够轻松的沿着多个方向进行变化，而又不引入额外的复杂度？这就要使用Bridge模式。</p>
<h2 id="意图"><a href="#意图" class="headerlink" title="意图"></a>意图</h2><p>【GOF95】在提出桥梁模式的时候指出，桥梁模式的用意是”将<a href="https://baike.sogou.com/lemma/ShowInnerLink.htm?lemmaId=70235444&ss_c=ssc.citiao.link" target="_blank" rel="noopener">抽象化</a>(Abstraction)与实现化(Implementation)脱耦，使得二者可以独立地变化”。这句话有三个关键词，也就是抽象化、实现化和脱耦。</p>
<h3 id="抽象化"><a href="#抽象化" class="headerlink" title="抽象化"></a>抽象化</h3><p>存在于多个实体中的共同的概念性联系，就是抽象化。作为一个过程，抽象化就是忽略一些信息，从而把不同的实体当做同样的实体对待。</p>
<h3 id="实现化"><a href="#实现化" class="headerlink" title="实现化"></a>实现化</h3><p>抽象化给出的具体实现，就是实现化。</p>
<h3 id="脱耦"><a href="#脱耦" class="headerlink" title="脱耦"></a>脱耦</h3><p>所谓耦合，就是两个实体的行为的某种强关联。而将它们的强关联去掉，就是耦合的解脱，或称脱耦。在这里，脱耦是指将<a href="https://baike.sogou.com/lemma/ShowInnerLink.htm?lemmaId=70235444&ss_c=ssc.citiao.link" target="_blank" rel="noopener">抽象化</a>和实现化之间的耦合解脱开，或者说是将它们之间的强关联改换成弱关联。</p>
<p>将两个角色之间的继承关系改为<a href="https://baike.sogou.com/lemma/ShowInnerLink.htm?lemmaId=8918469&ss_c=ssc.citiao.link" target="_blank" rel="noopener">聚合关系</a>，就是将它们之间的强关联改换成为弱关联。因此，桥梁模式中的所谓脱耦，就是指在一个软件系统的抽象化和实现化之间使用组合/聚合关系而不是继承关系，从而使两者可以相对独立地变化。这就是桥梁模式的用意。</p>
<h2 id="结构"><a href="#结构" class="headerlink" title="结构"></a>结构</h2><p>可以看出，这个系统含有两个等级结构，也就是：</p>
<p>由抽象化角色和修正抽象化角色组成的抽象化等级结构。</p>
<p>由实现化角色和两个具体实现化角色所组成的实现化等级结构。</p>
<p>桥梁模式所涉及的角色有：</p>
<p>抽象化(Abstraction)角色：抽象化给出的定义，并保存一个对实现化对象的引用。</p>
<p>修正抽象化(Refined Abstraction)角色：扩展抽象化角色，改变和修正父类对抽象化的定义。</p>
<p>实现化(Implementor)角色：这个角色给出实现化角色的接口，但不给出具体的实现。必须指出的是，这个接口不一定和抽象化角色的接口定义相同，实际上，这两个接口可以非常不一样。实现化角色应当只给出底层操作，而抽象化角色应当只给出基于底层操作的更高一层的操作。</p>
<p>具体实现化(Concrete Implementor)角色：这个角色给出实现化角色接口的具体实现。</p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 品牌</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Brand</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">info</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Lenovo</span> <span class="keyword">implements</span> <span class="title">Brand</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">info</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.print(<span class="string">"联想"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 苹果</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Apple</span>  <span class="keyword">implements</span>  <span class="title">Brand</span></span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">info</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.print(<span class="string">"苹果"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 电脑超类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Computer</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Brand brand;<span class="comment">//组合品牌</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Computer</span><span class="params">(Brand brand)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.brand = brand;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">info</span><span class="params">()</span></span>&#123;</span><br><span class="line">        brand.info();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 笔记本电脑</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Desktop</span> <span class="keyword">extends</span> <span class="title">Computer</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Desktop</span><span class="params">(Brand brand)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(brand);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">info</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.info();</span><br><span class="line">        System.out.println(<span class="string">"台式机"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 笔记本电脑</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Laptop</span> <span class="keyword">extends</span> <span class="title">Computer</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Laptop</span><span class="params">(Brand brand)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(brand);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">info</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.info();</span><br><span class="line">        System.out.println(<span class="string">"笔记本电脑"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 平板电脑</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Tablat</span> <span class="keyword">extends</span> <span class="title">Computer</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Tablat</span><span class="params">(Brand brand)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(brand);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">info</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.info();</span><br><span class="line">        System.out.println(<span class="string">"平板电脑"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 测试类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Computer lenovo = <span class="keyword">new</span> Desktop(<span class="keyword">new</span> Lenovo());</span><br><span class="line">        lenovo.info();</span><br><span class="line"></span><br><span class="line">        Computer mac = <span class="keyword">new</span> Desktop(<span class="keyword">new</span> Apple());</span><br><span class="line">        mac.info();</span><br><span class="line"></span><br><span class="line">        Computer lenovo2 = <span class="keyword">new</span> Laptop(<span class="keyword">new</span> Lenovo());</span><br><span class="line">        lenovo2.info();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="模式优缺点"><a href="#模式优缺点" class="headerlink" title="模式优缺点"></a>模式优缺点</h2><h3 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h3><ul>
<li>1、分离抽象接口及其实现部分。提高了比继承更好的解决方案。</li>
<li>2、桥接模式提高了系统的可扩充性，在两个变化维度中任意扩展一个维度，都不需要修改原有系统。</li>
<li>3、实现细节对客户透明，可以对用户隐藏实现细节。</li>
</ul>
<h3 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h3><ul>
<li>1、桥接模式的引入会增加系统的理解与设计难度，由于聚合关联关系建立在抽象层，要求开发者针对抽象进行设计与编程。</li>
<li>2、桥接模式要求正确识别出系统中两个独立变化的维度，因此其使用范围具有一定的局限性。</li>
</ul>
]]></content>
      <categories>
        <category>设计模式</category>
      </categories>
      <tags>
        <tag>设计模式</tag>
      </tags>
  </entry>
  <entry>
    <title>maven依赖范围</title>
    <url>/2020/05/03/maven%E4%BE%9D%E8%B5%96%E8%8C%83%E5%9B%B4/</url>
    <content><![CDATA[<h1 id="依赖范围"><a href="#依赖范围" class="headerlink" title="依赖范围"></a>依赖范围</h1><blockquote>
<p>上一节提到，JUnit依赖的测试范围是test，测试范围用元素scope表示。本节将详细解释什么是测试范围，以及各种测试范围的效果和用途。</p>
<p>首先需要知道，Maven在编译项目主代码的时候需要使用一套classpath。在上例中，编译项目主代码的时候需要用到spring-core，该文件以依赖的方式被引入到classpath中。其次，Maven在编译和执行测试的时候会使用另外一套classpath。上例中的JUnit就是一个很好的例子，该文件也以依赖的方式引入到测试使用的classpath中，不同的是这里的依赖范围是test。最后，实际运行Maven项目的时候，又会使用一套classpath，上例中的spring-core需要在该classpath中，而JUnit则不需要。</p>
<p>依赖范围就是用来控制依赖与这三种classpath（编译classpath、测试classpath、运行classpath）的关系，Maven有以下几种依赖范围：</p>
<p>compile：编译依赖范围。如果没有指定，就会默认使用该依赖范围。使用此依赖范围的Maven依赖，对于编译、测试、运行三种classpath都有效。典型的例子是spring-core，在编译、测试和运行的时候都需要使用该依赖。</p>
<p>test：测试依赖范围。使用此依赖范围的Maven依赖，只对于测试classpath有效，在编译主代码或者运行项目的使用时将无法使用此类依赖。典型的例子是JUnit，它只有在编译测试代码及运行测试的时候才需要。</p>
<p>provided：已提供依赖范围。使用此依赖范围的Maven依赖，对于编译和测试class-path有效，但在运行时无效。典型的例子是servlet-api，编译和测试项目的时候需要该依赖，但在运行项目的时候，由于容器已经提供，就不需要Maven重复地引入一遍。</p>
<p>runtime：运行时依赖范围。使用此依赖范围的Maven依赖，对于测试和运行class-path有效，但在编译主代码时无效。典型的例子是JDBC驱动实现，项目主代码的编译只需要JDK提供的JDBC接口，只有在执行测试或者运行项目的时候才需要实现上述接口的具体JDBC驱动。</p>
<p>system：系统依赖范围。该依赖与三种classpath的关系，和provided依赖范围完全一致。但是，使用system范围的依赖时必须通过systemPath元素显式地指定依赖文件的路径。由于此类依赖不是通过Maven仓库解析的，而且往往与本机系统绑定，可能造成构建</p>
<p>“的不可移植，因此应该谨慎使用。systemPath元素可以引用环境变量，如：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">＜dependency＞</span><br><span class="line">    ＜groupId＞javax.sql＜/groupId＞</span><br><span class="line">    ＜artifactId＞jdbc-stdext＜/artifactId＞</span><br><span class="line">    ＜version＞2.0＜/version＞</span><br><span class="line">    ＜scope＞system＜/scope＞</span><br><span class="line">    ＜systemPath＞$&#123;java.home&#125;/lib/rt.jar＜/systemPath＞</span><br><span class="line">＜/dependency＞</span><br></pre></td></tr></table></figure>

<p>import（Maven 2.0.9及以上）：导入依赖范围。该依赖范围不会对三种classpath产生实际的影响，本书将在8.3.3节介绍Maven依赖和dependencyManagement的时候详细介绍此依赖范围。</p>
</blockquote>
<p>摘录来自: 许晓斌. “Maven实战。” </p>
<p><a href="https://maven.apache.org/guides/introduction/introduction-to-dependency-mechanism.html#dependency-scope" target="_blank" rel="noopener">官网对scope的介绍</a></p>
<h3 id="Dependency-Scope"><a href="#Dependency-Scope" class="headerlink" title="Dependency Scope"></a>Dependency Scope</h3><p>Dependency scope is used to limit the transitivity of a dependency, and also to affect the classpath used for various build tasks.</p>
<p>There are 6 scopes available:</p>
<ul>
<li><strong>compile</strong><br>This is the default scope, used if none is specified. Compile dependencies are available in all classpaths of a project. Furthermore, those dependencies are propagated to dependent projects.</li>
<li><strong>provided</strong><br>This is much like <code>compile</code>, but indicates you expect the JDK or a container to provide the dependency at runtime. For example, when building a web application for the Java Enterprise Edition, you would set the dependency on the Servlet API and related Java EE APIs to scope <code>provided</code> because the web container provides those classes. This scope is only available on the compilation and test classpath, and is not transitive.</li>
<li><strong>runtime</strong><br>This scope indicates that the dependency is not required for compilation, but is for execution. It is in the runtime and test classpaths, but not the compile classpath.</li>
<li><strong>test</strong><br>This scope indicates that the dependency is not required for normal use of the application, and is only available for the test compilation and execution phases. This scope is not transitive.</li>
<li><strong>system</strong><br>This scope is similar to <code>provided</code> except that you have to provide the JAR which contains it explicitly. The artifact is always available and is not looked up in a repository.</li>
<li><strong>import</strong><br>This scope is only supported on a dependency of type <code>pom</code> in the <code>section. It indicates the dependency to be replaced with the effective list of dependencies in the specified POM&#39;s</code> section. Since they are replaced, dependencies with a scope of <code>import</code> do not actually participate in limiting the transitivity of a dependency.</li>
</ul>
<p>Each of the scopes (except for <code>import</code>) affects transitive dependencies in different ways, as is demonstrated in the table below. If a dependency is set to the scope in the left column, transitive dependencies of that dependency with the scope across the top row will result in a dependency in the main project with the scope listed at the intersection. If no scope is listed, it means the dependency will be omitted.</p>
<table>
<thead>
<tr>
<th></th>
<th>compile</th>
<th>provided</th>
<th>runtime</th>
<th>test</th>
</tr>
</thead>
<tbody><tr>
<td>compile</td>
<td>compile(*)</td>
<td>-</td>
<td>runtime</td>
<td>-</td>
</tr>
<tr>
<td>provided</td>
<td>provided</td>
<td>-</td>
<td>provided</td>
<td>-</td>
</tr>
<tr>
<td>runtime</td>
<td>runtime</td>
<td>-</td>
<td>runtime</td>
<td>-</td>
</tr>
<tr>
<td>test</td>
<td>test</td>
<td>-</td>
<td>test</td>
<td>-</td>
</tr>
</tbody></table>
<p><strong>(*) Note:</strong> it is intended that this should be runtime scope instead, so that all compile dependencies must be explicitly listed. However, if a library you depend on extends a class from another library, both must be available at compile time. For this reason, compile time dependencies remain as compile scope even when they are transitive.</p>
]]></content>
  </entry>
  <entry>
    <title>linux打开文件数 too many open files 解决办法</title>
    <url>/2020/05/03/linux%E6%89%93%E5%BC%80%E6%96%87%E4%BB%B6%E6%95%B0-too-many-open-files-%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</url>
    <content><![CDATA[<p><strong>阿里巴巴Java开发手册中规定：</strong></p>
<blockquote>
<p>调大服务器所支持的最大文件句柄数(File Descriptor，简写为fd)。 说明:主流操作系统的设计是将 TCP/UDP 连接采用与文件一样的方式去管理，即一个连接对 应于一个 fd。主流的 linux 服务器默认所支持最大 fd 数量为 1024，当并发连接数很大时很 容易因为 fd 不足而出现“open too many files”错误，导致新的连接无法建立。 建议将 linux 服务器所支持的最大句柄数调高数倍(与服务器的内存数量相关)。</p>
</blockquote>
<p><strong>查看每个用户最大允许打开文件数量</strong></p>
<blockquote>
<p>ulimit -a </p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">core file size          (blocks, -c) 0</span><br><span class="line">data seg size           (kbytes, -d) unlimited</span><br><span class="line">scheduling priority             (-e) 20</span><br><span class="line">file size               (blocks, -f) unlimited</span><br><span class="line">pending signals                 (-i) 16382</span><br><span class="line">max locked memory       (kbytes, -l) 64</span><br><span class="line">max memory size         (kbytes, -m) unlimited</span><br><span class="line">open files                      (-n) 1024</span><br><span class="line">pipe size            (512 bytes, -p) 8</span><br><span class="line">POSIX message queues     (bytes, -q) 819200</span><br><span class="line">real-time priority              (-r) 0</span><br><span class="line">stack size              (kbytes, -s) 8192</span><br><span class="line">cpu time               (seconds, -t) unlimited</span><br><span class="line">max user processes              (-u) unlimited</span><br><span class="line">virtual memory          (kbytes, -v) unlimited</span><br><span class="line">file locks                      (-x) unlimited</span><br></pre></td></tr></table></figure>

<p>查看某一进程的打开文件数量</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ps -ef | grep java</span><br><span class="line">lsof -p 进程号 | wc -l</span><br></pre></td></tr></table></figure>

<p>设置open files数值方法</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ulimit -n 2048</span><br></pre></td></tr></table></figure>

<p><strong><em>这样就可以把当前用户的最大允许打开文件数量设置为2048了，但这种设置方法在重启后会还原为默认值。</em></strong></p>
<p><strong>永久设置方法</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vim &#x2F;etc&#x2F;security&#x2F;limits.conf</span><br><span class="line">在最后加入</span><br><span class="line">* soft nofile 4096</span><br><span class="line">* hard nofile 4096</span><br></pre></td></tr></table></figure>

<p><strong><em>最前的表示所有用户，可根据需要设置某一用户，改完后注销一下就能生效。</em></strong></p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>几个前端技术名词整理</title>
    <url>/2020/05/01/%E5%87%A0%E4%B8%AA%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF%E5%90%8D%E8%AF%8D%E6%95%B4%E7%90%86/</url>
    <content><![CDATA[<h1 id="Babel-是什么？"><a href="#Babel-是什么？" class="headerlink" title="Babel 是什么？"></a>Babel 是什么？</h1><h2 id="Babel-是一个-JavaScript-编译器"><a href="#Babel-是一个-JavaScript-编译器" class="headerlink" title="Babel 是一个 JavaScript 编译器"></a>Babel 是一个 JavaScript 编译器</h2><p>Babel 是一个工具链，主要用于将 ECMAScript 2015+ 版本的代码转换为向后兼容的 JavaScript 语法，以便能够运行在当前和旧版本的浏览器或其他环境中。下面列出的是 Babel 能为你做的事情：</p>
<ul>
<li>语法转换</li>
<li>通过 Polyfill 方式在目标环境中添加缺失的特性 (通过 <a href="https://www.babeljs.cn/docs/babel-polyfill" target="_blank" rel="noopener">@babel/polyfill</a> 模块)</li>
<li>源码转换 (codemods)</li>
<li>更多！ (查看这些 <a href="https://www.babeljs.cn/videos.html" target="_blank" rel="noopener">视频</a> 获得启发)</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Babel 输入： ES2015 箭头函数</span></span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>].map(<span class="function">(<span class="params">n</span>) =&gt;</span> n + <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Babel 输出： ES5 语法实现的同等功能</span></span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>].map(<span class="function"><span class="keyword">function</span>(<span class="params">n</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> n + <span class="number">1</span>;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<p>参考地址：<a href="https://www.babeljs.cn/" target="_blank" rel="noopener">https://www.babeljs.cn/</a></p>
<h1 id="ESLint"><a href="#ESLint" class="headerlink" title="ESLint"></a>ESLint</h1><h2 id="About"><a href="#About" class="headerlink" title="About"></a>About</h2><p>ESLint 是一个开源的 JavaScript 代码检查工具，由 Nicholas C. Zakas 于2013年6月创建。代码检查是一种静态的分析，常用于寻找有问题的模式或者代码，并且不依赖于具体的编码风格。对大多数编程语言来说都会有代码检查，一般来说编译程序会内置检查工具。</p>
<p>JavaScript 是一个动态的弱类型语言，在开发中比较容易出错。因为没有编译程序，为了寻找 JavaScript 代码错误通常需要在执行过程中不断调试。像 ESLint 这样的可以让程序员在编码的过程中发现问题而不是在执行的过程中。</p>
<p>ESLint 的初衷是为了让程序员可以创建自己的检测规则。ESLint 的所有规则都被设计成可插入的。ESLint 的默认规则与其他的插件并没有什么区别，规则本身和测试可以依赖于同样的模式。为了便于人们使用，ESLint 内置了一些规则，当然，你可以在使用过程中自定义规则。</p>
<p>ESLint 使用 Node.js 编写，这样既可以有一个快速的运行环境的同时也便于安装。</p>
<h2 id="Philosophy"><a href="#Philosophy" class="headerlink" title="Philosophy"></a>Philosophy</h2><p>所有都是可拔插的</p>
<ul>
<li>内置规则和自定义规则共用一套规则 API</li>
<li>内置的格式化方法和自定义的格式化方法共用一套格式化 API</li>
<li>额外的规则和格式化方法能够在运行时指定</li>
<li>规则和对应的格式化方法并不强制捆绑使用</li>
</ul>
<p>每条规则:</p>
<ul>
<li>各自独立</li>
<li>可以开启或关闭（没有什么可以被认为“太重要所以不能关闭”）</li>
<li>可以将结果设置成警告或者错误</li>
</ul>
<p>另外:</p>
<ul>
<li>ESLint 并不推荐任何编码风格，规则是自由的</li>
<li>所有内置规则都是泛化的</li>
</ul>
<p>项目:</p>
<ul>
<li>通过丰富文档减少沟通成本</li>
<li>尽可能的简单透明</li>
<li>相信测试的重要性</li>
</ul>
<p>参考地址：<a href="http://eslint.cn/docs/user-guide/getting-started" target="_blank" rel="noopener">http://eslint.cn/docs/user-guide/getting-started</a></p>
<h1 id="webpack"><a href="#webpack" class="headerlink" title="webpack"></a>webpack</h1><h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><p>本质上，<strong>webpack</strong> 是一个现代 JavaScript 应用程序的<em>静态模块打包工具</em>。当 webpack 处理应用程序时，它会在内部构建一个 <a href="https://webpack.docschina.org/concepts/dependency-graph/" target="_blank" rel="noopener">依赖图(dependency graph)</a>，此依赖图会映射项目所需的每个模块，并生成一个或多个 <em>bundle</em>。</p>
<blockquote>
<p>可以在 <a href="https://webpack.docschina.org/concepts/modules" target="_blank" rel="noopener">这里</a> 了解更多关于 JavaScript 模块和 webpack 模块的信息。</p>
</blockquote>
<p>从 v4.0.0 开始，<strong>webpack 可以不用再引入一个配置文件</strong>来打包项目，然而，但它仍然有着 <a href="https://webpack.docschina.org/configuration" target="_blank" rel="noopener">高度可配置性</a>，可以很好满足你的需求。</p>
<p>在开始前你需要先理解一些<strong>核心概念</strong>：</p>
<ul>
<li><a href="https://webpack.docschina.org/concepts/#entry" target="_blank" rel="noopener">入口(entry)</a></li>
<li><a href="https://webpack.docschina.org/concepts/#output" target="_blank" rel="noopener">输出(output)</a></li>
<li><a href="https://webpack.docschina.org/concepts/#loaders" target="_blank" rel="noopener">loader</a></li>
<li><a href="https://webpack.docschina.org/concepts/#plugins" target="_blank" rel="noopener">插件(plugin)</a></li>
<li><a href="https://webpack.docschina.org/concepts/#mode" target="_blank" rel="noopener">模式(mode)</a></li>
<li><a href="https://webpack.docschina.org/concepts/#browser-compatibility" target="_blank" rel="noopener">浏览器兼容性(browser compatibility)</a></li>
</ul>
<p>本文档旨在给出这些概念的<strong>高度</strong>概述，同时提供具体概念的详尽相关用例。</p>
<p>为了更好地理解模块打包工具背后的理念，以及在底层它们是如何运作的，请参考以下资源：</p>
<ul>
<li><a href="https://www.youtube.com/watch?v=UNMkLHzofQI" target="_blank" rel="noopener">手动打包一个应用程序</a></li>
<li><a href="https://www.youtube.com/watch?v=Gc9-7PBqOC8" target="_blank" rel="noopener">实时创建一个简单打包工具</a></li>
<li><a href="https://github.com/ronami/minipack" target="_blank" rel="noopener">一个简单打包工具的详细说明</a></li>
</ul>
<h2 id="入口-entry"><a href="#入口-entry" class="headerlink" title="入口(entry)"></a>入口(entry)</h2><p><strong>入口起点(entry point)</strong>指示 webpack 应该使用哪个模块，来作为构建其内部 <em><a href="https://webpack.docschina.org/concepts/dependency-graph/" target="_blank" rel="noopener">依赖图(dependency graph)</a></em> 的开始。进入入口起点后，webpack 会找出有哪些模块和库是入口起点（直接和间接）依赖的。</p>
<p>默认值是 <code>./src/index.js</code>，但你可以通过在 <a href="https://webpack.docschina.org/configuration" target="_blank" rel="noopener">webpack configuration</a> 中配置 <strong>entry</strong> 属性，来指定一个（或多个）不同的入口起点。例如：</p>
<p><strong>webpack.config.js</strong></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  entry: <span class="string">'./path/to/my/entry/file.js'</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>在 <a href="https://webpack.docschina.org/concepts/entry-points" target="_blank" rel="noopener">入口起点</a> 章节可以了解更多信息。</p>
</blockquote>
<h2 id="输出-output"><a href="#输出-output" class="headerlink" title="输出(output)"></a>输出(output)</h2><p><strong>output</strong> 属性告诉 webpack 在哪里输出它所创建的 <em>bundle</em>，以及如何命名这些文件。主要输出文件的默认值是 <code>./dist/main.js</code>，其他生成文件默认放置在 <code>./dist</code> 文件夹中。</p>
<p>你可以通过在配置中指定一个 <code>output</code> 字段，来配置这些处理过程：</p>
<p><strong>webpack.config.js</strong></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  entry: <span class="string">'./path/to/my/entry/file.js'</span>,</span><br><span class="line">  output: &#123;</span><br><span class="line">    path: path.resolve(__dirname, <span class="string">'dist'</span>),</span><br><span class="line">    filename: <span class="string">'my-first-webpack.bundle.js'</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<p>在上面的示例中，我们通过 <code>output.filename</code> 和 <code>output.path</code> 属性，来告诉 webpack bundle 的名称，以及我们想要 bundle 生成(emit)到哪里。可能你想要了解在代码最上面导入的 path 模块是什么，它是一个 <a href="https://nodejs.org/api/modules.html" target="_blank" rel="noopener">Node.js 核心模块</a>，用于操作文件路径。</p>
<blockquote>
<p><code>output</code> 属性还有 <a href="https://webpack.docschina.org/configuration/output" target="_blank" rel="noopener">许多可配置的特性</a>，如果你想要了解更多其背后的概念，你可以通过 <a href="https://webpack.docschina.org/concepts/output" target="_blank" rel="noopener">阅读输出章节</a> 来了解。</p>
</blockquote>
<h2 id="loader"><a href="#loader" class="headerlink" title="loader"></a>loader</h2><p>webpack 只能理解 JavaScript 和 JSON 文件。<strong>loader</strong> 让 webpack 能够去处理其他类型的文件，并将它们转换为有效 <a href="https://webpack.docschina.org/concepts/modules" target="_blank" rel="noopener">模块</a>，以供应用程序使用，以及被添加到依赖图中。</p>
<blockquote>
<p>注意，loader 能够 <code>import</code> 导入任何类型的模块（例如 <code>.css</code> 文件），这是 webpack 特有的功能，其他打包程序或任务执行器的可能并不支持。我们认为这种语言扩展是很有必要的，因为这可以使开发人员创建出更准确的依赖关系图。</p>
</blockquote>
<p>在更高层面，在 webpack 的配置中 <strong>loader</strong> 有两个属性：</p>
<ol>
<li><code>test</code> 属性，用于标识出应该被对应的 loader 进行转换的某个或某些文件。</li>
<li><code>use</code> 属性，表示进行转换时，应该使用哪个 loader。</li>
</ol>
<p><strong>webpack.config.js</strong></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  output: &#123;</span><br><span class="line">    filename: <span class="string">'my-first-webpack.bundle.js'</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="built_in">module</span>: &#123;</span><br><span class="line">    rules: [</span><br><span class="line">      &#123; <span class="attr">test</span>: <span class="regexp">/\.txt$/</span>, <span class="attr">use</span>: <span class="string">'raw-loader'</span> &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<p>以上配置中，对一个单独的 module 对象定义了 <code>rules</code> 属性，里面包含两个必须属性：<code>test</code> 和 <code>use</code>。这告诉 webpack 编译器(compiler) 如下信息：</p>
<blockquote>
<p>“嘿，webpack 编译器，当你碰到「在 <code>require()</code>/<code>import</code> 语句中被解析为 ‘.txt’ 的路径」时，在你对它打包之前，先 <strong>使用</strong> <code>raw-loader</code> 转换一下。”</p>
</blockquote>
<blockquote>
<p>重要的是要记住，在 webpack 配置中定义 rules 时，要定义在 <code>module.rules</code> 而不是 <code>rules</code> 中。为了使你受益于此，如果没有按照正确方式去做，webpack 会给出警告。</p>
</blockquote>
<blockquote>
<p>请记住，使用正则表达式匹配文件时，你不要为它添加引号。也就是说，<code>/\.txt$/</code> 与 <code>&#39;/\.txt$/&#39;</code>/ <code>&quot;/\.txt$/&quot;</code> 不一样。前者指示 webpack 匹配任何以 .txt 结尾的文件，后者指示 webpack 匹配具有绝对路径 ‘.txt’ 的单个文件; 这可能不符合你的意图。</p>
</blockquote>
<p>在使用 loader 时，可以阅读 <a href="https://webpack.docschina.org/concepts/loaders" target="_blank" rel="noopener">loader 章节</a> 查看更深入的自定义配置。</p>
<h2 id="插件-plugin"><a href="#插件-plugin" class="headerlink" title="插件(plugin)"></a>插件(plugin)</h2><p>loader 用于转换某些类型的模块，而插件则可以用于执行范围更广的任务。包括：打包优化，资源管理，注入环境变量。</p>
<blockquote>
<p><a href="https://webpack.docschina.org/api/plugins" target="_blank" rel="noopener">插件接口(plugin interface)</a> 功能极其强大，可以用来处理各种各样的任务。</p>
</blockquote>
<p>想要使用一个插件，你只需要 <code>require()</code> 它，然后把它添加到 <code>plugins</code> 数组中。多数插件可以通过选项(option)自定义。你也可以在一个配置文件中因为不同目的而多次使用同一个插件，这时需要通过使用 <code>new</code> 操作符来创建它的一个实例。</p>
<p><strong>webpack.config.js</strong></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> HtmlWebpackPlugin = <span class="built_in">require</span>(<span class="string">'html-webpack-plugin'</span>); <span class="comment">// 通过 npm 安装</span></span><br><span class="line"><span class="keyword">const</span> webpack = <span class="built_in">require</span>(<span class="string">'webpack'</span>); <span class="comment">// 用于访问内置插件</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  <span class="built_in">module</span>: &#123;</span><br><span class="line">    rules: [</span><br><span class="line">      &#123; <span class="attr">test</span>: <span class="regexp">/\.txt$/</span>, <span class="attr">use</span>: <span class="string">'raw-loader'</span> &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">  plugins: [</span><br><span class="line">    <span class="keyword">new</span> HtmlWebpackPlugin(&#123;<span class="attr">template</span>: <span class="string">'./src/index.html'</span>&#125;)</span><br><span class="line">  ]</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<p>在上面的示例中，<code>html-webpack-plugin</code> 为应用程序生成 HTML 一个文件，并自动注入所有生成的 bundle。</p>
<blockquote>
<p>webpack 提供许多开箱可用的插件！查阅 <a href="https://webpack.docschina.org/plugins" target="_blank" rel="noopener">插件列表</a> 获取更多。</p>
</blockquote>
<p>在 webpack 配置中使用插件是简单直接的，然而也有很多值得我们进一步探讨的用例。<a href="https://webpack.docschina.org/concepts/plugins" target="_blank" rel="noopener">查看这里了解更多</a>。</p>
<h2 id="模式-mode"><a href="#模式-mode" class="headerlink" title="模式(mode)"></a>模式(mode)</h2><p>通过选择 <code>development</code>, <code>production</code> 或 <code>none</code> 之中的一个，来设置 <code>mode</code> 参数，你可以启用 webpack 内置在相应环境下的优化。其默认值为 <code>production</code>。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  mode: <span class="string">'production'</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<p>查看 <a href="https://webpack.docschina.org/concepts/mode" target="_blank" rel="noopener">模式配置</a> 章节了解其详细内容和每个值所作的优化。</p>
<h2 id="浏览器兼容性-browser-compatibility"><a href="#浏览器兼容性-browser-compatibility" class="headerlink" title="浏览器兼容性(browser compatibility)"></a>浏览器兼容性(browser compatibility)</h2><p>webpack 支持所有符合 <a href="https://kangax.github.io/compat-table/es5/" target="_blank" rel="noopener">ES5 标准</a> 的浏览器（不支持 IE8 及以下版本）。webpack 的 <code>import()</code> 和 <code>require.ensure()</code> 需要 <code>Promise</code>。如果你想要支持旧版本浏览器，在使用这些表达式之前，还需要 <a href="https://webpack.docschina.org/guides/shimming/" target="_blank" rel="noopener">提前加载 polyfill</a>。</p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>Babel</tag>
      </tags>
  </entry>
  <entry>
    <title>开源项目领课试玩</title>
    <url>/2020/04/30/%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE%E9%A2%86%E8%AF%BE%E8%AF%95%E7%8E%A9/</url>
    <content><![CDATA[<p><strong>启动顺序：注册中心 → 配置中心→ 模块工程 → 定时器 → 网关工程</strong> </p>
<p>1.启动注册中心</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">com.roncoo.education.server.eureka.ServerEurekaApplication</span><br></pre></td></tr></table></figure>

<p>2.启动配置中心</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">com.roncoo.education.service.config.ServerConfigApplication</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>单向链表</title>
    <url>/2020/04/27/%E5%8D%95%E5%90%91%E9%93%BE%E8%A1%A8/</url>
    <content><![CDATA[<h2 id="链表-Linked-List-介绍"><a href="#链表-Linked-List-介绍" class="headerlink" title="链表(Linked List)介绍"></a>链表(Linked List)介绍</h2><p>链表是有序的列表，但是它在内存中是存储如下</p>
<p><img src="https://note.youdao.com/yws/public/resource/00fa35539db96d9324497e53f7f7bab4/xmlnote/250B078E564E4853A677EC5EA904AD41/5151" alt="链表"></p>
<p>小结:</p>
<p>1)链表是以节点的方式来存储,是链式存储</p>
<p>2)每个节点包含 data 域， next 域：指向下一个节点.</p>
<p>3)如图：发现链表的<strong>各个节点不一定是连续存储</strong>.</p>
<p>链表分带头节点的链表和没有头节点的链表，根据实际的需求来确定</p>
<h2 id="单链表介绍"><a href="#单链表介绍" class="headerlink" title="单链表介绍"></a>单链表介绍</h2><p>单链表(带头结点) 逻辑结构示意图如下</p>
<p><img src="https://note.youdao.com/yws/public/resource/00fa35539db96d9324497e53f7f7bab4/xmlnote/B8A4B86BC6844789AE8953161922B3F3/5154" alt="单链表"></p>
<h2 id="单链表的应用实例"><a href="#单链表的应用实例" class="headerlink" title="单链表的应用实例"></a>单链表的应用实例</h2><p>使用带head头的<strong>单向链表</strong>实现 –水浒英雄排行榜管理</p>
<p>1)完成对英雄人物的<strong>增删改查</strong>操作， 注: 删除和修改,查找可以考虑学员独立完成，也可带学员完成</p>
<p>2)第一种方法在添加英雄时，直接添加到链表的尾部</p>
<p>第二种方式在添加英雄时，根据排名将英雄插入到指定位置 (如果有这个排名，则添加失败，并给出提示)</p>
]]></content>
      <categories>
        <category>数据结构和算法</category>
      </categories>
      <tags>
        <tag>数据结构</tag>
      </tags>
  </entry>
  <entry>
    <title>队列-数组模拟队列</title>
    <url>/2020/04/27/%E9%98%9F%E5%88%97/</url>
    <content><![CDATA[<h2 id="队列介绍"><a href="#队列介绍" class="headerlink" title="队列介绍"></a>队列介绍</h2><p>​    队列是一个有序列表，可以用<strong>数组</strong>或是<strong>链表</strong>来实现。</p>
<p>​    遵循<strong>先入先出</strong>的原则。即：先存入队列的数据，要先取出。后存入的要后取出</p>
<p>​    示意图：(使用数组模拟队列示意图)</p>
<p><img src="https://note.youdao.com/yws/public/resource/d979a0c95522a509f98b585257e09737/xmlnote/5D194BCE0D1E4BAEB0008D787140D194/5145" alt="队列"></p>
<h2 id="数组模拟队列"><a href="#数组模拟队列" class="headerlink" title="数组模拟队列"></a><strong>数组模拟队列</strong></h2><p>​    队列本身是有序列表，若使用数组的结构来存储队列的数据，则队列数组的声明如下图, 其中 <strong>maxSize</strong> 是该队列的最大容量。</p>
<p>​    因为队列的输出、输入是分别从前后端来处理，因此需要两个变量<strong>front</strong>及<strong>rear</strong>分别记录队列前后端的下标，front 会随着数据输出而改变，而 rear则是随着数据输入而改变。</p>
<p>​    当我们将数据存入队列时称为”addQueue”，addQueue 的处理需要有两个步骤：</p>
<p>思路分析</p>
<p>1)将尾指针往后移：rear+1 , 当front == rear 【空】</p>
<p>2)若尾指针 rear 小于队列的最大下标 maxSize-1，则将数据存入 rear所指的数组元素中，否则无法存入数据。 rear == maxSize - 1[队列满]</p>
<blockquote>
<p><strong>1.rear 是队列最后[含]</strong></p>
<p><strong>2.front 是队列最前元素[不含]</strong></p>
</blockquote>
<p><strong>数组模拟队列</strong></p>
<blockquote>
<p>出队列操作getQueue</p>
<p>显示队列的情况showQueue</p>
<p>查看队列头元素headQueue</p>
<p>退出系统exit</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.doubledumbao.sparsearray.queue;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 测试队列</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ArrayQueueDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        Scanner scanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">char</span> key = <span class="string">' '</span>;<span class="comment">//接收用户输入</span></span><br><span class="line">        ArrayQueue arrayQueue = <span class="keyword">new</span> ArrayQueue(<span class="number">3</span>);</span><br><span class="line">        <span class="keyword">boolean</span> loop = <span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">while</span>(loop)&#123;</span><br><span class="line">            System.out.println(<span class="string">"a(add):添加数据到队列"</span>);</span><br><span class="line">            System.out.println(<span class="string">"s(show):显示队列"</span>);</span><br><span class="line">            System.out.println(<span class="string">"e(exit):退出程序"</span>);</span><br><span class="line">            System.out.println(<span class="string">"g(get):从队列取出数据"</span>);</span><br><span class="line">            System.out.println(<span class="string">"h(head):查看队列头的数据"</span>);</span><br><span class="line">            key = scanner.next().charAt(<span class="number">0</span>);<span class="comment">//接收一个字符</span></span><br><span class="line">            <span class="keyword">switch</span> (key)&#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">'a'</span>:</span><br><span class="line">                    System.out.println(<span class="string">"输入一个数："</span>);</span><br><span class="line">                    <span class="keyword">int</span> val = scanner.nextInt();</span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        arrayQueue.addQueue(val);</span><br><span class="line">                    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                        System.out.println(e.getMessage());</span><br><span class="line">                    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">'s'</span>:</span><br><span class="line">                    arrayQueue.showQueue();</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">'g'</span>:</span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        System.out.println(arrayQueue.getQueue());</span><br><span class="line">                    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                        System.out.println(e.getMessage());</span><br><span class="line">                    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">'h'</span>:</span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        System.out.println(arrayQueue.headQueue());</span><br><span class="line">                    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                        System.out.println(e.getMessage());</span><br><span class="line">                    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">'e'</span>:</span><br><span class="line">                    loop = <span class="keyword">false</span>;</span><br><span class="line">                    scanner.close();</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 数组模拟队列</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ArrayQueue</span></span>&#123;</span><br><span class="line">    <span class="comment">//队列容量</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> maxSize;</span><br><span class="line">    <span class="comment">//队列前端的下标</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> front;</span><br><span class="line">    <span class="comment">//队列后端的下标</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> rear;</span><br><span class="line">    <span class="comment">//存储数据</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span>[] arr;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ArrayQueue</span><span class="params">(<span class="keyword">int</span> maxSize)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.maxSize = maxSize;</span><br><span class="line">        <span class="keyword">this</span>.front = -<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">this</span>.rear= -<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">this</span>.arr = <span class="keyword">new</span> <span class="keyword">int</span>[maxSize];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 判断队列是否满了</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">ifFull</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> rear == maxSize -<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 判断队列是否为空</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isEmpty</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> rear == front;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 向队列中添加数据</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> a</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addQueue</span><span class="params">(<span class="keyword">int</span> a)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(ifFull())&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"队列已满，无法添加数据"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        rear++;</span><br><span class="line">        <span class="keyword">this</span>.arr[rear] = a;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 从队列中取出一个数据</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getQueue</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(isEmpty())&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"队列为空，无法取出数据"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        front ++;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.arr[front];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 展示队列数据</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">showQueue</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(isEmpty())&#123;</span><br><span class="line">            System.out.println(<span class="string">"队列为空"</span>);</span><br><span class="line">            <span class="keyword">return</span> ;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="keyword">this</span>.arr.length; i++) &#123;</span><br><span class="line">            System.out.printf(<span class="string">"arr[%d] = %d \n"</span>,i,arr[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查看队列头</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">headQueue</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(isEmpty())&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"队列为空"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.arr[front+<span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>问题分析并优化</strong></p>
<p> 1) 目前数组使用一次就不能用， 没有达到复用的效果<br> 2) 将这个数组使用算法，改进成一个环形的队列 取模:%</p>
<hr>
<h2 id="数组模拟环形队列"><a href="#数组模拟环形队列" class="headerlink" title="数组模拟环形队列"></a><strong>数组模拟环形队列</strong></h2><p>对前面的数组模拟队列的优化，充分利用数组. 因此将数组看做是一个环形的。(通过取模的方式来实现即可)</p>
<p>分析说明：</p>
<p>1)尾索引的下一个为头索引时表示队列满，即将队列容量<strong>空出一个</strong>作为约定,这个在做判断队列满的<br> 时候需要注意 (rear + 1) % maxSize == front 满]</p>
<p>2)rear == front [空]</p>
<p><img src="https://note.youdao.com/yws/public/resource/d979a0c95522a509f98b585257e09737/xmlnote/A53FC9CA7EF14CAA81A1B9B61DD4763A/5147" alt="使用数组模拟唤醒队列的思路分析"></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.doubledumbao.sparsearray.queue;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CircleArrayQueueDemo</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner scanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">char</span> key = <span class="string">' '</span>;<span class="comment">//接收用户输入</span></span><br><span class="line">        CircleArrayQueue arrayQueue = <span class="keyword">new</span> CircleArrayQueue(<span class="number">4</span>);</span><br><span class="line">        <span class="keyword">boolean</span> loop = <span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">while</span> (loop) &#123;</span><br><span class="line">            System.out.println(<span class="string">"a(add):添加数据到队列"</span>);</span><br><span class="line">            System.out.println(<span class="string">"s(show):显示队列"</span>);</span><br><span class="line">            System.out.println(<span class="string">"e(exit):退出程序"</span>);</span><br><span class="line">            System.out.println(<span class="string">"g(get):从队列取出数据"</span>);</span><br><span class="line">            System.out.println(<span class="string">"h(head):查看队列头的数据"</span>);</span><br><span class="line">            key = scanner.next().charAt(<span class="number">0</span>);<span class="comment">//接收一个字符</span></span><br><span class="line">            <span class="keyword">switch</span> (key) &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">'a'</span>:</span><br><span class="line">                    System.out.println(<span class="string">"输入一个数："</span>);</span><br><span class="line">                    <span class="keyword">int</span> val = scanner.nextInt();</span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        arrayQueue.addQueue(val);</span><br><span class="line">                    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                        System.out.println(e.getMessage());</span><br><span class="line">                    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">'s'</span>:</span><br><span class="line">                    arrayQueue.showQueue();</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">'g'</span>:</span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        System.out.println(arrayQueue.getQueue());</span><br><span class="line">                    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                        System.out.println(e.getMessage());</span><br><span class="line">                    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">'h'</span>:</span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        System.out.println(arrayQueue.headQueue());</span><br><span class="line">                    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                        System.out.println(e.getMessage());</span><br><span class="line">                    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">'e'</span>:</span><br><span class="line">                    loop = <span class="keyword">false</span>;</span><br><span class="line">                    scanner.close();</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 数组模拟环形队列</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CircleArrayQueue</span> </span>&#123;</span><br><span class="line">    <span class="comment">//队列容量</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> maxSize;</span><br><span class="line">    <span class="comment">//队列前端的下标</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> front;</span><br><span class="line">    <span class="comment">//队列后端的下标+1</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> rear;</span><br><span class="line">    <span class="comment">//存储数据</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span>[] arr;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">CircleArrayQueue</span><span class="params">(<span class="keyword">int</span> maxSize)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.maxSize = maxSize;</span><br><span class="line">        <span class="keyword">this</span>.arr = <span class="keyword">new</span> <span class="keyword">int</span>[maxSize];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 判断队列是否满了</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">ifFull</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> front == (rear + <span class="number">1</span>) % maxSize;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 判断队列是否为空</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isEmpty</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> rear == front;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 向队列中添加数据</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> a</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addQueue</span><span class="params">(<span class="keyword">int</span> a)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (ifFull()) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"队列已满，无法添加数据"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//直接将数据加入</span></span><br><span class="line">        <span class="keyword">this</span>.arr[rear] = a;</span><br><span class="line">        <span class="comment">//将rear后移，这里必须考虑取模</span></span><br><span class="line">        rear = (rear + <span class="number">1</span>) % maxSize;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 从队列中取出一个数据</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getQueue</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (isEmpty()) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"队列为空，无法取出数据"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//这里需要分析出front是指向队列的第一个元素</span></span><br><span class="line">        <span class="comment">//1。先把front对应的值保留到一个临时变量</span></span><br><span class="line">        <span class="comment">//2。将front后移，考虑取模</span></span><br><span class="line">        <span class="comment">//3。把临时保存的变量返回</span></span><br><span class="line">        <span class="keyword">int</span> value = arr[front];</span><br><span class="line">        front = (front+<span class="number">1</span>) % maxSize;</span><br><span class="line">        <span class="keyword">return</span> value;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 展示队列数据</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">showQueue</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (isEmpty()) &#123;</span><br><span class="line">            System.out.println(<span class="string">"队列为空"</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//思路：从front开始遍历，遍历多少个元素</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = front; i &lt; front+size(); i++) &#123;</span><br><span class="line">            System.out.printf(<span class="string">"arr[%d] = %d \n"</span>, i%maxSize, arr[i%maxSize]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查看队列头</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">headQueue</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (isEmpty()) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"队列为空"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.arr[front];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取队列真实容量</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">size</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> (rear+maxSize-front)%maxSize;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>数据结构和算法</category>
      </categories>
      <tags>
        <tag>数据结构</tag>
      </tags>
  </entry>
  <entry>
    <title>学习数据结构和算法的网站</title>
    <url>/2020/04/27/%E5%AD%A6%E4%B9%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%92%8C%E7%AE%97%E6%B3%95%E7%9A%84%E7%BD%91%E7%AB%99/</url>
    <content><![CDATA[<h1 id="数据结构和算法可视化网站："><a href="#数据结构和算法可视化网站：" class="headerlink" title="数据结构和算法可视化网站："></a>数据结构和算法可视化网站：</h1><h6 id="数据结构和算法动态可视化-https-visualgo-net-zh"><a href="#数据结构和算法动态可视化-https-visualgo-net-zh" class="headerlink" title="数据结构和算法动态可视化 https://visualgo.net/zh"></a>数据结构和算法动态可视化 <a href="https://visualgo.net/zh" target="_blank" rel="noopener">https://visualgo.net/zh</a></h6><h6 id="Data-Structure-Visualizations-https-www-cs-usfca-edu-galles-visualization-Algorithms-html"><a href="#Data-Structure-Visualizations-https-www-cs-usfca-edu-galles-visualization-Algorithms-html" class="headerlink" title="Data Structure Visualizations https://www.cs.usfca.edu/~galles/visualization/Algorithms.html"></a>Data Structure Visualizations <a href="https://www.cs.usfca.edu/~galles/visualization/Algorithms.html" target="_blank" rel="noopener">https://www.cs.usfca.edu/~galles/visualization/Algorithms.html</a></h6><h6 id="尚硅谷Java数据结构与java算法，韩顺平数据结构与算法-https-www-bilibili-com-video-BV1E4411H73v"><a href="#尚硅谷Java数据结构与java算法，韩顺平数据结构与算法-https-www-bilibili-com-video-BV1E4411H73v" class="headerlink" title="尚硅谷Java数据结构与java算法，韩顺平数据结构与算法 https://www.bilibili.com/video/BV1E4411H73v"></a>尚硅谷Java数据结构与java算法，韩顺平数据结构与算法 <a href="https://www.bilibili.com/video/BV1E4411H73v" target="_blank" rel="noopener">https://www.bilibili.com/video/BV1E4411H73v</a></h6>]]></content>
      <categories>
        <category>数据结构和算法</category>
      </categories>
      <tags>
        <tag>数据结构</tag>
      </tags>
  </entry>
  <entry>
    <title>稀疏sparsearray数组</title>
    <url>/2020/04/27/%E7%A8%80%E7%96%8Fsparsearray%E6%95%B0%E7%BB%84/</url>
    <content><![CDATA[<p><strong>先看一个实际的需求</strong></p>
<p>编写的五子棋程序中，有<strong>存盘退出</strong>和续上盘的功能。</p>
<p><img src="https://note.youdao.com/yws/public/resource/40270b32c0f73e2f81cca917c61dfdaf/xmlnote/5353EB007E384DACB2BE013B2B6FA800/5124" alt="wuziq"></p>
<p><strong>分析问题:</strong></p>
<p>因为该二维数组的很多值是默认值0, 因此记录了很多没有意义的数据.-&gt;稀疏数组。</p>
<p><strong>基本介绍</strong></p>
<p>当一个数组中大部分元素为０，或者为同一个值的数组时，可以使用稀疏数组来保存该数组。</p>
<p>稀疏数组的处理方法是:</p>
<p>1)记录数组一共有几行几列，有多少个不同的值</p>
<p>2)把具有不同值的元素的行列及值记录在一个小规模的数组中，从而缩小程序的规模</p>
<p><strong>稀疏数组和二维数组转换思路</strong></p>
<p><img src="https://note.youdao.com/yws/public/resource/40270b32c0f73e2f81cca917c61dfdaf/xmlnote/619DAE9207EB44C4ABC16E296FC54B98/5135" alt="3"></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.doubledumbao.sparsearray;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 二维数组和稀疏数组互转</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SparseArray</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 0: 表示没有棋子， 1 表示 黑子 2 表蓝子</span></span><br><span class="line">        <span class="keyword">int</span>[][] doubleDimensionalArray = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">11</span>][<span class="number">11</span>];</span><br><span class="line">        doubleDimensionalArray[<span class="number">1</span>][<span class="number">2</span>] = <span class="number">1</span>;</span><br><span class="line">        doubleDimensionalArray[<span class="number">2</span>][<span class="number">3</span>] = <span class="number">2</span>;</span><br><span class="line">        doubleDimensionalArray[<span class="number">4</span>][<span class="number">7</span>] = <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"二维数组："</span>);</span><br><span class="line">        <span class="comment">//实际数据个数</span></span><br><span class="line">        <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span>[] arr : doubleDimensionalArray) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> data : arr) &#123;</span><br><span class="line">                <span class="keyword">if</span>(data!=<span class="number">0</span>)&#123;</span><br><span class="line">                    sum ++;</span><br><span class="line">                &#125;</span><br><span class="line">                System.out.printf(<span class="string">"%d\t"</span>, data);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">"--------------------"</span>);</span><br><span class="line">        System.out.println(<span class="string">"将二维数组转成稀疏数组"</span>);</span><br><span class="line">        System.out.println(<span class="string">"实际数据个数："</span>+sum);</span><br><span class="line">        <span class="comment">//定义稀疏数组</span></span><br><span class="line">        <span class="keyword">int</span>[][] sparseArr = <span class="keyword">new</span> <span class="keyword">int</span> [sum+<span class="number">1</span>][<span class="number">3</span>];</span><br><span class="line">        sparseArr[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">11</span>;</span><br><span class="line">        sparseArr[<span class="number">0</span>][<span class="number">1</span>] = <span class="number">11</span>;</span><br><span class="line">        sparseArr[<span class="number">0</span>][<span class="number">2</span>] = sum;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; doubleDimensionalArray.length; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; doubleDimensionalArray[i].length; j++) &#123;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span>(doubleDimensionalArray[i][j]!=<span class="number">0</span>)&#123;</span><br><span class="line">                    count ++;</span><br><span class="line">                    sparseArr[count][<span class="number">0</span>] = i;</span><br><span class="line">                    sparseArr[count][<span class="number">1</span>] = j;</span><br><span class="line">                    sparseArr[count][<span class="number">2</span>] = doubleDimensionalArray[i][j];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//将稀疏数组输出到文件中</span></span><br><span class="line">        File file = <span class="keyword">new</span> File(<span class="string">"map.data"</span>);</span><br><span class="line">        writeObjectToFile(sparseArr,file);</span><br><span class="line">        <span class="comment">//从文件中读取稀疏数组</span></span><br><span class="line">        <span class="keyword">int</span>[][] sparseArr1 = (<span class="keyword">int</span>[][]) readFileToObject(file);</span><br><span class="line">        System.out.println(<span class="string">"打印稀疏数组："</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; sparseArr1.length; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; sparseArr1[i].length; j++) &#123;</span><br><span class="line">                System.out.printf(<span class="string">"%d\t"</span>,sparseArr1[i][j]);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">"将稀疏数组转成二维数组"</span>);</span><br><span class="line">        <span class="comment">//1.读取稀疏数组的第一行，创建二维数组</span></span><br><span class="line">        <span class="keyword">int</span>[][] arr2 = <span class="keyword">new</span> <span class="keyword">int</span>[sparseArr1[<span class="number">0</span>][<span class="number">0</span>]][sparseArr1[<span class="number">0</span>][<span class="number">1</span>]];</span><br><span class="line">        <span class="comment">//2. 在读取稀疏数组后几行的数据(从第二行开始)，并赋给 原始的二维数组 即可</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;sparseArr1.length;i++)&#123;</span><br><span class="line">            arr2[sparseArr1[i][<span class="number">0</span>]][sparseArr1[i][<span class="number">1</span>]] = sparseArr1[i][<span class="number">2</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">"二维数组："</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span>[] arr : arr2) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> data : arr) &#123;</span><br><span class="line">                System.out.printf(<span class="string">"%d\t"</span>, data);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 从文件中读出稀疏数组</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> file</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title">readFileToObject</span><span class="params">(File file)</span> </span>&#123;</span><br><span class="line">        InputStream inputStream = <span class="keyword">null</span>;</span><br><span class="line">        ObjectInputStream objectInputStream = <span class="keyword">null</span>;</span><br><span class="line">        Object readObject = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            inputStream = <span class="keyword">new</span> FileInputStream(file);</span><br><span class="line">            objectInputStream = <span class="keyword">new</span> ObjectInputStream(inputStream);</span><br><span class="line">            readObject = objectInputStream.readObject();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (FileNotFoundException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ClassNotFoundException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">if</span>(objectInputStream!=<span class="keyword">null</span>)&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    objectInputStream.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(inputStream!=<span class="keyword">null</span>)&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    inputStream.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> readObject;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 将数组写入到文件中</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> objcet</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> file</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">writeObjectToFile</span><span class="params">(Object objcet,File file)</span></span>&#123;</span><br><span class="line">        OutputStream outputStream = <span class="keyword">null</span>;</span><br><span class="line">        ObjectOutputStream objectOutputStream = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            outputStream = <span class="keyword">new</span> FileOutputStream(file);</span><br><span class="line">            objectOutputStream = <span class="keyword">new</span> ObjectOutputStream(outputStream);</span><br><span class="line">            objectOutputStream.writeObject(objcet);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (FileNotFoundException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="keyword">if</span>(outputStream!=<span class="keyword">null</span>)&#123;</span><br><span class="line">                    outputStream.close();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(objectOutputStream!=<span class="keyword">null</span>)&#123;</span><br><span class="line">                    objectOutputStream.close();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



]]></content>
      <categories>
        <category>数据结构和算法</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>数据结构</tag>
      </tags>
  </entry>
  <entry>
    <title>webpack-学习笔记</title>
    <url>/2020/04/26/webpack-study/</url>
    <content><![CDATA[<h1 id="webpack学习笔记"><a href="#webpack学习笔记" class="headerlink" title="webpack学习笔记"></a>webpack学习笔记</h1><p>webpack官网：<a href="https://webpack.docschina.org/concepts/" target="_blank" rel="noopener">https://webpack.docschina.org/concepts/</a></p>
<h2 id="1-概念"><a href="#1-概念" class="headerlink" title="1.概念"></a>1.概念</h2><p>本质上，<strong>webpack</strong> 是一个现代 JavaScript 应用程序的<em>静态模块打包工具</em>。当 webpack 处理应用程序时，它会在内部构建一个 <a href="https://webpack.docschina.org/concepts/dependency-graph/" target="_blank" rel="noopener">依赖图(dependency graph)</a>，此依赖图会映射项目所需的每个模块，并生成一个或多个 <em>bundle</em>。</p>
<h2 id="2-安装"><a href="#2-安装" class="headerlink" title="2.安装"></a>2.安装</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install webpack -g</span><br><span class="line">npm install webpack-cli -g</span><br><span class="line"><span class="comment">#测试安装成功</span></span><br><span class="line">webpack -v</span><br><span class="line">webpack-cli -v</span><br></pre></td></tr></table></figure>

<h2 id="3-使用webpack"><a href="#3-使用webpack" class="headerlink" title="3.使用webpack"></a>3.使用webpack</h2><p>3.1 创建项目webpack-study</p>
<p>3.2创建一个名为modules的目录，用于放置JS模块等资源文件</p>
<p>3.3在modules下创建模块文件，如hello.js，用于编写JS模块相关代码</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 暴露一个方法</span></span><br><span class="line">exports.sayHi = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">	<span class="built_in">document</span>.write(<span class="string">"&lt;h1&gt;webpack study&lt;/h1&gt;"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>3.4在modules下创建一个名为main.js的入口文件</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> hello = <span class="built_in">require</span>(<span class="string">"./hello"</span>);</span><br><span class="line">hello.sayHi();</span><br></pre></td></tr></table></figure>

<p>3.5在项目目录下创建webpack.config.js配置文件，使用webpack命令打包</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports=&#123;</span><br><span class="line">	entry:<span class="string">'./modules/main.js'</span>,</span><br><span class="line">	output: &#123;</span><br><span class="line">		filename:<span class="string">'./js/bundle.js'</span></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>3.6在项目目录下，执行命令webpack进行打包，项目目录下生成dist/js/bundle.js文件</p>
<p>3.7在项目目录下，新建index.html,内容如下：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"dist/js/bundle.js"</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>3.8打开浏览器，查看效果。</p>
<p><strong><em>项目目录结构如下：</em></strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">webpack-study</span><br><span class="line">├── dist</span><br><span class="line">│   └── js</span><br><span class="line">│       └── bundle.js</span><br><span class="line">├── index.html</span><br><span class="line">├── modules</span><br><span class="line">│   ├── hello.js</span><br><span class="line">│   └── main.js</span><br><span class="line">└── webpack.config.js</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>web前端</category>
      </categories>
      <tags>
        <tag>webpack</tag>
      </tags>
  </entry>
  <entry>
    <title>JUC学习笔记</title>
    <url>/2020/04/25/JUC/</url>
    <content><![CDATA[<h1 id="JUC学习笔记"><a href="#JUC学习笔记" class="headerlink" title="JUC学习笔记"></a>JUC学习笔记</h1><h2 id="1-什么是JUC"><a href="#1-什么是JUC" class="headerlink" title="1.什么是JUC"></a>1.什么是JUC</h2><p>源码+官方文档</p>
<p><img src="JUC/image-20200422083034285.png" alt="image-20200422083034285"></p>
<p>JUC ==&gt; java util concurrent</p>
<h2 id="2-线程和进程"><a href="#2-线程和进程" class="headerlink" title="2.线程和进程"></a>2.线程和进程</h2><p>进程：一个程序，QQ.exe Music.exe程序的集合</p>
<p>线程：Typora 写字、保存</p>
<blockquote>
<p>并发、并行</p>
</blockquote>
<p>并发编程：并发、并行</p>
<p>并发（多线程操作同一个资源）</p>
<ul>
<li>CPU一核，模拟出多条线程，天下武功，唯快不破，快速交替</li>
</ul>
<p>并行（多个人一起行走）</p>
<ul>
<li>CPU多核，多个线程可以同时执行；</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">public class Test1 &#123;</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        &#x2F;&#x2F;CPU核数</span><br><span class="line">        &#x2F;&#x2F;Returns the number of processors available to the Java virtual machine.</span><br><span class="line">        System.out.println(Runtime.getRuntime().availableProcessors());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="线程有几种状态"><a href="#线程有几种状态" class="headerlink" title="线程有几种状态"></a>线程有几种状态</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">public enum State &#123;</span><br><span class="line">        &#x2F;**</span><br><span class="line">         * Thread state for a thread which has not yet started.</span><br><span class="line">         *&#x2F;</span><br><span class="line">        NEW,</span><br><span class="line"></span><br><span class="line">        &#x2F;**</span><br><span class="line">         * Thread state for a runnable thread.  A thread in the runnable</span><br><span class="line">         * state is executing in the Java virtual machine but it may</span><br><span class="line">         * be waiting for other resources from the operating system</span><br><span class="line">         * such as processor.</span><br><span class="line">         *&#x2F;</span><br><span class="line">        RUNNABLE,</span><br><span class="line"></span><br><span class="line">        &#x2F;**</span><br><span class="line">         * Thread state for a thread blocked waiting for a monitor lock.</span><br><span class="line">         * A thread in the blocked state is waiting for a monitor lock</span><br><span class="line">         * to enter a synchronized block&#x2F;method or</span><br><span class="line">         * reenter a synchronized block&#x2F;method after calling</span><br><span class="line">         * &#123;@link Object#wait() Object.wait&#125;.</span><br><span class="line">         *&#x2F;</span><br><span class="line">        BLOCKED,</span><br><span class="line"></span><br><span class="line">        &#x2F;**</span><br><span class="line">         * Thread state for a waiting thread.</span><br><span class="line">         * A thread is in the waiting state due to calling one of the</span><br><span class="line">         * following methods:</span><br><span class="line">         * &lt;ul&gt;</span><br><span class="line">         *   &lt;li&gt;&#123;@link Object#wait() Object.wait&#125; with no timeout&lt;&#x2F;li&gt;</span><br><span class="line">         *   &lt;li&gt;&#123;@link #join() Thread.join&#125; with no timeout&lt;&#x2F;li&gt;</span><br><span class="line">         *   &lt;li&gt;&#123;@link LockSupport#park() LockSupport.park&#125;&lt;&#x2F;li&gt;</span><br><span class="line">         * &lt;&#x2F;ul&gt;</span><br><span class="line">         *</span><br><span class="line">         * &lt;p&gt;A thread in the waiting state is waiting for another thread to</span><br><span class="line">         * perform a particular action.</span><br><span class="line">         *</span><br><span class="line">         * For example, a thread that has called &lt;tt&gt;Object.wait()&lt;&#x2F;tt&gt;</span><br><span class="line">         * on an object is waiting for another thread to call</span><br><span class="line">         * &lt;tt&gt;Object.notify()&lt;&#x2F;tt&gt; or &lt;tt&gt;Object.notifyAll()&lt;&#x2F;tt&gt; on</span><br><span class="line">         * that object. A thread that has called &lt;tt&gt;Thread.join()&lt;&#x2F;tt&gt;</span><br><span class="line">         * is waiting for a specified thread to terminate.</span><br><span class="line">         *&#x2F;</span><br><span class="line">        WAITING,</span><br><span class="line"></span><br><span class="line">        &#x2F;**</span><br><span class="line">         * Thread state for a waiting thread with a specified waiting time.</span><br><span class="line">         * A thread is in the timed waiting state due to calling one of</span><br><span class="line">         * the following methods with a specified positive waiting time:</span><br><span class="line">         * &lt;ul&gt;</span><br><span class="line">         *   &lt;li&gt;&#123;@link #sleep Thread.sleep&#125;&lt;&#x2F;li&gt;</span><br><span class="line">         *   &lt;li&gt;&#123;@link Object#wait(long) Object.wait&#125; with timeout&lt;&#x2F;li&gt;</span><br><span class="line">         *   &lt;li&gt;&#123;@link #join(long) Thread.join&#125; with timeout&lt;&#x2F;li&gt;</span><br><span class="line">         *   &lt;li&gt;&#123;@link LockSupport#parkNanos LockSupport.parkNanos&#125;&lt;&#x2F;li&gt;</span><br><span class="line">         *   &lt;li&gt;&#123;@link LockSupport#parkUntil LockSupport.parkUntil&#125;&lt;&#x2F;li&gt;</span><br><span class="line">         * &lt;&#x2F;ul&gt;</span><br><span class="line">         *&#x2F;</span><br><span class="line">        TIMED_WAITING,</span><br><span class="line"></span><br><span class="line">        &#x2F;**</span><br><span class="line">         * Thread state for a terminated thread.</span><br><span class="line">         * The thread has completed execution.</span><br><span class="line">         *&#x2F;</span><br><span class="line">        TERMINATED;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>



<h4 id="wait-sleep区别"><a href="#wait-sleep区别" class="headerlink" title="wait/sleep区别"></a>wait/sleep区别</h4><p>1.来自不同的类</p>
<p>wait ==&gt; Object</p>
<p>sleep ==&gt; Thread</p>
<p>2.关于锁的释放</p>
<p>wait会释放锁，sleep睡觉了，抱着锁睡觉，不会释放。</p>
<p>3.使用的范围是不同的</p>
<p>wait:必须在同步代码块中</p>
<p>sleep：可以在任何地方睡觉</p>
<p>4.是否需要捕获异常</p>
<p>wait 不需要捕获异常</p>
<p>sleep必须要捕获异常</p>
<h2 id="3-Lock锁-（重点）"><a href="#3-Lock锁-（重点）" class="headerlink" title="3.Lock锁 （重点）"></a>3.Lock锁 （重点）</h2><p>售票</p>
<p>传统的synchronized写法</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">public class SaleTicketDemo &#123;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        Ticket ticket &#x3D; new Ticket();</span><br><span class="line">        new Thread(()-&gt;&#123;</span><br><span class="line">            for (int i &#x3D; 0; i &lt; 30; i++) &#123;</span><br><span class="line">                ticket.sale();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,&quot;A&quot;).start();</span><br><span class="line">        new Thread(()-&gt;&#123;</span><br><span class="line">            for (int i &#x3D; 0; i &lt; 30; i++) &#123;</span><br><span class="line">                ticket.sale();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,&quot;B&quot;).start();</span><br><span class="line">        new Thread(()-&gt;&#123;</span><br><span class="line">            for (int i &#x3D; 0; i &lt; 30; i++) &#123;</span><br><span class="line">                ticket.sale();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,&quot;C&quot;).start();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class Ticket&#123;</span><br><span class="line">    private int count &#x3D; 50;</span><br><span class="line"> &#x2F;&#x2F;synchronized本质：队列，排队</span><br><span class="line">    public synchronized void sale()&#123;</span><br><span class="line">        if(count &gt; 0)&#123;</span><br><span class="line">            System.out.println(Thread.currentThread().getName()+&quot;售出了编号为&quot;+ count-- + &quot;张票，还剩&quot;+count+&quot;张票！&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>Lock：</p>
<p><img src="JUC/image-20200422130054463.png" alt="image-20200422130054463"></p>
<p><img src="JUC/image-20200422130134800.png" alt="image-20200422130134800"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">public class SaleTicketDemo2 &#123;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        Ticket2 ticket &#x3D; new Ticket2();</span><br><span class="line">        new Thread(() -&gt; &#123;</span><br><span class="line">            for (int i &#x3D; 0; i &lt; 30; i++)</span><br><span class="line">                ticket.sale();</span><br><span class="line">        &#125;, &quot;A&quot;).start();</span><br><span class="line">        new Thread(() -&gt; &#123;</span><br><span class="line">            for (int i &#x3D; 0; i &lt; 30; i++) &#123;</span><br><span class="line">                ticket.sale();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;, &quot;B&quot;).start();</span><br><span class="line">        new Thread(() -&gt; &#123;</span><br><span class="line">            for (int i &#x3D; 0; i &lt; 30; i++) &#123;</span><br><span class="line">                ticket.sale();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;, &quot;C&quot;).start();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class Ticket2 &#123;</span><br><span class="line">    private int count &#x3D; 50;</span><br><span class="line"></span><br><span class="line">    Lock lock &#x3D; new ReentrantLock();</span><br><span class="line"></span><br><span class="line">    public void sale() &#123;</span><br><span class="line">        lock.lock();</span><br><span class="line">        try &#123;</span><br><span class="line">            if (count &gt; 0) &#123;</span><br><span class="line">                System.out.println(Thread.currentThread().getName() + &quot;售出了编号为&quot; + count-- + &quot;张票，还剩&quot; + count + &quot;张票！&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; finally &#123;</span><br><span class="line">            lock.unlock();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h4 id="Synchronized和Lock区别"><a href="#Synchronized和Lock区别" class="headerlink" title="Synchronized和Lock区别"></a>Synchronized和Lock区别</h4><p>1.Synchronized 内置的Java关键字，Lock是一个Java类</p>
<p>2.Synchronized无法判断获取锁的状态，Lock可以判断是否获取到了锁</p>
<p>3.Synchronized会自动释放锁，Lock必须要手动释放锁！如果不释放锁，死锁</p>
<p>4.Synchronized线程1（获得锁，阻塞）、线程2（等待，傻傻的等）；Lock锁就不一定会等待下去；</p>
<p>5.Synchronized可重入锁，不可以中断的，非公平；Lock，可重入锁，可以判断锁，可以自己设置。</p>
<p>6.Synchronized适合锁少量的代码同步问题；Lock适合锁大量的代码。</p>
<h4 id="锁是什么，如何判断锁的是谁"><a href="#锁是什么，如何判断锁的是谁" class="headerlink" title="锁是什么，如何判断锁的是谁"></a>锁是什么，如何判断锁的是谁</h4><h2 id="4-生产者和消费者问题"><a href="#4-生产者和消费者问题" class="headerlink" title="4.生产者和消费者问题"></a>4.生产者和消费者问题</h2><p><img src="JUC/image-20200422134451133.png" alt="image-20200422134451133"></p>
<p>有问题的代码：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">package com.dumbao.demo01;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;生产者和消费者</span><br><span class="line">public class A &#123;</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        Data data &#x3D; new Data();</span><br><span class="line">        &#x2F;&#x2F;线程A +1操作</span><br><span class="line">        new Thread(() -&gt; &#123;</span><br><span class="line">            try &#123;</span><br><span class="line">                for (int i &#x3D; 0; i &lt; 10; i++) &#123;</span><br><span class="line">                    data.increment();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; catch (InterruptedException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;, &quot;A&quot;).start();</span><br><span class="line">        &#x2F;&#x2F;线程B -1操作</span><br><span class="line">        new Thread(() -&gt; &#123;</span><br><span class="line">            try &#123;</span><br><span class="line">                for (int i &#x3D; 0; i &lt; 10; i++) &#123;</span><br><span class="line">                    data.decrement();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; catch (InterruptedException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;, &quot;B&quot;).start();</span><br><span class="line">        &#x2F;&#x2F;线程C +1操作</span><br><span class="line">        new Thread(() -&gt; &#123;</span><br><span class="line">            try &#123;</span><br><span class="line">                for (int i &#x3D; 0; i &lt; 10; i++) &#123;</span><br><span class="line">                    data.increment();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; catch (InterruptedException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;, &quot;C&quot;).start();</span><br><span class="line">        &#x2F;&#x2F;线程D -1操作</span><br><span class="line">        new Thread(() -&gt; &#123;</span><br><span class="line">            try &#123;</span><br><span class="line">                for (int i &#x3D; 0; i &lt; 10; i++) &#123;</span><br><span class="line">                    data.decrement();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; catch (InterruptedException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;, &quot;D&quot;).start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;口诀：判断等待，业务，通知</span><br><span class="line">class Data &#123;</span><br><span class="line">    private int number &#x3D; 0;</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F;+1</span><br><span class="line">    public synchronized void increment() throws InterruptedException &#123;</span><br><span class="line">        if (number !&#x3D; 0) &#123;</span><br><span class="line">            &#x2F;&#x2F;等待</span><br><span class="line">            this.wait();</span><br><span class="line">        &#125;</span><br><span class="line">        number++;</span><br><span class="line">        System.out.println(Thread.currentThread().getName() + &quot; &#x3D;&gt; &quot; + number);</span><br><span class="line">        &#x2F;&#x2F;通知其他线程我+1完毕了</span><br><span class="line">        this.notifyAll();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F;-1</span><br><span class="line">    public synchronized void decrement() throws InterruptedException &#123;</span><br><span class="line">        if (number &#x3D;&#x3D; 0) &#123;</span><br><span class="line">            &#x2F;&#x2F;等待；</span><br><span class="line">            this.wait();</span><br><span class="line">        &#125;</span><br><span class="line">        number--;</span><br><span class="line">        System.out.println(Thread.currentThread().getName() + &quot; &#x3D;&gt; &quot; + number);</span><br><span class="line">        &#x2F;&#x2F;通知其他线程我-1完成了</span><br><span class="line">        this.notifyAll();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>结果：注意看，其中有A =&gt; 2，结果不符合预期。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">A &#x3D;&gt; 1</span><br><span class="line">B &#x3D;&gt; 0</span><br><span class="line">A &#x3D;&gt; 1</span><br><span class="line">B &#x3D;&gt; 0</span><br><span class="line">A &#x3D;&gt; 1</span><br><span class="line">B &#x3D;&gt; 0</span><br><span class="line">A &#x3D;&gt; 1</span><br><span class="line">B &#x3D;&gt; 0</span><br><span class="line">A &#x3D;&gt; 1</span><br><span class="line">B &#x3D;&gt; 0</span><br><span class="line">A &#x3D;&gt; 1</span><br><span class="line">B &#x3D;&gt; 0</span><br><span class="line">C &#x3D;&gt; 1</span><br><span class="line">B &#x3D;&gt; 0</span><br><span class="line">A &#x3D;&gt; 1</span><br><span class="line">B &#x3D;&gt; 0</span><br><span class="line">C &#x3D;&gt; 1</span><br><span class="line">B &#x3D;&gt; 0</span><br><span class="line">A &#x3D;&gt; 1</span><br><span class="line">B &#x3D;&gt; 0</span><br><span class="line">C &#x3D;&gt; 1</span><br><span class="line">A &#x3D;&gt; 2</span><br><span class="line">D &#x3D;&gt; 1</span><br><span class="line">D &#x3D;&gt; 0</span><br><span class="line">A &#x3D;&gt; 1</span><br><span class="line">C &#x3D;&gt; 2</span><br><span class="line">D &#x3D;&gt; 1</span><br><span class="line">D &#x3D;&gt; 0</span><br><span class="line">C &#x3D;&gt; 1</span><br><span class="line">D &#x3D;&gt; 0</span><br><span class="line">C &#x3D;&gt; 1</span><br><span class="line">D &#x3D;&gt; 0</span><br><span class="line">C &#x3D;&gt; 1</span><br><span class="line">D &#x3D;&gt; 0</span><br><span class="line">C &#x3D;&gt; 1</span><br><span class="line">D &#x3D;&gt; 0</span><br><span class="line">C &#x3D;&gt; 1</span><br><span class="line">D &#x3D;&gt; 0</span><br><span class="line">C &#x3D;&gt; 1</span><br><span class="line">D &#x3D;&gt; 0</span><br></pre></td></tr></table></figure>

<p>修改后代码：</p>
<h4 id="Synchronized版的生产者消费者"><a href="#Synchronized版的生产者消费者" class="headerlink" title="Synchronized版的生产者消费者"></a>Synchronized版的生产者消费者</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;生产者和消费者</span><br><span class="line">public class A &#123;</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        Data data &#x3D; new Data();</span><br><span class="line">        &#x2F;&#x2F;线程A +1操作</span><br><span class="line">        new Thread(() -&gt; &#123;</span><br><span class="line">            try &#123;</span><br><span class="line">                for (int i &#x3D; 0; i &lt; 10; i++) &#123;</span><br><span class="line">                    data.increment();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; catch (InterruptedException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;, &quot;A&quot;).start();</span><br><span class="line">        &#x2F;&#x2F;线程B -1操作</span><br><span class="line">        new Thread(() -&gt; &#123;</span><br><span class="line">            try &#123;</span><br><span class="line">                for (int i &#x3D; 0; i &lt; 10; i++) &#123;</span><br><span class="line">                    data.decrement();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; catch (InterruptedException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;, &quot;B&quot;).start();</span><br><span class="line">        &#x2F;&#x2F;线程C +1操作</span><br><span class="line">        new Thread(() -&gt; &#123;</span><br><span class="line">            try &#123;</span><br><span class="line">                for (int i &#x3D; 0; i &lt; 10; i++) &#123;</span><br><span class="line">                    data.increment();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; catch (InterruptedException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;, &quot;C&quot;).start();</span><br><span class="line">        &#x2F;&#x2F;线程D -1操作</span><br><span class="line">        new Thread(() -&gt; &#123;</span><br><span class="line">            try &#123;</span><br><span class="line">                for (int i &#x3D; 0; i &lt; 10; i++) &#123;</span><br><span class="line">                    data.decrement();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; catch (InterruptedException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;, &quot;D&quot;).start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;口诀：判断等待，业务，通知</span><br><span class="line">class Data &#123;</span><br><span class="line">    private int number &#x3D; 0;</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F;+1</span><br><span class="line">    public synchronized void increment() throws InterruptedException &#123;</span><br><span class="line">        while (number !&#x3D; 0) &#123;</span><br><span class="line">            &#x2F;&#x2F;等待</span><br><span class="line">            this.wait();</span><br><span class="line">        &#125;</span><br><span class="line">        number++;</span><br><span class="line">        System.out.println(Thread.currentThread().getName() + &quot; &#x3D;&gt; &quot; + number);</span><br><span class="line">        &#x2F;&#x2F;通知其他线程我+1完毕了</span><br><span class="line">        this.notifyAll();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F;-1</span><br><span class="line">    public synchronized void decrement() throws InterruptedException &#123;</span><br><span class="line">        while (number &#x3D;&#x3D; 0) &#123;</span><br><span class="line">            &#x2F;&#x2F;等待；</span><br><span class="line">            this.wait();</span><br><span class="line">        &#125;</span><br><span class="line">        number--;</span><br><span class="line">        System.out.println(Thread.currentThread().getName() + &quot; &#x3D;&gt; &quot; + number);</span><br><span class="line">        &#x2F;&#x2F;通知其他线程我-1完成了</span><br><span class="line">        this.notifyAll();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>结果：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">A &#x3D;&gt; 1</span><br><span class="line">B &#x3D;&gt; 0</span><br><span class="line">A &#x3D;&gt; 1</span><br><span class="line">B &#x3D;&gt; 0</span><br><span class="line">A &#x3D;&gt; 1</span><br><span class="line">B &#x3D;&gt; 0</span><br><span class="line">A &#x3D;&gt; 1</span><br><span class="line">B &#x3D;&gt; 0</span><br><span class="line">A &#x3D;&gt; 1</span><br><span class="line">B &#x3D;&gt; 0</span><br><span class="line">C &#x3D;&gt; 1</span><br><span class="line">B &#x3D;&gt; 0</span><br><span class="line">A &#x3D;&gt; 1</span><br><span class="line">B &#x3D;&gt; 0</span><br><span class="line">C &#x3D;&gt; 1</span><br><span class="line">D &#x3D;&gt; 0</span><br><span class="line">A &#x3D;&gt; 1</span><br><span class="line">B &#x3D;&gt; 0</span><br><span class="line">C &#x3D;&gt; 1</span><br><span class="line">D &#x3D;&gt; 0</span><br><span class="line">A &#x3D;&gt; 1</span><br><span class="line">B &#x3D;&gt; 0</span><br><span class="line">C &#x3D;&gt; 1</span><br><span class="line">D &#x3D;&gt; 0</span><br><span class="line">A &#x3D;&gt; 1</span><br><span class="line">B &#x3D;&gt; 0</span><br><span class="line">C &#x3D;&gt; 1</span><br><span class="line">D &#x3D;&gt; 0</span><br><span class="line">A &#x3D;&gt; 1</span><br><span class="line">D &#x3D;&gt; 0</span><br><span class="line">C &#x3D;&gt; 1</span><br><span class="line">D &#x3D;&gt; 0</span><br><span class="line">C &#x3D;&gt; 1</span><br><span class="line">D &#x3D;&gt; 0</span><br><span class="line">C &#x3D;&gt; 1</span><br><span class="line">D &#x3D;&gt; 0</span><br><span class="line">C &#x3D;&gt; 1</span><br><span class="line">D &#x3D;&gt; 0</span><br><span class="line">C &#x3D;&gt; 1</span><br><span class="line">D &#x3D;&gt; 0</span><br></pre></td></tr></table></figure>

<h4 id="JUC版的生产者消费者"><a href="#JUC版的生产者消费者" class="headerlink" title="JUC版的生产者消费者"></a>JUC版的生产者消费者</h4><p><img src="JUC/image-20200422202335783.png" alt="image-20200422202335783"></p>
<p><img src="JUC/image-20200422202535979.png" alt="image-20200422202535979"></p>
<p><img src="JUC/image-20200422202841115.png" alt="image-20200422202841115"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;**</span><br><span class="line"> * JUC版的生产者消费者</span><br><span class="line"> *&#x2F;</span><br><span class="line">public class B&#123;</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        Data2 data &#x3D; new Data2();</span><br><span class="line">        &#x2F;&#x2F;线程A +1操作</span><br><span class="line">        new Thread(() -&gt; &#123;</span><br><span class="line">            try &#123;</span><br><span class="line">                for (int i &#x3D; 0; i &lt; 10; i++) &#123;</span><br><span class="line">                    data.increment();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; catch (InterruptedException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;, &quot;A&quot;).start();</span><br><span class="line">        &#x2F;&#x2F;线程B -1操作</span><br><span class="line">        new Thread(() -&gt; &#123;</span><br><span class="line">            try &#123;</span><br><span class="line">                for (int i &#x3D; 0; i &lt; 10; i++) &#123;</span><br><span class="line">                    data.decrement();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; catch (InterruptedException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;, &quot;B&quot;).start();</span><br><span class="line">        &#x2F;&#x2F;线程C +1操作</span><br><span class="line">        new Thread(() -&gt; &#123;</span><br><span class="line">            try &#123;</span><br><span class="line">                for (int i &#x3D; 0; i &lt; 10; i++) &#123;</span><br><span class="line">                    data.increment();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; catch (InterruptedException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;, &quot;C&quot;).start();</span><br><span class="line">        &#x2F;&#x2F;线程D -1操作</span><br><span class="line">        new Thread(() -&gt; &#123;</span><br><span class="line">            try &#123;</span><br><span class="line">                for (int i &#x3D; 0; i &lt; 10; i++) &#123;</span><br><span class="line">                    data.decrement();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; catch (InterruptedException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;, &quot;D&quot;).start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;口诀：判断等待，业务，通知</span><br><span class="line">class Data2 &#123;</span><br><span class="line">    private int number &#x3D; 0;</span><br><span class="line"></span><br><span class="line">    final Lock lock &#x3D; new ReentrantLock();</span><br><span class="line">    final Condition condition &#x3D; lock.newCondition();</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F;+1</span><br><span class="line">    public  void increment() throws InterruptedException &#123;</span><br><span class="line">        try &#123;</span><br><span class="line">            lock.lock();</span><br><span class="line">            &#x2F;&#x2F;业务</span><br><span class="line">            while (number !&#x3D; 0) &#123;</span><br><span class="line">                &#x2F;&#x2F;等待</span><br><span class="line">                condition.await();</span><br><span class="line">            &#125;</span><br><span class="line">            number++;</span><br><span class="line">            System.out.println(Thread.currentThread().getName() + &quot; &#x3D;&gt; &quot; + number);</span><br><span class="line">            &#x2F;&#x2F;通知其他线程我+1完毕了</span><br><span class="line">            condition.signalAll();</span><br><span class="line">        &#125; finally &#123;</span><br><span class="line">            lock.unlock();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F;-1</span><br><span class="line">    public  void decrement() throws InterruptedException &#123;</span><br><span class="line">        try &#123;</span><br><span class="line">            lock.lock();</span><br><span class="line">            &#x2F;&#x2F;业务</span><br><span class="line">            while (number &#x3D;&#x3D; 0) &#123;</span><br><span class="line">                &#x2F;&#x2F;等待；</span><br><span class="line">                condition.await();</span><br><span class="line">            &#125;</span><br><span class="line">            number--;</span><br><span class="line">            System.out.println(Thread.currentThread().getName() + &quot; &#x3D;&gt; &quot; + number);</span><br><span class="line">            &#x2F;&#x2F;通知其他线程我-1完成了</span><br><span class="line">            condition.signalAll();</span><br><span class="line">        &#125; finally &#123;</span><br><span class="line">            lock.unlock();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>执行结果：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">A &#x3D;&gt; 1</span><br><span class="line">B &#x3D;&gt; 0</span><br><span class="line">A &#x3D;&gt; 1</span><br><span class="line">B &#x3D;&gt; 0</span><br><span class="line">A &#x3D;&gt; 1</span><br><span class="line">B &#x3D;&gt; 0</span><br><span class="line">A &#x3D;&gt; 1</span><br><span class="line">B &#x3D;&gt; 0</span><br><span class="line">A &#x3D;&gt; 1</span><br><span class="line">D &#x3D;&gt; 0</span><br><span class="line">A &#x3D;&gt; 1</span><br><span class="line">D &#x3D;&gt; 0</span><br><span class="line">A &#x3D;&gt; 1</span><br><span class="line">D &#x3D;&gt; 0</span><br><span class="line">A &#x3D;&gt; 1</span><br><span class="line">D &#x3D;&gt; 0</span><br><span class="line">A &#x3D;&gt; 1</span><br><span class="line">D &#x3D;&gt; 0</span><br><span class="line">A &#x3D;&gt; 1</span><br><span class="line">D &#x3D;&gt; 0</span><br><span class="line">C &#x3D;&gt; 1</span><br><span class="line">D &#x3D;&gt; 0</span><br><span class="line">C &#x3D;&gt; 1</span><br><span class="line">D &#x3D;&gt; 0</span><br><span class="line">C &#x3D;&gt; 1</span><br><span class="line">D &#x3D;&gt; 0</span><br><span class="line">C &#x3D;&gt; 1</span><br><span class="line">D &#x3D;&gt; 0</span><br><span class="line">C &#x3D;&gt; 1</span><br><span class="line">B &#x3D;&gt; 0</span><br><span class="line">C &#x3D;&gt; 1</span><br><span class="line">B &#x3D;&gt; 0</span><br><span class="line">C &#x3D;&gt; 1</span><br><span class="line">B &#x3D;&gt; 0</span><br><span class="line">C &#x3D;&gt; 1</span><br><span class="line">B &#x3D;&gt; 0</span><br><span class="line">C &#x3D;&gt; 1</span><br><span class="line">B &#x3D;&gt; 0</span><br><span class="line">C &#x3D;&gt; 1</span><br><span class="line">B &#x3D;&gt; 0</span><br></pre></td></tr></table></figure>

<p><img src="JUC/image-20200422204051367.png" alt="image-20200422204051367"></p>
<p><strong>任何一个技术，绝对不是仅仅只是覆盖原来的技术，优势和补充。</strong></p>
<p><strong>Condition 精准的通知和唤醒线程</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import java.util.concurrent.locks.Condition;</span><br><span class="line">import java.util.concurrent.locks.Lock;</span><br><span class="line">import java.util.concurrent.locks.ReentrantLock;</span><br><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line"> * 精确唤醒</span><br><span class="line"> *&#x2F;</span><br><span class="line">public class C &#123;</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        Data3 data &#x3D; new Data3();</span><br><span class="line">        new Thread(() -&gt; &#123;</span><br><span class="line">            for (int i &#x3D; 0; i &lt; 10; i++) &#123;</span><br><span class="line">                data.printA();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,&quot;A&quot;).start();</span><br><span class="line">        new Thread(() -&gt; &#123;</span><br><span class="line">            for (int i &#x3D; 0; i &lt; 10; i++) &#123;</span><br><span class="line">                data.printB();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,&quot;B&quot;).start();</span><br><span class="line">        new Thread(()-&gt;&#123;</span><br><span class="line">            for (int i &#x3D; 0; i &lt; 10; i++) &#123;</span><br><span class="line">                data.printC();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,&quot;C&quot;).start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class Data3 &#123;</span><br><span class="line"></span><br><span class="line">    final Lock lock &#x3D; new ReentrantLock();</span><br><span class="line">    Condition condition1 &#x3D; lock.newCondition();</span><br><span class="line">    Condition condition2 &#x3D; lock.newCondition();</span><br><span class="line">    Condition condition3 &#x3D; lock.newCondition();</span><br><span class="line">    int num &#x3D; 1;&#x2F;&#x2F;1 printA 2 printB 3 printC</span><br><span class="line"></span><br><span class="line">    public void printA() &#123;</span><br><span class="line">        try &#123;</span><br><span class="line">            lock.lock();</span><br><span class="line">            &#x2F;&#x2F;业务</span><br><span class="line">            while (num !&#x3D; 1) &#123;</span><br><span class="line">                condition1.await();</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println(Thread.currentThread().getName()+&quot; &#x3D; &gt; AAAAA&quot; );</span><br><span class="line">            num &#x3D; 2;</span><br><span class="line">            condition2.signal();</span><br><span class="line">        &#125; catch (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; finally &#123;</span><br><span class="line">            lock.unlock();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void printB() &#123;</span><br><span class="line">        try &#123;</span><br><span class="line">            lock.lock();</span><br><span class="line">            while (num !&#x3D; 2) &#123;</span><br><span class="line">                condition2.await();</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println(Thread.currentThread().getName()+&quot; &#x3D; &gt; BBBBB&quot; );</span><br><span class="line">            num &#x3D; 3;</span><br><span class="line">            condition3.signal();</span><br><span class="line">        &#125; catch (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; finally &#123;</span><br><span class="line">            lock.unlock();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void printC() &#123;</span><br><span class="line">        try &#123;</span><br><span class="line">            lock.lock();</span><br><span class="line">            while (num !&#x3D; 3) &#123;</span><br><span class="line">                condition3.await();</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println(Thread.currentThread().getName()+&quot; &#x3D; &gt; CCCCC&quot; );</span><br><span class="line">            num &#x3D; 1;</span><br><span class="line">            condition1.signal();</span><br><span class="line">        &#125; catch (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; finally &#123;</span><br><span class="line">            lock.unlock();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>执行结果：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">A &#x3D; &gt; AAAAA</span><br><span class="line">B &#x3D; &gt; BBBBB</span><br><span class="line">C &#x3D; &gt; CCCCC</span><br><span class="line">A &#x3D; &gt; AAAAA</span><br><span class="line">B &#x3D; &gt; BBBBB</span><br><span class="line">C &#x3D; &gt; CCCCC</span><br><span class="line">A &#x3D; &gt; AAAAA</span><br><span class="line">B &#x3D; &gt; BBBBB</span><br><span class="line">C &#x3D; &gt; CCCCC</span><br><span class="line">A &#x3D; &gt; AAAAA</span><br><span class="line">B &#x3D; &gt; BBBBB</span><br><span class="line">C &#x3D; &gt; CCCCC</span><br><span class="line">A &#x3D; &gt; AAAAA</span><br><span class="line">B &#x3D; &gt; BBBBB</span><br><span class="line">C &#x3D; &gt; CCCCC</span><br><span class="line">A &#x3D; &gt; AAAAA</span><br><span class="line">B &#x3D; &gt; BBBBB</span><br><span class="line">C &#x3D; &gt; CCCCC</span><br><span class="line">A &#x3D; &gt; AAAAA</span><br><span class="line">B &#x3D; &gt; BBBBB</span><br><span class="line">C &#x3D; &gt; CCCCC</span><br><span class="line">A &#x3D; &gt; AAAAA</span><br><span class="line">B &#x3D; &gt; BBBBB</span><br><span class="line">C &#x3D; &gt; CCCCC</span><br><span class="line">A &#x3D; &gt; AAAAA</span><br><span class="line">B &#x3D; &gt; BBBBB</span><br><span class="line">C &#x3D; &gt; CCCCC</span><br><span class="line">A &#x3D; &gt; AAAAA</span><br><span class="line">B &#x3D; &gt; BBBBB</span><br><span class="line">C &#x3D; &gt; CCCCC</span><br></pre></td></tr></table></figure>

<h2 id="5-8锁问题现象彻底了解锁"><a href="#5-8锁问题现象彻底了解锁" class="headerlink" title="5.8锁问题现象彻底了解锁"></a>5.8锁问题现象彻底了解锁</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import java.util.concurrent.TimeUnit;</span><br><span class="line"></span><br><span class="line">public class Test01 &#123;</span><br><span class="line"></span><br><span class="line">    &#x2F;**</span><br><span class="line">     * 1.先发短信，还是先打电话：答案：先发短信，原因锁定的是同一个对象phone</span><br><span class="line">     * @param args</span><br><span class="line">     *&#x2F;</span><br><span class="line">    </span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        Phone phone &#x3D; new Phone();</span><br><span class="line"></span><br><span class="line">        new Thread(() -&gt; &#123;</span><br><span class="line">            phone.sendSms();</span><br><span class="line">        &#125;,&quot;A&quot;).start();</span><br><span class="line"></span><br><span class="line">        try &#123;</span><br><span class="line">            TimeUnit.SECONDS.sleep(1);</span><br><span class="line">        &#125; catch (InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        new Thread(() -&gt; &#123;</span><br><span class="line">            phone.call();</span><br><span class="line">        &#125;,&quot;B&quot;).start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class Phone &#123;</span><br><span class="line">    &#x2F;**</span><br><span class="line">     * 发短信</span><br><span class="line">     *&#x2F;</span><br><span class="line">    public synchronized void sendSms() &#123;</span><br><span class="line">        System.out.println(Thread.currentThread().getName() + &quot;发短信！&quot;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &#x2F;**</span><br><span class="line">     * 打电话</span><br><span class="line">     *&#x2F;</span><br><span class="line">    public synchronized void call() &#123;</span><br><span class="line">        System.out.println(Thread.currentThread().getName() + &quot;打电话！&quot;);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>执行结果：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">A发短信！</span><br><span class="line">B打电话！</span><br><span class="line">public class Test01 &#123;</span><br><span class="line"></span><br><span class="line">    &#x2F;**</span><br><span class="line">     * &#x2F;&#x2F;1.先发短信，还是先打电话：答案：先发短信，原因锁定的是同一个对象phone</span><br><span class="line">     * 2.发短信休眠4秒，先发短信，还是先打电话。答案：先发短信，原因锁定的是同一个对象phone</span><br><span class="line">     * @param args</span><br><span class="line">     *&#x2F;</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        Phone phone &#x3D; new Phone();</span><br><span class="line"></span><br><span class="line">        new Thread(() -&gt; &#123;</span><br><span class="line">            phone.sendSms();</span><br><span class="line">        &#125;,&quot;A&quot;).start();</span><br><span class="line"></span><br><span class="line">        try &#123;</span><br><span class="line">            TimeUnit.SECONDS.sleep(1);</span><br><span class="line">        &#125; catch (InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        new Thread(() -&gt; &#123;</span><br><span class="line">            phone.call();</span><br><span class="line">        &#125;,&quot;B&quot;).start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class Phone &#123;</span><br><span class="line">    &#x2F;**</span><br><span class="line">     * 发短信</span><br><span class="line">     *&#x2F;</span><br><span class="line">    public synchronized void sendSms() &#123;</span><br><span class="line">        try &#123;</span><br><span class="line">            TimeUnit.SECONDS.sleep(4);</span><br><span class="line">        &#125; catch (InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(Thread.currentThread().getName() + &quot;发短信！&quot;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &#x2F;**</span><br><span class="line">     * 打电话</span><br><span class="line">     *&#x2F;</span><br><span class="line">    public synchronized void call() &#123;</span><br><span class="line">        System.out.println(Thread.currentThread().getName() + &quot;打电话！&quot;);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>执行结果：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">A发短信！</span><br><span class="line">B打电话！</span><br><span class="line">public class Test01 &#123;</span><br><span class="line"></span><br><span class="line">    &#x2F;**</span><br><span class="line">     * &#x2F;&#x2F;1.先发短信，还是先打电话：答案：先发短信，原因锁定的是同一个对象phone</span><br><span class="line">     * &#x2F;&#x2F;2.发短信休眠4秒，先发短信，还是先打电话。答案：先发短信，原因锁定的是同一个对象phone</span><br><span class="line">     * 3.两个手机，先发短信，还是先打电话。答案：先打电话。原因是锁定的不同的phone对象</span><br><span class="line">     * @param args</span><br><span class="line">     *&#x2F;</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        Phone phone1 &#x3D; new Phone();</span><br><span class="line">        Phone phone2 &#x3D; new Phone();</span><br><span class="line"></span><br><span class="line">        new Thread(() -&gt; &#123;</span><br><span class="line">            phone1.sendSms();</span><br><span class="line">        &#125;,&quot;A&quot;).start();</span><br><span class="line"></span><br><span class="line">        try &#123;</span><br><span class="line">            TimeUnit.SECONDS.sleep(1);</span><br><span class="line">        &#125; catch (InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        new Thread(() -&gt; &#123;</span><br><span class="line">            phone2.call();</span><br><span class="line">        &#125;,&quot;B&quot;).start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class Phone &#123;</span><br><span class="line">    &#x2F;**</span><br><span class="line">     * 发短信</span><br><span class="line">     *&#x2F;</span><br><span class="line">    public synchronized void sendSms() &#123;</span><br><span class="line">        try &#123;</span><br><span class="line">            TimeUnit.SECONDS.sleep(4);</span><br><span class="line">        &#125; catch (InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(Thread.currentThread().getName() + &quot;发短信！&quot;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &#x2F;**</span><br><span class="line">     * 打电话</span><br><span class="line">     *&#x2F;</span><br><span class="line">    public synchronized void call() &#123;</span><br><span class="line">        System.out.println(Thread.currentThread().getName() + &quot;打电话！&quot;);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>执行结果：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">B打电话！</span><br><span class="line">A发短信！</span><br><span class="line">import java.util.concurrent.TimeUnit;</span><br><span class="line"></span><br><span class="line">public class Test01 &#123;</span><br><span class="line"></span><br><span class="line">    &#x2F;**</span><br><span class="line">     * &#x2F;&#x2F;1.先发短信，还是先打电话：答案：先发短信，原因锁定的是同一个对象phone</span><br><span class="line">     * &#x2F;&#x2F;2.发短信休眠4秒，先发短信，还是先打电话。答案：先发短信，原因锁定的是同一个对象phone</span><br><span class="line">     * &#x2F;&#x2F;3.两个手机，先发短信，还是先打电话。答案：先打电话。原因是锁定的不同的phone对象</span><br><span class="line">     * 4.先打电话，还是先发短信，还是先说hello。答案：先说hello，原因：hello方法没有加锁。</span><br><span class="line">     * @param args</span><br><span class="line">     *&#x2F;</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        Phone phone &#x3D; new Phone();</span><br><span class="line"></span><br><span class="line">        new Thread(() -&gt; &#123;</span><br><span class="line">            phone.sendSms();</span><br><span class="line">        &#125;,&quot;A&quot;).start();</span><br><span class="line"></span><br><span class="line">        try &#123;</span><br><span class="line">            TimeUnit.SECONDS.sleep(1);</span><br><span class="line">        &#125; catch (InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        new Thread(() -&gt; &#123;</span><br><span class="line">            phone.call();</span><br><span class="line">        &#125;,&quot;B&quot;).start();</span><br><span class="line"></span><br><span class="line">        new Thread(()-&gt;&#123;</span><br><span class="line">            phone.hello();</span><br><span class="line">        &#125;).start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class Phone &#123;</span><br><span class="line">    &#x2F;**</span><br><span class="line">     * 发短信</span><br><span class="line">     *&#x2F;</span><br><span class="line">    public synchronized void sendSms() &#123;</span><br><span class="line">        try &#123;</span><br><span class="line">            TimeUnit.SECONDS.sleep(4);</span><br><span class="line">        &#125; catch (InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(Thread.currentThread().getName() + &quot;发短信！&quot;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &#x2F;**</span><br><span class="line">     * 打电话</span><br><span class="line">     *&#x2F;</span><br><span class="line">    public synchronized void call() &#123;</span><br><span class="line">        System.out.println(Thread.currentThread().getName() + &quot;打电话！&quot;);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void hello()&#123;</span><br><span class="line">        System.out.println(&quot;hello!&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>执行结果：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hello!</span><br><span class="line">A发短信！</span><br><span class="line">B打电话！</span><br><span class="line">public class Test02 &#123;</span><br><span class="line"></span><br><span class="line">    &#x2F;**</span><br><span class="line">     * 5.先发短信，还是先打电话：答案：先发短信，原因锁定的是同一个Phone.class对象</span><br><span class="line">     * @param args</span><br><span class="line">     *&#x2F;</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        Phone1 phone &#x3D; new Phone1();</span><br><span class="line"></span><br><span class="line">        new Thread(() -&gt; &#123;</span><br><span class="line">            phone.sendSms();</span><br><span class="line">        &#125;,&quot;A&quot;).start();</span><br><span class="line"></span><br><span class="line">        try &#123;</span><br><span class="line">            TimeUnit.SECONDS.sleep(1);</span><br><span class="line">        &#125; catch (InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        new Thread(() -&gt; &#123;</span><br><span class="line">            phone.call();</span><br><span class="line">        &#125;,&quot;B&quot;).start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class Phone1 &#123;</span><br><span class="line">    &#x2F;**</span><br><span class="line">     * 发短信</span><br><span class="line">     *&#x2F;</span><br><span class="line">    public static synchronized void sendSms() &#123;</span><br><span class="line">        try &#123;</span><br><span class="line">            TimeUnit.SECONDS.sleep(4);</span><br><span class="line">        &#125; catch (InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(Thread.currentThread().getName() + &quot;发短信！&quot;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &#x2F;**</span><br><span class="line">     * 打电话</span><br><span class="line">     *&#x2F;</span><br><span class="line">    public static synchronized void call() &#123;</span><br><span class="line">        System.out.println(Thread.currentThread().getName() + &quot;打电话！&quot;);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>执行结果：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">A发短信！</span><br><span class="line">B打电话！</span><br><span class="line">public class Test02 &#123;</span><br><span class="line"></span><br><span class="line">    &#x2F;**</span><br><span class="line">     * &#x2F;&#x2F;5.先发短信，还是先打电话：答案：先发短信，原因锁定的是同一个Phone.class对象</span><br><span class="line">     * 6.先发短信，还是先打电话：答案：先发短信，原因锁定的是同一个Phone.class对象</span><br><span class="line">     * @param args</span><br><span class="line">     *&#x2F;</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        Phone1 phone1 &#x3D; new Phone1();</span><br><span class="line">        Phone1 phone2 &#x3D; new Phone1();</span><br><span class="line"></span><br><span class="line">        new Thread(() -&gt; &#123;</span><br><span class="line">            phone1.sendSms();</span><br><span class="line">        &#125;,&quot;A&quot;).start();</span><br><span class="line"></span><br><span class="line">        try &#123;</span><br><span class="line">            TimeUnit.SECONDS.sleep(1);</span><br><span class="line">        &#125; catch (InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        new Thread(() -&gt; &#123;</span><br><span class="line">            phone2.call();</span><br><span class="line">        &#125;,&quot;B&quot;).start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class Phone1 &#123;</span><br><span class="line">    &#x2F;**</span><br><span class="line">     * 发短信</span><br><span class="line">     *&#x2F;</span><br><span class="line">    public static synchronized void sendSms() &#123;</span><br><span class="line">        try &#123;</span><br><span class="line">            TimeUnit.SECONDS.sleep(4);</span><br><span class="line">        &#125; catch (InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(Thread.currentThread().getName() + &quot;发短信！&quot;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &#x2F;**</span><br><span class="line">     * 打电话</span><br><span class="line">     *&#x2F;</span><br><span class="line">    public static synchronized void call() &#123;</span><br><span class="line">        System.out.println(Thread.currentThread().getName() + &quot;打电话！&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>执行结果：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">B打电话！</span><br><span class="line">A发短信！</span><br><span class="line">import java.util.concurrent.TimeUnit;</span><br><span class="line"></span><br><span class="line">public class Test03 &#123;</span><br><span class="line"></span><br><span class="line">    &#x2F;**</span><br><span class="line">     * 7.先发短信，还是先打电话：答案：先打电话，原因锁定的是两个不同的对象。</span><br><span class="line">     * @param args</span><br><span class="line">     *&#x2F;</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        Phone2 phone &#x3D; new Phone2();</span><br><span class="line"></span><br><span class="line">        new Thread(() -&gt; &#123;</span><br><span class="line">            phone.sendSms();</span><br><span class="line">        &#125;,&quot;A&quot;).start();</span><br><span class="line"></span><br><span class="line">        try &#123;</span><br><span class="line">            TimeUnit.SECONDS.sleep(1);</span><br><span class="line">        &#125; catch (InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        new Thread(() -&gt; &#123;</span><br><span class="line">            phone.call();</span><br><span class="line">        &#125;,&quot;B&quot;).start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class Phone2 &#123;</span><br><span class="line">    &#x2F;**</span><br><span class="line">     * 发短信</span><br><span class="line">     *&#x2F;</span><br><span class="line">    public static synchronized void sendSms() &#123;</span><br><span class="line">        try &#123;</span><br><span class="line">            TimeUnit.SECONDS.sleep(4);</span><br><span class="line">        &#125; catch (InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(Thread.currentThread().getName() + &quot;发短信！&quot;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &#x2F;**</span><br><span class="line">     * 打电话</span><br><span class="line">     *&#x2F;</span><br><span class="line">    public synchronized void call() &#123;</span><br><span class="line">        System.out.println(Thread.currentThread().getName() + &quot;打电话！&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>执行结果：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">B打电话！</span><br><span class="line">A发短信！</span><br><span class="line">import java.util.concurrent.TimeUnit;</span><br><span class="line"></span><br><span class="line">public class Test04 &#123;</span><br><span class="line"></span><br><span class="line">    &#x2F;**</span><br><span class="line">     * 8.先发短信，还是先打电话：答案：先打电话，原因锁定的是两个不同的对象。</span><br><span class="line">     * @param args</span><br><span class="line">     *&#x2F;</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        Phone3 phone1 &#x3D; new Phone3();</span><br><span class="line">        Phone3 phone2 &#x3D; new Phone3();</span><br><span class="line"></span><br><span class="line">        new Thread(() -&gt; &#123;</span><br><span class="line">            phone1.sendSms();</span><br><span class="line">        &#125;,&quot;A&quot;).start();</span><br><span class="line"></span><br><span class="line">        try &#123;</span><br><span class="line">            TimeUnit.SECONDS.sleep(1);</span><br><span class="line">        &#125; catch (InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        new Thread(() -&gt; &#123;</span><br><span class="line">            phone2.call();</span><br><span class="line">        &#125;,&quot;B&quot;).start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class Phone3 &#123;</span><br><span class="line">    &#x2F;**</span><br><span class="line">     * 发短信</span><br><span class="line">     *&#x2F;</span><br><span class="line">    public static synchronized void sendSms() &#123;</span><br><span class="line">        try &#123;</span><br><span class="line">            TimeUnit.SECONDS.sleep(4);</span><br><span class="line">        &#125; catch (InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(Thread.currentThread().getName() + &quot;发短信！&quot;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &#x2F;**</span><br><span class="line">     * 打电话</span><br><span class="line">     *&#x2F;</span><br><span class="line">    public synchronized void call() &#123;</span><br><span class="line">        System.out.println(Thread.currentThread().getName() + &quot;打电话！&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>执行结果：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">B打电话！</span><br><span class="line">A发短信！</span><br></pre></td></tr></table></figure>

<h2 id="6-线程安全的集合类型"><a href="#6-线程安全的集合类型" class="headerlink" title="6.线程安全的集合类型"></a>6.线程安全的集合类型</h2><h5 id="CopyOnWriteArrayList"><a href="#CopyOnWriteArrayList" class="headerlink" title="CopyOnWriteArrayList"></a>CopyOnWriteArrayList</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import java.util.*;</span><br><span class="line">import java.util.concurrent.CopyOnWriteArrayList;</span><br><span class="line"></span><br><span class="line">public class TestList &#123;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;        List&lt;String&gt; strings &#x3D; Arrays.asList(&quot;1&quot;, &quot;2&quot;, &quot;3&quot;);</span><br><span class="line">&#x2F;&#x2F;        System.out.println(strings);</span><br><span class="line">&#x2F;&#x2F;        List&lt;String&gt; list &#x3D; new ArrayList&lt;&gt;();</span><br><span class="line">&#x2F;&#x2F;</span><br><span class="line">&#x2F;&#x2F;        for (int i &#x3D; 0; i &lt; 10; i++) &#123;</span><br><span class="line">&#x2F;&#x2F;            &#x2F;&#x2F;ConcurrentModificationException异常</span><br><span class="line">&#x2F;&#x2F;            new Thread(() -&gt; &#123;</span><br><span class="line">&#x2F;&#x2F;                list.add(UUID.randomUUID().toString().substring(0,5));</span><br><span class="line">&#x2F;&#x2F;                System.out.println(list);</span><br><span class="line">&#x2F;&#x2F;            &#125;).start();</span><br><span class="line">&#x2F;&#x2F;        &#125;</span><br><span class="line"></span><br><span class="line">        &#x2F;**</span><br><span class="line">         * 解决方案：</span><br><span class="line">         * 1.Vector</span><br><span class="line">         * 2.Collections.synchronizedList</span><br><span class="line">         * 3.CopyOnWriteArrayList</span><br><span class="line">         *&#x2F;</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F;Vector</span><br><span class="line">&#x2F;&#x2F;        List&lt;String&gt; list &#x3D; new Vector&lt;&gt;();</span><br><span class="line">&#x2F;&#x2F;        for (int i &#x3D; 0; i &lt; 10; i++) &#123;</span><br><span class="line">&#x2F;&#x2F;            new Thread(() -&gt; &#123;</span><br><span class="line">&#x2F;&#x2F;                list.add(UUID.randomUUID().toString().substring(0, 5));</span><br><span class="line">&#x2F;&#x2F;                System.out.println(Thread.currentThread().getName() + &quot;&#x3D;&#x3D;&gt; &quot; + list);</span><br><span class="line">&#x2F;&#x2F;            &#125;, String.valueOf(i)).start();</span><br><span class="line">&#x2F;&#x2F;        &#125;</span><br><span class="line">        &#x2F;&#x2F;2.Collections.synchronizedList</span><br><span class="line">&#x2F;&#x2F;        List&lt;String&gt; list &#x3D; Collections.synchronizedList(new ArrayList&lt;&gt;());</span><br><span class="line">&#x2F;&#x2F;        for (int i &#x3D; 0; i &lt; 10; i++) &#123;</span><br><span class="line">&#x2F;&#x2F;            new Thread(() -&gt; &#123;</span><br><span class="line">&#x2F;&#x2F;                list.add(UUID.randomUUID().toString().substring(0, 5));</span><br><span class="line">&#x2F;&#x2F;                System.out.println(Thread.currentThread().getName() + &quot;&#x3D;&#x3D;&gt; &quot; + list);</span><br><span class="line">&#x2F;&#x2F;            &#125;, String.valueOf(i)).start();</span><br><span class="line">&#x2F;&#x2F;        &#125;</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F;3.CopyOnWriteArrayList</span><br><span class="line">        List&lt;String&gt; list &#x3D; new CopyOnWriteArrayList&lt;&gt;();</span><br><span class="line">        for (int i &#x3D; 0; i &lt; 10; i++) &#123;</span><br><span class="line">            new Thread(() -&gt; &#123;</span><br><span class="line">                list.add(UUID.randomUUID().toString().substring(0, 5));</span><br><span class="line">                System.out.println(Thread.currentThread().getName() + &quot;&#x3D;&#x3D;&gt; &quot; + list);</span><br><span class="line">            &#125;, String.valueOf(i)).start();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h5 id="CopyOnWriteArraySet"><a href="#CopyOnWriteArraySet" class="headerlink" title="CopyOnWriteArraySet"></a>CopyOnWriteArraySet</h5><p>Hashset的底层是什么？</p>
<p><img src="JUC/image-20200422222227341.png" alt="image-20200422222227341"></p>
<p><img src="JUC/image-20200422222838848.png" alt="image-20200422222838848"></p>
<p><img src="JUC/image-20200422222859169.png" alt="image-20200422222859169"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import java.util.Collections;</span><br><span class="line">import java.util.HashSet;</span><br><span class="line">import java.util.Set;</span><br><span class="line">import java.util.UUID;</span><br><span class="line">import java.util.concurrent.CopyOnWriteArraySet;</span><br><span class="line"></span><br><span class="line">public class TestSet &#123;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">&#x2F;&#x2F;        Set&lt;String&gt; set &#x3D; new HashSet&lt;&gt;();</span><br><span class="line">&#x2F;&#x2F;        for (int i &#x3D; 0; i &lt; 30; i++) &#123;</span><br><span class="line">&#x2F;&#x2F;            &#x2F;&#x2F;ConcurrentModificationException</span><br><span class="line">&#x2F;&#x2F;            new Thread(() -&gt; &#123;</span><br><span class="line">&#x2F;&#x2F;                set.add(UUID.randomUUID().toString().substring(0,5));</span><br><span class="line">&#x2F;&#x2F;                System.out.println(set);</span><br><span class="line">&#x2F;&#x2F;            &#125;, String.valueOf(i)).start();</span><br><span class="line">&#x2F;&#x2F;        &#125;</span><br><span class="line">        &#x2F;**</span><br><span class="line">         * 解决方案：</span><br><span class="line">         * 1.Collections.synchronizedSet(new HashSet&lt;&gt;())</span><br><span class="line">         * 2.CopyOnWriteArraySet</span><br><span class="line">         *&#x2F;</span><br><span class="line">&#x2F;&#x2F;        Set&lt;String&gt; set &#x3D; Collections.synchronizedSet(new HashSet&lt;&gt;());</span><br><span class="line">&#x2F;&#x2F;        for (int i &#x3D; 0; i &lt; 30; i++) &#123;</span><br><span class="line">&#x2F;&#x2F;            &#x2F;&#x2F;ConcurrentModificationException</span><br><span class="line">&#x2F;&#x2F;            new Thread(() -&gt; &#123;</span><br><span class="line">&#x2F;&#x2F;                set.add(UUID.randomUUID().toString().substring(0,5));</span><br><span class="line">&#x2F;&#x2F;                System.out.println(set);</span><br><span class="line">&#x2F;&#x2F;            &#125;, String.valueOf(i)).start();</span><br><span class="line">&#x2F;&#x2F;        &#125;</span><br><span class="line"></span><br><span class="line">        Set&lt;String&gt; set &#x3D; new CopyOnWriteArraySet&lt;&gt;();</span><br><span class="line">        for (int i &#x3D; 0; i &lt; 30; i++) &#123;</span><br><span class="line">            new Thread(() -&gt; &#123;</span><br><span class="line">                set.add(UUID.randomUUID().toString().substring(0, 5));</span><br><span class="line">                System.out.println(set);</span><br><span class="line">            &#125;).start();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="ConcurrentHashMap"><a href="#ConcurrentHashMap" class="headerlink" title="ConcurrentHashMap"></a>ConcurrentHashMap</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">public class TestMap &#123;</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">&#x2F;&#x2F;        Map&lt;String,String&gt; map &#x3D; new HashMap&lt;&gt;();</span><br><span class="line">&#x2F;&#x2F;        &#x2F;&#x2F;ConcurrentModificationException</span><br><span class="line">&#x2F;&#x2F;        for (int i &#x3D; 0; i &lt; 30; i++) &#123;</span><br><span class="line">&#x2F;&#x2F;            new Thread(()-&gt;&#123;</span><br><span class="line">&#x2F;&#x2F;                map.put(Thread.currentThread().getName(), UUID.randomUUID().toString().substring(0,5));</span><br><span class="line">&#x2F;&#x2F;                System.out.println(map);</span><br><span class="line">&#x2F;&#x2F;            &#125;,String.valueOf(i)).start();</span><br><span class="line">&#x2F;&#x2F;        &#125;</span><br><span class="line"></span><br><span class="line">        &#x2F;**</span><br><span class="line">         * 解决方案：</span><br><span class="line">         * 1.</span><br><span class="line">         * 2.</span><br><span class="line">         *&#x2F;</span><br><span class="line">&#x2F;&#x2F;        Map&lt;String,String&gt; map &#x3D; Collections.synchronizedMap(new HashMap&lt;&gt;());</span><br><span class="line">&#x2F;&#x2F;        &#x2F;&#x2F;ConcurrentModificationException</span><br><span class="line">&#x2F;&#x2F;        for (int i &#x3D; 0; i &lt; 30; i++) &#123;</span><br><span class="line">&#x2F;&#x2F;            new Thread(()-&gt;&#123;</span><br><span class="line">&#x2F;&#x2F;                map.put(Thread.currentThread().getName(), UUID.randomUUID().toString().substring(0,5));</span><br><span class="line">&#x2F;&#x2F;                System.out.println(map);</span><br><span class="line">&#x2F;&#x2F;            &#125;,String.valueOf(i)).start();</span><br><span class="line">&#x2F;&#x2F;        &#125;</span><br><span class="line">        Map&lt;String,String&gt; map &#x3D; new ConcurrentHashMap&lt;&gt;();</span><br><span class="line">        &#x2F;&#x2F;ConcurrentModificationException</span><br><span class="line">        for (int i &#x3D; 0; i &lt; 30; i++) &#123;</span><br><span class="line">            new Thread(()-&gt;&#123;</span><br><span class="line">                map.put(Thread.currentThread().getName(), UUID.randomUUID().toString().substring(0,5));</span><br><span class="line">                System.out.println(map);</span><br><span class="line">            &#125;,String.valueOf(i)).start();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="7-Callable"><a href="#7-Callable" class="headerlink" title="7.Callable"></a>7.Callable</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">public class TestCallable &#123;</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        &#x2F;&#x2F;new Thread(new MyThread()).start();</span><br><span class="line">        MyCallable callable &#x3D; new MyCallable();</span><br><span class="line">        FutureTask&lt;Integer&gt; futureTask &#x3D; new FutureTask&lt;Integer&gt;(callable);</span><br><span class="line">        new Thread(futureTask).start();</span><br><span class="line">        try &#123;</span><br><span class="line">            Integer integer &#x3D; futureTask.get();</span><br><span class="line">            System.out.println(integer);</span><br><span class="line">        &#125; catch (InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; catch (ExecutionException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class MyThread implements Runnable&#123;</span><br><span class="line">    @Override</span><br><span class="line">    public void run() &#123;</span><br><span class="line">        System.out.println(&quot;run()&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class MyCallable implements Callable&lt;Integer&gt; &#123;</span><br><span class="line">    @Override</span><br><span class="line">    public Integer call() throws Exception &#123;</span><br><span class="line">        System.out.println(&quot;call()&quot;);</span><br><span class="line">        return 1024;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p><img src="JUC/image-20200422231819081.png" alt="image-20200422231819081"></p>
<p><img src="JUC/image-20200422231941208.png" alt="image-20200422231941208"></p>
<p><img src="JUC/image-20200422233013050.png" alt="image-20200422233013050"></p>
<p>注意细节：</p>
<p>1.结果会被缓存</p>
<p>2.结果可能会等待，会阻塞</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import java.util.concurrent.Callable;</span><br><span class="line">import java.util.concurrent.FutureTask;</span><br><span class="line">import java.util.concurrent.TimeUnit;</span><br><span class="line"></span><br><span class="line">public class TestCallable &#123;</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        MyCallable callable &#x3D; new MyCallable();</span><br><span class="line">        FutureTask&lt;Integer&gt; futureTask &#x3D; new FutureTask&lt;Integer&gt;(callable);</span><br><span class="line">        new Thread(futureTask,&quot;A&quot;).start();&#x2F;&#x2F;结果会被缓存</span><br><span class="line">        new Thread(futureTask,&quot;B&quot;).start();</span><br><span class="line">        try &#123;</span><br><span class="line">            Integer integer &#x3D; futureTask.get();&#x2F;&#x2F;结果可能会等待，会阻塞</span><br><span class="line">            System.out.println(integer);</span><br><span class="line">        &#125; catch (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class MyCallable implements Callable&lt;Integer&gt; &#123;</span><br><span class="line">    @Override</span><br><span class="line">    public Integer call() throws Exception &#123;</span><br><span class="line">        System.out.println(&quot;call()&quot;);</span><br><span class="line">        TimeUnit.SECONDS.sleep(2);</span><br><span class="line">        return 1024;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>执行结果：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">call()</span><br><span class="line">1024</span><br></pre></td></tr></table></figure>

<h2 id="8-常用的辅助类"><a href="#8-常用的辅助类" class="headerlink" title="8.常用的辅助类"></a>8.常用的辅助类</h2><h4 id="CountDownLatch"><a href="#CountDownLatch" class="headerlink" title="CountDownLatch"></a>CountDownLatch</h4><p><img src="image-20200423000153185.png" alt="image-20200423000153185"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import java.util.concurrent.CountDownLatch;</span><br><span class="line"></span><br><span class="line">public class CountDownLatchDemo &#123;</span><br><span class="line">    &#x2F;**</span><br><span class="line">     * 值日生在班中所有学生都放学离开教室后，才关闭教室的门</span><br><span class="line">     *</span><br><span class="line">     * @param args</span><br><span class="line">     *&#x2F;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line"></span><br><span class="line">        CountDownLatch latch &#x3D; new CountDownLatch(6);</span><br><span class="line"></span><br><span class="line">        for (int i &#x3D; 1; i &lt;&#x3D; 6; i++) &#123;</span><br><span class="line">            new Thread(() -&gt; &#123;</span><br><span class="line">                System.out.println(Thread.currentThread().getName() + &quot;离开了教室！&quot;);</span><br><span class="line">                latch.countDown();</span><br><span class="line">            &#125;, String.valueOf(i)).start();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        try &#123;</span><br><span class="line">            &#x2F;&#x2F;等计数器归0</span><br><span class="line">            latch.await();</span><br><span class="line">            System.out.println(&quot;值日生关门！！！&quot;);</span><br><span class="line"></span><br><span class="line">        &#125; catch (InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>执行结果：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1离开了教室！</span><br><span class="line">5离开了教室！</span><br><span class="line">6离开了教室！</span><br><span class="line">2离开了教室！</span><br><span class="line">4离开了教室！</span><br><span class="line">3离开了教室！</span><br><span class="line">值日生关门！！！</span><br></pre></td></tr></table></figure>

<h4 id="CyclicBarrier"><a href="#CyclicBarrier" class="headerlink" title="CyclicBarrier"></a>CyclicBarrier</h4><p><img src="JUC/image-20200423000915243.png" alt="image-20200423000915243"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import java.util.concurrent.BrokenBarrierException;</span><br><span class="line">import java.util.concurrent.CyclicBarrier;</span><br><span class="line"></span><br><span class="line">public class CyclicBarrierDemo &#123;</span><br><span class="line">    &#x2F;**</span><br><span class="line">     * 可以理解为加法计数器</span><br><span class="line">     * 集齐七颗龙珠，召唤神龙</span><br><span class="line">     *</span><br><span class="line">     * @param args</span><br><span class="line">     *&#x2F;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        CyclicBarrier cyclicBarrier &#x3D; new CyclicBarrier(7, () -&gt; &#123;</span><br><span class="line">            System.out.println(&quot;召唤神龙&quot;);</span><br><span class="line">        &#125;);</span><br><span class="line">        for (int i &#x3D; 1; i &lt;&#x3D; 7; i++) &#123;</span><br><span class="line">            final int temp &#x3D; i;</span><br><span class="line">            new Thread(() -&gt; &#123;</span><br><span class="line">                System.out.println(&quot;线程&quot;+Thread.currentThread().getName()+&quot;收集到编号为&quot;+temp+&quot;的龙珠&quot;);</span><br><span class="line">                try &#123;</span><br><span class="line">                    cyclicBarrier.await();</span><br><span class="line">                &#125; catch (InterruptedException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125; catch (BrokenBarrierException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,String.valueOf(i)).start();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>执行结果：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">线程1收集到编号为1的龙珠</span><br><span class="line">线程4收集到编号为4的龙珠</span><br><span class="line">线程5收集到编号为5的龙珠</span><br><span class="line">线程2收集到编号为2的龙珠</span><br><span class="line">线程3收集到编号为3的龙珠</span><br><span class="line">线程7收集到编号为7的龙珠</span><br><span class="line">线程6收集到编号为6的龙珠</span><br><span class="line">召唤神龙</span><br></pre></td></tr></table></figure>

<h4 id="Semaphore"><a href="#Semaphore" class="headerlink" title="Semaphore"></a>Semaphore</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import java.util.concurrent.Semaphore;</span><br><span class="line">import java.util.concurrent.TimeUnit;</span><br><span class="line"></span><br><span class="line">public class SemaphoreDemo &#123;</span><br><span class="line">    &#x2F;**</span><br><span class="line">     * 抢车位，6辆车，3个车位</span><br><span class="line">     *</span><br><span class="line">     * @param args</span><br><span class="line">     *&#x2F;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        &#x2F;&#x2F;3个车位</span><br><span class="line">        Semaphore semaphore &#x3D; new Semaphore(3);</span><br><span class="line"></span><br><span class="line">        for (int i &#x3D; 1; i &lt;&#x3D; 6; i++) &#123;</span><br><span class="line">            new Thread(() -&gt; &#123;</span><br><span class="line">                &#x2F;&#x2F;获得</span><br><span class="line">                try &#123;</span><br><span class="line">                    semaphore.acquire();</span><br><span class="line">                    System.out.println(Thread.currentThread().getName() + &quot;进入了车位&quot;);</span><br><span class="line">                    TimeUnit.SECONDS.sleep(2);</span><br><span class="line">                    System.out.println(Thread.currentThread().getName() + &quot;离开了车位&quot;);</span><br><span class="line">                &#125; catch (InterruptedException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125; finally &#123;</span><br><span class="line">                    semaphore.release();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &quot;汽车&quot; + String.valueOf(i)).start();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>执行结果：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">汽车1进入了车位</span><br><span class="line">汽车3进入了车位</span><br><span class="line">汽车2进入了车位</span><br><span class="line">汽车1离开了车位</span><br><span class="line">汽车3离开了车位</span><br><span class="line">汽车2离开了车位</span><br><span class="line">汽车4进入了车位</span><br><span class="line">汽车6进入了车位</span><br><span class="line">汽车5进入了车位</span><br><span class="line">汽车4离开了车位</span><br><span class="line">汽车6离开了车位</span><br><span class="line">汽车5离开了车位</span><br></pre></td></tr></table></figure>

<p>原理：</p>
<p><code>semaphore.acquire()</code>获得，假设如果已经满了，等待，等待被释放为止！</p>
<p><code>semaphore.release()</code>释放，会将当前的信号量释放+1，然后唤醒等待的线程！</p>
<h2 id="9-读写锁"><a href="#9-读写锁" class="headerlink" title="9.读写锁"></a>9.读写锁</h2><p><img src="JUC/image-20200423074900178.png" alt="image-20200423074900178"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import java.util.HashMap;</span><br><span class="line">import java.util.Map;</span><br><span class="line">import java.util.concurrent.locks.ReadWriteLock;</span><br><span class="line">import java.util.concurrent.locks.ReentrantReadWriteLock;</span><br><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line"> * 独占锁（写锁） -次只能被一个线程占有</span><br><span class="line"> * 共享锁（读锁） 多个线程可以同时占有</span><br><span class="line"> *</span><br><span class="line"> * ReadWriteLock</span><br><span class="line"> * 读-读 可以共存</span><br><span class="line"> * 读-写 不能共存</span><br><span class="line"> * 写-写 不能共存</span><br><span class="line"> *&#x2F;</span><br><span class="line"></span><br><span class="line">public class ReadWriteLockDemo &#123;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        &#x2F;&#x2F;没有锁</span><br><span class="line">&#x2F;&#x2F;        MyCache myCache &#x3D; new MyCache();</span><br><span class="line">        &#x2F;&#x2F;有锁的缓存</span><br><span class="line">        MyReadRriteLockCache myCache &#x3D; new MyReadRriteLockCache();</span><br><span class="line">        &#x2F;&#x2F;10个线程写数据</span><br><span class="line">        for (int i &#x3D; 0; i &lt; 10; i++) &#123;</span><br><span class="line">            final int temp &#x3D; i;</span><br><span class="line">            new Thread(()-&gt;&#123;</span><br><span class="line">                myCache.put(temp+&quot;&quot;,Thread.currentThread().getName());</span><br><span class="line">            &#125;,&quot;线程&quot;+String.valueOf(temp)).start();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F;10个线程读数据</span><br><span class="line">        for (int i &#x3D; 0; i &lt; 10; i++) &#123;</span><br><span class="line">            final  int temp &#x3D; i;</span><br><span class="line">            new Thread(()-&gt;&#123;</span><br><span class="line">                myCache.get(temp+&quot;&quot;);</span><br><span class="line">            &#125;,String.valueOf(temp)).start();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class MyCache&#123;</span><br><span class="line">    private volatile Map&lt;String,Object&gt; map &#x3D; new HashMap&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    public void put(String key,Object value)&#123;</span><br><span class="line">        System.out.println(Thread.currentThread().getName()+&quot;写入数据开始&quot;);</span><br><span class="line">        map.put(key,value);</span><br><span class="line">        System.out.println(Thread.currentThread().getName()+&quot;写入数据OK&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">    public void get(String key)&#123;</span><br><span class="line">        System.out.println(Thread.currentThread().getName()+&quot;读取数据开始&quot;);</span><br><span class="line">        Object o &#x3D; map.get(key);</span><br><span class="line">        System.out.println(Thread.currentThread().getName()+&quot;读取数据OK&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line"> * 带读写锁的缓存</span><br><span class="line"> *&#x2F;</span><br><span class="line">class MyReadRriteLockCache&#123;</span><br><span class="line">    private volatile Map&lt;String,Object&gt; map &#x3D; new HashMap&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    final ReadWriteLock readWriteLock &#x3D; new ReentrantReadWriteLock();</span><br><span class="line"></span><br><span class="line">    public void put(String key,Object value)&#123;</span><br><span class="line">        readWriteLock.writeLock().lock();</span><br><span class="line"></span><br><span class="line">        try &#123;</span><br><span class="line">            System.out.println(Thread.currentThread().getName()+&quot;写入数据开始&quot;);</span><br><span class="line">            map.put(key,value);</span><br><span class="line">            System.out.println(Thread.currentThread().getName()+&quot;写入数据OK&quot;);</span><br><span class="line">        &#125; catch (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; finally &#123;</span><br><span class="line">            readWriteLock.writeLock().unlock();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    public void get(String key)&#123;</span><br><span class="line">        readWriteLock.readLock().lock();</span><br><span class="line">        try &#123;</span><br><span class="line">            System.out.println(Thread.currentThread().getName()+&quot;读取数据开始&quot;);</span><br><span class="line">            Object o &#x3D; map.get(key);</span><br><span class="line">            System.out.println(Thread.currentThread().getName()+&quot;读取数据OK&quot;);</span><br><span class="line">        &#125; catch (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; finally &#123;</span><br><span class="line">            readWriteLock.readLock().unlock();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>执行结果：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">线程0写入数据开始</span><br><span class="line">线程0写入数据OK</span><br><span class="line">线程1写入数据开始</span><br><span class="line">线程1写入数据OK</span><br><span class="line">线程6写入数据开始</span><br><span class="line">线程6写入数据OK</span><br><span class="line">线程2写入数据开始</span><br><span class="line">线程2写入数据OK</span><br><span class="line">线程8写入数据开始</span><br><span class="line">线程8写入数据OK</span><br><span class="line">线程3写入数据开始</span><br><span class="line">线程3写入数据OK</span><br><span class="line">线程4写入数据开始</span><br><span class="line">线程4写入数据OK</span><br><span class="line">线程5写入数据开始</span><br><span class="line">线程5写入数据OK</span><br><span class="line">线程7写入数据开始</span><br><span class="line">线程7写入数据OK</span><br><span class="line">线程9写入数据开始</span><br><span class="line">线程9写入数据OK</span><br><span class="line">0读取数据开始</span><br><span class="line">0读取数据OK</span><br><span class="line">2读取数据开始</span><br><span class="line">3读取数据开始</span><br><span class="line">1读取数据开始</span><br><span class="line">1读取数据OK</span><br><span class="line">3读取数据OK</span><br><span class="line">6读取数据开始</span><br><span class="line">4读取数据开始</span><br><span class="line">4读取数据OK</span><br><span class="line">2读取数据OK</span><br><span class="line">8读取数据开始</span><br><span class="line">9读取数据开始</span><br><span class="line">7读取数据开始</span><br><span class="line">6读取数据OK</span><br><span class="line">5读取数据开始</span><br><span class="line">7读取数据OK</span><br><span class="line">9读取数据OK</span><br><span class="line">8读取数据OK</span><br><span class="line">5读取数据OK</span><br></pre></td></tr></table></figure>

<h2 id="10-阻塞队列"><a href="#10-阻塞队列" class="headerlink" title="10.阻塞队列"></a>10.阻塞队列</h2><h4 id="BlockingQueue"><a href="#BlockingQueue" class="headerlink" title="BlockingQueue"></a>BlockingQueue</h4><p><img src="JUC/image-20200423083817588.png" alt="image-20200423083817588"></p>
<p><strong>学会使用队列</strong></p>
<p>添加、移除</p>
<p><strong>四组API</strong></p>
<table>
<thead>
<tr>
<th>方式</th>
<th>抛出异常</th>
<th>有返回值，不抛出异常</th>
<th>阻塞等待</th>
<th>超时等待</th>
</tr>
</thead>
<tbody><tr>
<td>添加</td>
<td>add()</td>
<td>offer()</td>
<td>put()</td>
<td>offer(E e, long timeout, TimeUnit unit)</td>
</tr>
<tr>
<td>移除</td>
<td>remove()</td>
<td>poll()</td>
<td>take()</td>
<td>poll(long timeout, TimeUnit unit)</td>
</tr>
<tr>
<td>检测队首元素</td>
<td>element()</td>
<td>peek()</td>
<td>-</td>
<td>-</td>
</tr>
</tbody></table>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import java.util.concurrent.ArrayBlockingQueue;</span><br><span class="line">import java.util.concurrent.TimeUnit;</span><br><span class="line"></span><br><span class="line">public class BlockingQueueDemo &#123;</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) throws InterruptedException &#123;</span><br><span class="line">        &#x2F;&#x2F;test01();</span><br><span class="line">        &#x2F;&#x2F;test02();</span><br><span class="line">        &#x2F;&#x2F;test03();</span><br><span class="line">        test04();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &#x2F;**</span><br><span class="line">     * 抛出异常</span><br><span class="line">     *&#x2F;</span><br><span class="line">    public static void test01()&#123;</span><br><span class="line">        ArrayBlockingQueue queue &#x3D; new ArrayBlockingQueue(3);</span><br><span class="line">        System.out.println(queue.add(&quot;a&quot;));</span><br><span class="line">        System.out.println(queue.add(&quot;b&quot;));</span><br><span class="line">        System.out.println(queue.add(&quot;c&quot;));</span><br><span class="line">        &#x2F;&#x2F;java.lang.IllegalStateException: Queue full</span><br><span class="line">        &#x2F;&#x2F;queue.add(&quot;d&quot;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        System.out.println(queue.remove());</span><br><span class="line">        System.out.println(queue.remove());</span><br><span class="line">        System.out.println(queue.remove());</span><br><span class="line">        &#x2F;&#x2F;java.util.NoSuchElementException</span><br><span class="line">        System.out.println(&quot;队首元素：&quot;+queue.element());</span><br><span class="line">        &#x2F;&#x2F;java.util.NoSuchElementException</span><br><span class="line">        &#x2F;&#x2F;System.out.println(queue.remove());</span><br><span class="line">    &#125;</span><br><span class="line">    &#x2F;**</span><br><span class="line">     * 有返回值，不抛出异常</span><br><span class="line">     *&#x2F;</span><br><span class="line">    public static void test02()&#123;</span><br><span class="line">        ArrayBlockingQueue queue &#x3D; new ArrayBlockingQueue(3);</span><br><span class="line">        System.out.println(queue.offer(&quot;a&quot;));</span><br><span class="line">        System.out.println(queue.offer(&quot;b&quot;));</span><br><span class="line">        System.out.println(queue.offer(&quot;c&quot;));</span><br><span class="line">        &#x2F;&#x2F;返回false</span><br><span class="line">        &#x2F;&#x2F;System.out.println(queue.offer(&quot;d&quot;));</span><br><span class="line"></span><br><span class="line">        System.out.println(queue.poll());</span><br><span class="line">        System.out.println(queue.poll());</span><br><span class="line">        System.out.println(queue.poll());</span><br><span class="line">        &#x2F;&#x2F;队首元素：null</span><br><span class="line">        System.out.println(&quot;队首元素：&quot;+queue.peek());</span><br><span class="line">        &#x2F;&#x2F;返回null</span><br><span class="line">        System.out.println(queue.poll());</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    &#x2F;**</span><br><span class="line">     * 阻塞等待</span><br><span class="line">     *&#x2F;</span><br><span class="line">    public static void test03() throws InterruptedException &#123;</span><br><span class="line">        ArrayBlockingQueue queue &#x3D; new ArrayBlockingQueue(3);</span><br><span class="line">        queue.put(&quot;a&quot;);</span><br><span class="line">        queue.put(&quot;b&quot;);</span><br><span class="line">        queue.put(&quot;c&quot;);</span><br><span class="line">        &#x2F;&#x2F;阻塞等待</span><br><span class="line">        &#x2F;&#x2F;queue.put(&quot;d&quot;);</span><br><span class="line">        System.out.println(queue.take());</span><br><span class="line">        System.out.println(queue.take());</span><br><span class="line">        System.out.println(queue.take());</span><br><span class="line">        &#x2F;&#x2F;阻塞等待</span><br><span class="line">        &#x2F;&#x2F;System.out.println(queue.take());</span><br><span class="line">    &#125;</span><br><span class="line">    &#x2F;**</span><br><span class="line">     * 超时等待</span><br><span class="line">     *&#x2F;</span><br><span class="line">    public static void test04() throws InterruptedException &#123;</span><br><span class="line">        ArrayBlockingQueue queue &#x3D; new ArrayBlockingQueue(3);</span><br><span class="line">        queue.offer(&quot;a&quot;,2, TimeUnit.SECONDS);</span><br><span class="line">        queue.offer(&quot;b&quot;,2, TimeUnit.SECONDS);</span><br><span class="line">        queue.offer(&quot;c&quot;,2, TimeUnit.SECONDS);</span><br><span class="line">        &#x2F;&#x2F;两秒钟后超时，退出阻塞</span><br><span class="line">        queue.offer(&quot;d&quot;,2, TimeUnit.SECONDS);</span><br><span class="line">        System.out.println(queue.poll(1, TimeUnit.SECONDS));</span><br><span class="line">        System.out.println(queue.poll(1, TimeUnit.SECONDS));</span><br><span class="line">        System.out.println(queue.poll(1, TimeUnit.SECONDS));</span><br><span class="line">        &#x2F;&#x2F;&#x2F;&#x2F;两秒钟后超时，返回null</span><br><span class="line">        System.out.println(queue.poll(1, TimeUnit.SECONDS));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="SynchronousQueue"><a href="#SynchronousQueue" class="headerlink" title="SynchronousQueue"></a>SynchronousQueue</h4><p><img src="JUC/image-20200423093223548.png" alt="image-20200423093223548"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import java.util.concurrent.BlockingQueue;</span><br><span class="line">import java.util.concurrent.SynchronousQueue;</span><br><span class="line">import java.util.concurrent.TimeUnit;</span><br><span class="line"></span><br><span class="line">public class SynchronousQueueDemo &#123;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        BlockingQueue&lt;String&gt; blockingQueue &#x3D; new SynchronousQueue&lt;&gt;();</span><br><span class="line">        new Thread(() -&gt; &#123;</span><br><span class="line">            try &#123;</span><br><span class="line">                System.out.println(Thread.currentThread().getName()+&quot; put 1&quot;);</span><br><span class="line">                blockingQueue.put(&quot;1&quot;);</span><br><span class="line">                System.out.println(Thread.currentThread().getName()+&quot; put 2&quot;);</span><br><span class="line">                blockingQueue.put(&quot;2&quot;);</span><br><span class="line">                System.out.println(Thread.currentThread().getName()+&quot; put 3&quot;);</span><br><span class="line">                blockingQueue.put(&quot;3&quot;);</span><br><span class="line">            &#125; catch (InterruptedException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;, &quot;T1&quot;).start();</span><br><span class="line">        new Thread(() -&gt; &#123;</span><br><span class="line">            try &#123;</span><br><span class="line">                TimeUnit.SECONDS.sleep(3);</span><br><span class="line">                System.out.println(Thread.currentThread().getName()+&quot; &#x3D;&gt; &quot; +blockingQueue.take());</span><br><span class="line">                TimeUnit.SECONDS.sleep(3);</span><br><span class="line">                System.out.println(Thread.currentThread().getName()+&quot; &#x3D;&gt; &quot; +blockingQueue.take());</span><br><span class="line">                TimeUnit.SECONDS.sleep(3);</span><br><span class="line">                System.out.println(Thread.currentThread().getName()+&quot; &#x3D;&gt; &quot; +blockingQueue.take());</span><br><span class="line">            &#125; catch (InterruptedException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;, &quot;T2&quot;).start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="11-线程池（重点）"><a href="#11-线程池（重点）" class="headerlink" title="11.线程池（重点）"></a>11.线程池（重点）</h2><p>线程池：3大方法、7大参数、4种拒绝策略</p>
<p>池化技术***</p>
<p>程序的运行本质：占用系统的资源！优化资源的使用！=&gt;池化技术</p>
<p>线程池、连接池、内存池、对象池//…创建、销毁，十分浪费资源</p>
<p>池化技术：事先准备好一些资源，有人要用，就来我这里拿，用完之后还给我。</p>
<p><strong><em>线程池的好处：\</em></strong></p>
<p>1.降低资源的消耗</p>
<p>2.提高相应的速度</p>
<p>3.方便管理</p>
<p>线程复用，可以控制最大并发数、管理线程。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">public class ThreadPoolDemo &#123;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">&#x2F;&#x2F;        ExecutorService threadPool &#x3D; Executors.newSingleThreadExecutor();&#x2F;&#x2F;单个线程</span><br><span class="line">&#x2F;&#x2F;       ExecutorService threadPool &#x3D;  Executors.newFixedThreadPool(5);&#x2F;&#x2F;固定线程池容量</span><br><span class="line">        ExecutorService threadPool &#x3D; Executors.newCachedThreadPool();&#x2F;&#x2F; 可伸缩容量,遇强则强</span><br><span class="line"></span><br><span class="line">        try &#123;</span><br><span class="line">            for (int i &#x3D; 0; i &lt; 100; i++) &#123;</span><br><span class="line">                threadPool.execute(() -&gt; &#123;</span><br><span class="line">                    System.out.println(Thread.currentThread().getName());</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; catch (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; finally &#123;</span><br><span class="line">            threadPool.shutdown();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h5 id="3大方法："><a href="#3大方法：" class="headerlink" title="3大方法：\"></a><strong><em>3大方法：\</em></strong></h5><p>Executors.newSingleThreadExecutor();//单个线程</p>
<p>Executors.newFixedThreadPool(5);//固定线程池大小</p>
<p>Executors.newCachedThreadPool();// 可伸缩容量,遇强则强，遇弱则弱</p>
<h5 id="7大参数："><a href="#7大参数：" class="headerlink" title="7大参数：\"></a><strong><em>7大参数：\</em></strong></h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">public static ExecutorService newSingleThreadExecutor() &#123;</span><br><span class="line">  return new FinalizableDelegatedExecutorService</span><br><span class="line">    (new ThreadPoolExecutor(1, 1,</span><br><span class="line">                            0L, TimeUnit.MILLISECONDS,</span><br><span class="line">                            new LinkedBlockingQueue&lt;Runnable&gt;()));</span><br><span class="line">&#125;</span><br><span class="line">public static ExecutorService newFixedThreadPool(int nThreads) &#123;</span><br><span class="line">  return new ThreadPoolExecutor(nThreads, nThreads,</span><br><span class="line">                                0L, TimeUnit.MILLISECONDS,</span><br><span class="line">                                new LinkedBlockingQueue&lt;Runnable&gt;());</span><br><span class="line">&#125;</span><br><span class="line">public static ExecutorService newCachedThreadPool() &#123;</span><br><span class="line">  return new ThreadPoolExecutor(0, Integer.MAX_VALUE,</span><br><span class="line">                                60L, TimeUnit.SECONDS,</span><br><span class="line">                                new SynchronousQueue&lt;Runnable&gt;());</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;**</span><br><span class="line">     * Creates a new &#123;@code ThreadPoolExecutor&#125; with the given initial</span><br><span class="line">     * parameters.</span><br><span class="line">     *</span><br><span class="line">     * @param corePoolSize the number of threads to keep in the pool, even</span><br><span class="line">     *        if they are idle, unless &#123;@code allowCoreThreadTimeOut&#125; is set</span><br><span class="line">     * @param maximumPoolSize the maximum number of threads to allow in the</span><br><span class="line">     *        pool</span><br><span class="line">     * @param keepAliveTime when the number of threads is greater than</span><br><span class="line">     *        the core, this is the maximum time that excess idle threads</span><br><span class="line">     *        will wait for new tasks before terminating.</span><br><span class="line">     * @param unit the time unit for the &#123;@code keepAliveTime&#125; argument</span><br><span class="line">     * @param workQueue the queue to use for holding tasks before they are</span><br><span class="line">     *        executed.  This queue will hold only the &#123;@code Runnable&#125;</span><br><span class="line">     *        tasks submitted by the &#123;@code execute&#125; method.</span><br><span class="line">     * @param threadFactory the factory to use when the executor</span><br><span class="line">     *        creates a new thread</span><br><span class="line">     * @param handler the handler to use when execution is blocked</span><br><span class="line">     *        because the thread bounds and queue capacities are reached</span><br><span class="line">     * @throws IllegalArgumentException if one of the following holds:&lt;br&gt;</span><br><span class="line">     *         &#123;@code corePoolSize &lt; 0&#125;&lt;br&gt;</span><br><span class="line">     *         &#123;@code keepAliveTime &lt; 0&#125;&lt;br&gt;</span><br><span class="line">     *         &#123;@code maximumPoolSize &lt;&#x3D; 0&#125;&lt;br&gt;</span><br><span class="line">     *         &#123;@code maximumPoolSize &lt; corePoolSize&#125;</span><br><span class="line">     * @throws NullPointerException if &#123;@code workQueue&#125;</span><br><span class="line">     *         or &#123;@code threadFactory&#125; or &#123;@code handler&#125; is null</span><br><span class="line">     *&#x2F;</span><br><span class="line">    public ThreadPoolExecutor(int corePoolSize,&#x2F;&#x2F;核心线程池大小</span><br><span class="line">                              int maximumPoolSize,&#x2F;&#x2F;最大线程池大小</span><br><span class="line">                              long keepAliveTime,&#x2F;&#x2F;超时了没有调用就会释放</span><br><span class="line">                              TimeUnit unit,&#x2F;&#x2F;超时单位</span><br><span class="line">                              BlockingQueue&lt;Runnable&gt; workQueue,&#x2F;&#x2F;阻塞队列</span><br><span class="line">                              ThreadFactory threadFactory,&#x2F;&#x2F;线程工厂：创建线程，一般不用动</span><br><span class="line">                              RejectedExecutionHandler handler&#x2F;&#x2F;拒绝策略) &#123;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p><img src="JUC/image-20200423102614915.png" alt="image-20200423102614915"></p>
<h5 id="4种拒绝策略-："><a href="#4种拒绝策略-：" class="headerlink" title="4种拒绝策略\："></a><strong><em>4种拒绝策略\</em></strong>：</h5><ol>
<li>new ThreadPoolExecutor.AbortPolicy() 银行满了，还有人进来，不处理这个人的，抛出异常 java.util.concurrent.RejectedExecutionException</li>
<li>new ThreadPoolExecutor.CallerRunsPolicy() 哪来的去哪里</li>
<li>new ThreadPoolExecutor.DiscardPolicy() 队列满了，丢掉任务，不会抛出异常</li>
<li>new ThreadPoolExecutor.DiscardOldestPolicy() 队列满了，尝试去和最早的竞争，也不会抛出异常</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import java.util.concurrent.*;</span><br><span class="line"></span><br><span class="line">public class ThreadPoolDemo1 &#123;</span><br><span class="line"></span><br><span class="line">    &#x2F;**</span><br><span class="line">     * new ThreadPoolExecutor.AbortPolicy() 银行满了，还有人进来，不处理这个人的，抛出异常 java.util.concurrent.RejectedExecutionException</span><br><span class="line">     * new ThreadPoolExecutor.CallerRunsPolicy() 哪来的去哪里</span><br><span class="line">     * new ThreadPoolExecutor.DiscardPolicy() 队列满了，丢掉任务，不会抛出异常</span><br><span class="line">     * new ThreadPoolExecutor.DiscardOldestPolicy() 队列满了，尝试去和最早的竞争，也不会抛出异常</span><br><span class="line">     *</span><br><span class="line">     * @param args</span><br><span class="line">     *&#x2F;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        ThreadPoolExecutor threadPoolExecutor &#x3D; new ThreadPoolExecutor(</span><br><span class="line">                2,</span><br><span class="line">                5,</span><br><span class="line">                10,</span><br><span class="line">                TimeUnit.SECONDS,</span><br><span class="line">                new LinkedBlockingQueue&lt;&gt;(3),</span><br><span class="line">                Executors.defaultThreadFactory(),</span><br><span class="line">                new ThreadPoolExecutor.DiscardOldestPolicy());</span><br><span class="line"></span><br><span class="line">        try &#123;</span><br><span class="line">            for (int i &#x3D; 0; i &lt; 9; i++) &#123;</span><br><span class="line">                threadPoolExecutor.execute(()-&gt;&#123;</span><br><span class="line">                    System.out.println(Thread.currentThread().getName());</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; catch (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; finally &#123;</span><br><span class="line">            threadPoolExecutor.shutdown();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="线程小结："><a href="#线程小结：" class="headerlink" title="线程小结："></a>线程小结：</h5><p>CPU密集型和IO密集型</p>
<p>最大线程到底如何定义：</p>
<p>1.CPU密集型：几核就是几，可以保持CPU的效率最高！</p>
<p>2.IO密集型： 判断程序中十分耗IO的线程</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import java.util.concurrent.Executors;</span><br><span class="line">import java.util.concurrent.LinkedBlockingQueue;</span><br><span class="line">import java.util.concurrent.ThreadPoolExecutor;</span><br><span class="line">import java.util.concurrent.TimeUnit;</span><br><span class="line"></span><br><span class="line">public class ThreadPoolDemo2 &#123;</span><br><span class="line"></span><br><span class="line">    &#x2F;**</span><br><span class="line">     * CPU密集型、IO密集型</span><br><span class="line">     * 最大线程到底如何定义：</span><br><span class="line">     *</span><br><span class="line">     * 1.CPU密集型：几核就是几，可以保持CPU的效率最高！</span><br><span class="line">     *</span><br><span class="line">     * 2.IO密集型： 判断程序中十分耗IO的线程</span><br><span class="line">     * @param args</span><br><span class="line">     *&#x2F;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        ThreadPoolExecutor threadPoolExecutor &#x3D; new ThreadPoolExecutor(</span><br><span class="line">                2,</span><br><span class="line">                Runtime.getRuntime().availableProcessors(),</span><br><span class="line">                10,</span><br><span class="line">                TimeUnit.SECONDS,</span><br><span class="line">                new LinkedBlockingQueue&lt;&gt;(3),</span><br><span class="line">                Executors.defaultThreadFactory(),</span><br><span class="line">                new ThreadPoolExecutor.DiscardOldestPolicy());</span><br><span class="line"></span><br><span class="line">        try &#123;</span><br><span class="line">            for (int i &#x3D; 0; i &lt; 9; i++) &#123;</span><br><span class="line">                threadPoolExecutor.execute(()-&gt;&#123;</span><br><span class="line">                    System.out.println(Thread.currentThread().getName());</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; catch (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; finally &#123;</span><br><span class="line">            threadPoolExecutor.shutdown();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="12-四大函数式接口（必须掌握）"><a href="#12-四大函数式接口（必须掌握）" class="headerlink" title="12.四大函数式接口（必须掌握）"></a>12.四大函数式接口（必须掌握）</h2><p>新时代的程序员：lambda表达式、链式编程、函数式接口、Stream流</p>
<p><img src="JUC/image-20200423114019393.png" alt="image-20200423114019393"></p>
<blockquote>
<p>函数式接口:只有一个方法的接口</p>
</blockquote>
<p><img src="JUC/image-20200423115336165.png" alt="image-20200423115336165"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@FunctionalInterface</span><br><span class="line">public interface Function&lt;T, R&gt; &#123;</span><br><span class="line"></span><br><span class="line">    &#x2F;**</span><br><span class="line">     * Applies this function to the given argument.</span><br><span class="line">     *</span><br><span class="line">     * @param t the function argument</span><br><span class="line">     * @return the function result</span><br><span class="line">     *&#x2F;</span><br><span class="line">    R apply(T t);</span><br><span class="line">&#125;    </span><br><span class="line">@FunctionalInterface</span><br><span class="line">public interface Runnable &#123;</span><br><span class="line">    &#x2F;**</span><br><span class="line">     * When an object implementing interface &lt;code&gt;Runnable&lt;&#x2F;code&gt; is used</span><br><span class="line">     * to create a thread, starting the thread causes the object&#39;s</span><br><span class="line">     * &lt;code&gt;run&lt;&#x2F;code&gt; method to be called in that separately executing</span><br><span class="line">     * thread.</span><br><span class="line">     * &lt;p&gt;</span><br><span class="line">     * The general contract of the method &lt;code&gt;run&lt;&#x2F;code&gt; is that it may</span><br><span class="line">     * take any action whatsoever.</span><br><span class="line">     *</span><br><span class="line">     * @see     java.lang.Thread#run()</span><br><span class="line">     *&#x2F;</span><br><span class="line">    public abstract void run();</span><br><span class="line">&#125;</span><br><span class="line">import java.util.function.Function;</span><br><span class="line"></span><br><span class="line">public class FunctionDemo &#123;</span><br><span class="line">    &#x2F;**</span><br><span class="line">     * 函数式编程</span><br><span class="line">     * @param args</span><br><span class="line">     *&#x2F;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        Function&lt;String,String&gt; fun &#x3D; new Function&lt;String, String&gt;() &#123;</span><br><span class="line">            @Override</span><br><span class="line">            public String apply(String s) &#123;</span><br><span class="line">                return s;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        System.out.println(fun.apply(&quot;hello world!&quot;));</span><br><span class="line"></span><br><span class="line">        System.out.println(&quot;-----------------&quot;);</span><br><span class="line"></span><br><span class="line">        Function&lt;String,String&gt; myFun &#x3D; (str)-&gt;&#123;</span><br><span class="line">            return str;</span><br><span class="line">        &#125;;</span><br><span class="line">        System.out.println(myFun.apply(&quot;hello java!&quot;));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>Predicate 断定型接口看，有一个输入参数，返回值只能是布尔值！</p>
</blockquote>
<p><img src="JUC/image-20200423115736994.png" alt="image-20200423115736994"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;**</span><br><span class="line"> * Predicate:断定型接口看，有一个输入参数，返回值只能是布尔值！</span><br><span class="line"> *&#x2F;</span><br><span class="line">public class PredicateDemo &#123;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        Predicate&lt;String&gt; predicate &#x3D; new Predicate&lt;String&gt;() &#123;</span><br><span class="line">            &#x2F;&#x2F;判断字符串是否为空</span><br><span class="line">            @Override</span><br><span class="line">            public boolean test(String s) &#123;</span><br><span class="line">                return s.isEmpty();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        System.out.println(predicate.test(&quot;hello&quot;));</span><br><span class="line"></span><br><span class="line">        System.out.println(&quot;----------------&quot;);</span><br><span class="line"></span><br><span class="line">        Predicate&lt;String&gt; myPredicate &#x3D; (str)-&gt;&#123;</span><br><span class="line">            return str.isEmpty();</span><br><span class="line">        &#125;;</span><br><span class="line">        System.out.println(predicate.test(&quot;hello&quot;));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>消费型接口</p>
</blockquote>
<p><img src="JUC/image-20200423120813949.png" alt="image-20200423120813949"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import java.util.function.Consumer;</span><br><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line"> * 消费型接口:有一个输入参数，无返回参数</span><br><span class="line"> *&#x2F;</span><br><span class="line">public class ConsumerDemo &#123;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        Consumer&lt;String&gt; consumer &#x3D; new Consumer&lt;String&gt;() &#123;</span><br><span class="line">            @Override</span><br><span class="line">            public void accept(String s) &#123;</span><br><span class="line">                System.out.println(s);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        consumer.accept(&quot;hello world!&quot;);</span><br><span class="line"></span><br><span class="line">        System.out.println(&quot;---------------&quot;);</span><br><span class="line"></span><br><span class="line">        Consumer&lt;String&gt; consumer1 &#x3D; (str) -&gt; &#123;</span><br><span class="line">            System.out.println(str);</span><br><span class="line">        &#125;;</span><br><span class="line">        consumer1.accept(&quot;hello java!&quot;);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>Supplier 供给型接口：无输入参数，有返回值</p>
</blockquote>
<p><img src="JUC/image-20200423121705808.png" alt="image-20200423121705808"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import java.util.UUID;</span><br><span class="line">import java.util.function.Supplier;</span><br><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line"> * g供给型接口：无输入参数，有返回值</span><br><span class="line"> *&#x2F;</span><br><span class="line">public class SupplierDemo &#123;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        Supplier&lt;String&gt; supplier &#x3D; new Supplier&lt;String&gt;() &#123;</span><br><span class="line">            @Override</span><br><span class="line">            public String get() &#123;</span><br><span class="line">                return UUID.randomUUID().toString().replace(&quot;-&quot;,&quot;&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        System.out.println(supplier.get());</span><br><span class="line">        System.out.println(&quot;------------------&quot;);</span><br><span class="line"></span><br><span class="line">        Supplier&lt;String&gt; supplier1 &#x3D; () -&gt;&#123;</span><br><span class="line">            return UUID.randomUUID().toString().replace(&quot;-&quot;,&quot;&quot;);</span><br><span class="line">        &#125;;</span><br><span class="line">        System.out.println(supplier1.get());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="13-Stream流式计算"><a href="#13-Stream流式计算" class="headerlink" title="13.Stream流式计算"></a>13.Stream流式计算</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import lombok.AllArgsConstructor;</span><br><span class="line">import lombok.Data;</span><br><span class="line"></span><br><span class="line">import java.util.Arrays;</span><br><span class="line">import java.util.List;</span><br><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line"> * 题目要求：一分钟完成此题，只能用一行代码实现！</span><br><span class="line"> * 现在有5个用户！筛选：</span><br><span class="line"> * 1、ID必须是偶数</span><br><span class="line"> * 2、年龄必须大于23岁</span><br><span class="line"> * 3、用户名转为大写字母</span><br><span class="line"> * 4、用户名字母倒着排序</span><br><span class="line"> * 5、只输出一个用户！</span><br><span class="line"> *&#x2F;</span><br><span class="line">public class StreamDemo &#123;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        User u1 &#x3D; new User(1, &quot;zhangsan&quot;, 21);</span><br><span class="line">        User u2 &#x3D; new User(2, &quot;lisi&quot;, 22);</span><br><span class="line">        User u3 &#x3D; new User(3, &quot;wangwu&quot;, 23);</span><br><span class="line">        User u4 &#x3D; new User(4, &quot;zhaoliu&quot;, 24);</span><br><span class="line">        User u5 &#x3D; new User(5, &quot;houqi&quot;, 25);</span><br><span class="line">        User u6 &#x3D; new User(6, &quot;laiba&quot;, 26);</span><br><span class="line">        List&lt;User&gt; users &#x3D; Arrays.asList(u1, u2, u3, u4, u5,u6);</span><br><span class="line">        users.stream()</span><br><span class="line">                .filter((u) -&gt; &#123;</span><br><span class="line">                    return u.getId() % 2 &#x3D;&#x3D; 0;</span><br><span class="line">                &#125;)</span><br><span class="line">                .filter((u) -&gt; &#123;</span><br><span class="line">                    return u.getAge() &gt; 23;</span><br><span class="line">                &#125;)</span><br><span class="line">                .map((u) -&gt; &#123;</span><br><span class="line">                    return u.getName().toUpperCase();</span><br><span class="line">                &#125;)</span><br><span class="line">                .sorted((uu1, uu2) -&gt; &#123;</span><br><span class="line">                    return uu2.compareTo(uu1);</span><br><span class="line">                &#125;)</span><br><span class="line">                .limit(1)</span><br><span class="line">                .forEach(System.out::println);</span><br><span class="line">        ;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@Data</span><br><span class="line">@AllArgsConstructor</span><br><span class="line">class User &#123;</span><br><span class="line">    private Integer id;</span><br><span class="line">    private String name;</span><br><span class="line">    private Integer age;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="14-ForkJoin"><a href="#14-ForkJoin" class="headerlink" title="14.ForkJoin"></a>14.ForkJoin</h2><blockquote>
<p>什么是ForkJoin</p>
<p>ForkJoin在JDK1.7，并行执行任务！提高效率，大数据量</p>
</blockquote>
<p>MapReduce</p>
<p><img src="JUC/image-20200423153623895.png" alt="image-20200423153623895"></p>
<p><img src="JUC//image-20200423153732271.png?lastModify=1587800694" alt="image-20200423153732271"></p>
<blockquote>
<p>ForkJoin特点：工作窃取</p>
</blockquote>
<p><img src="file:///Users/doubledumbao/Library/Application%20Support/typora-user-images/image-20200423154551429.png?lastModify=1587800694" alt="image-20200423154551429"></p>
<blockquote>
<p>ForkJoin</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import java.util.concurrent.ExecutionException;</span><br><span class="line">import java.util.concurrent.ForkJoinPool;</span><br><span class="line">import java.util.concurrent.ForkJoinTask;</span><br><span class="line">import java.util.stream.LongStream;</span><br><span class="line"></span><br><span class="line">public class TestForkJoin &#123;</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) throws ExecutionException, InterruptedException &#123;</span><br><span class="line">&#x2F;&#x2F;        test1();</span><br><span class="line">&#x2F;&#x2F;        test2();</span><br><span class="line">        test3();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F;普通程序员</span><br><span class="line">    public static void test1()&#123;</span><br><span class="line">        long startTime &#x3D; System.currentTimeMillis();</span><br><span class="line">        Long sum &#x3D; 0L;</span><br><span class="line">        for (Long i &#x3D; 1L; i &lt;&#x3D; 10_0000_0000; i++) &#123;</span><br><span class="line">            sum +&#x3D; i;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        long endTime &#x3D; System.currentTimeMillis();</span><br><span class="line">        System.out.println(&quot;sum&#x3D;&quot;+sum+&quot;花费&quot;+(endTime-startTime));</span><br><span class="line">        &#x2F;&#x2F;sum&#x3D;500000000500000000花费7432</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F;会用ForkJoin</span><br><span class="line">    public static void test2() throws ExecutionException, InterruptedException &#123;</span><br><span class="line">        long startTime &#x3D; System.currentTimeMillis();</span><br><span class="line"></span><br><span class="line">        ForkJoinPool forkJoinPool &#x3D; new ForkJoinPool();</span><br><span class="line"></span><br><span class="line">        ForkJoinDemo forkJoinTask &#x3D; new ForkJoinDemo(1L, 10_0000_0000L);</span><br><span class="line"></span><br><span class="line">        ForkJoinTask&lt;Long&gt; joinTask &#x3D; forkJoinPool.submit(forkJoinTask);</span><br><span class="line"></span><br><span class="line">        Long sum &#x3D; joinTask.get();</span><br><span class="line"></span><br><span class="line">        long endTime &#x3D; System.currentTimeMillis();</span><br><span class="line">        System.out.println(&quot;sum&#x3D;&quot;+sum+&quot;花费&quot;+(endTime-startTime));</span><br><span class="line">        &#x2F;&#x2F;sum&#x3D;500000000500000000花费5941</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F;会用并行流</span><br><span class="line">    public static void test3()&#123;</span><br><span class="line">        long startTime &#x3D; System.currentTimeMillis();</span><br><span class="line"></span><br><span class="line">        long sum &#x3D; LongStream.rangeClosed(1L, 10_0000_0000L).parallel().reduce(0, Long::sum);</span><br><span class="line"></span><br><span class="line">        long endTime &#x3D; System.currentTimeMillis();</span><br><span class="line">        System.out.println(&quot;sum&#x3D;&quot;+sum+&quot;花费&quot;+(endTime-startTime));</span><br><span class="line">        &#x2F;&#x2F;sum&#x3D;500000000500000000花费334</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="15-异步回调"><a href="#15-异步回调" class="headerlink" title="15.异步回调"></a>15.异步回调</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import java.util.concurrent.CompletableFuture;</span><br><span class="line">import java.util.concurrent.ExecutionException;</span><br><span class="line">import java.util.concurrent.TimeUnit;</span><br><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line"> * 异步调用：CompletableFuture</span><br><span class="line"> * 异步执行</span><br><span class="line"> * 成功回调</span><br><span class="line"> * 失败回调</span><br><span class="line"> *&#x2F;</span><br><span class="line">public class FutureTaskDemo &#123;</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) throws ExecutionException, InterruptedException &#123;</span><br><span class="line">        &#x2F;&#x2F;无返回值的runAsync异步回调</span><br><span class="line">&#x2F;&#x2F;        CompletableFuture&lt;Void&gt; completableFuture &#x3D; CompletableFuture.runAsync(() -&gt; &#123;</span><br><span class="line">&#x2F;&#x2F;            try &#123;</span><br><span class="line">&#x2F;&#x2F;                TimeUnit.SECONDS.sleep(2);</span><br><span class="line">&#x2F;&#x2F;</span><br><span class="line">&#x2F;&#x2F;            &#125; catch (InterruptedException e) &#123;</span><br><span class="line">&#x2F;&#x2F;                e.printStackTrace();</span><br><span class="line">&#x2F;&#x2F;            &#125;</span><br><span class="line">&#x2F;&#x2F;            System.out.println(Thread.currentThread().getName()+&quot; runAsync &quot;);</span><br><span class="line">&#x2F;&#x2F;            &#x2F;**</span><br><span class="line">&#x2F;&#x2F;             * 执行结果：</span><br><span class="line">&#x2F;&#x2F;             * 111111</span><br><span class="line">&#x2F;&#x2F;             * ForkJoinPool.commonPool-worker-1 runAsync</span><br><span class="line">&#x2F;&#x2F;             * 22222</span><br><span class="line">&#x2F;&#x2F;             *&#x2F;</span><br><span class="line">&#x2F;&#x2F;        &#125;);</span><br><span class="line">&#x2F;&#x2F;</span><br><span class="line">&#x2F;&#x2F;        System.out.println(&quot;111111&quot;);</span><br><span class="line">&#x2F;&#x2F;        completableFuture.get();&#x2F;&#x2F;获取阻塞执行结果</span><br><span class="line">&#x2F;&#x2F;        System.out.println(&quot;22222&quot;);</span><br><span class="line">        &#x2F;&#x2F;有返回值的异步回调</span><br><span class="line">        CompletableFuture&lt;Integer&gt; completableFuture &#x3D; CompletableFuture.supplyAsync(() -&gt; &#123;</span><br><span class="line">            System.out.println(Thread.currentThread().getName()+&quot; supplyAsync &#x3D;&gt; Integer&quot;);</span><br><span class="line">            int x &#x3D; 10&#x2F;0;</span><br><span class="line">            return 200;</span><br><span class="line">        &#125;);</span><br><span class="line">        System.out.println(completableFuture.whenComplete((t, u) -&gt; &#123;</span><br><span class="line">            System.out.println(&quot;t&#x3D;&#x3D;&#x3D;&gt;&quot; + t);&#x2F;&#x2F;正常的返回结果</span><br><span class="line">            System.out.println(&quot;u&#x3D;&#x3D;&#x3D;&gt;&quot; + u);&#x2F;&#x2F;错误信息</span><br><span class="line">        &#125;).exceptionally((e) -&gt; &#123;</span><br><span class="line">            System.out.println(e.getMessage());&#x2F;&#x2F;java.lang.ArithmeticException: &#x2F; by zero</span><br><span class="line">            return 500;</span><br><span class="line">        &#125;).get());</span><br><span class="line">    &#125;</span><br><span class="line">    &#x2F;**</span><br><span class="line">     * 成功的打印记录：</span><br><span class="line">     * ForkJoinPool.commonPool-worker-1 supplyAsync &#x3D;&gt; Integer</span><br><span class="line">     * t&#x3D;&#x3D;&#x3D;&gt;200</span><br><span class="line">     * u&#x3D;&#x3D;&#x3D;&gt;null</span><br><span class="line">     * 200</span><br><span class="line">     *&#x2F;</span><br><span class="line"></span><br><span class="line">    &#x2F;**</span><br><span class="line">     * 失败的打印记录：</span><br><span class="line">     * ForkJoinPool.commonPool-worker-1 supplyAsync &#x3D;&gt; Integer</span><br><span class="line">     * t&#x3D;&#x3D;&#x3D;&gt;null</span><br><span class="line">     * u&#x3D;&#x3D;&#x3D;&gt;java.util.concurrent.CompletionException: java.lang.ArithmeticException: &#x2F; by zero</span><br><span class="line">     * java.lang.ArithmeticException: &#x2F; by zero</span><br><span class="line">     * 500</span><br><span class="line">     *&#x2F;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="16-JMM"><a href="#16-JMM" class="headerlink" title="16.JMM"></a>16.JMM</h2><p><img src="JUC/image-20200423172337152.png" alt="image-20200423172337152"></p>
<p><img src="JUC/image-20200423172016760.png?lastModify=1587800694" alt="image-20200423172016760"></p>
<h5 id="内存交互操作"><a href="#内存交互操作" class="headerlink" title="内存交互操作"></a>内存交互操作</h5><p>由上面的交互关系可知，关于主内存与工作内存之间的具体交互协议，即一个变量如何从主内存拷贝到工作内存、如何从工作内存同步到主内存之间的实现细节，Java内存模型定义了以下八种操作来完成：</p>
<ul>
<li><p>lock（锁定）：作用于主内存的变量，把一个变量标识为一条线程独占状态。</p>
</li>
<li><p>unlock（解锁）：作用于主内存变量，把一个处于锁定状态的变量释放出来，释放后的变量才可以被其他线程锁定。</p>
</li>
<li><p>read（读取）：作用于主内存变量，把一个变量值从主内存传输到线程的工作内存中，以便随后的load动作使用</p>
</li>
<li><p>load（载入）：作用于工作内存的变量，它把read操作从主内存中得到的变量值放入工作内存的变量副本中。</p>
</li>
<li><p>use（使用）：作用于工作内存的变量，把工作内存中的一个变量值传递给执行引擎，每当虚拟机遇到一个需要使用变量的值的字节码指令时将会执行这个操作。</p>
</li>
<li><p>assign（赋值）：作用于工作内存的变量，它把一个从执行引擎接收到的值赋值给工作内存的变量，每当虚拟机遇到一个给变量赋值的字节码指令时执行这个操作。</p>
</li>
<li><p>store（存储）：作用于工作内存的变量，把工作内存中的一个变量的值传送到主内存中，以便随后的write的操作。</p>
</li>
<li><p>write（写入）：作用于主内存的变量，它把store操作从工作内存中一个变量的值传送到主内存的变量中。</p>
<p>如果要把一个变量从主内存中复制到工作内存，就需要按顺寻地执行read和load操作，如果把变量从工作内存中同步回主内存中，就要按顺序地执行store和write操作。Java内存模型只要求上述两个操作必须按顺序执行，而没有保证必须是连续执行。也就是read和load之间，store和write之间是可以插入其他指令的，如对主内存中的变量a、b进行访问时，可能的顺序是read a，read b，load b， load a。Java内存模型还规定了在执行上述八种基本操作时，必须满足如下规则：</p>
</li>
<li><p>不允许read和load、store和write操作之一单独出现</p>
</li>
<li><p>不允许一个线程丢弃它的最近assign的操作，即变量在工作内存中改变了之后必须同步到主内存中。</p>
</li>
<li><p>不允许一个线程无原因地（没有发生过任何assign操作）把数据从工作内存同步回主内存中。</p>
</li>
<li><p>一个新的变量只能在主内存中诞生，不允许在工作内存中直接使用一个未被初始化（load或assign）的变量。即就是对一个变量实施use和store操作之前，必须先执行过了assign和load操作。</p>
</li>
<li><p>一个变量在同一时刻只允许一条线程对其进行lock操作，lock和unlock必须成对出现 如果对一个变量执行lock操作，将会清空工作内存中此变量的值，在执行引擎使用这个变量前需要重新执行load或assign操作初始化变量的值</p>
</li>
<li><p>如果一个变量事先没有被lock操作锁定，则不允许对它执行unlock操作；也不允许去unlock一个被其他线程锁定的变量。</p>
</li>
<li><p>对一个变量执行unlock操作之前，必须先把此变量同步到主内存中（执行store和write操作）。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;**</span><br><span class="line"> * 主线程更新了num,无法通知线程A,程序无法终止</span><br><span class="line"> *&#x2F;</span><br><span class="line">public class JmmDemo &#123;</span><br><span class="line"></span><br><span class="line">    private static int num &#x3D; 0;</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) throws InterruptedException &#123;</span><br><span class="line"></span><br><span class="line">        new Thread(()-&gt;&#123;</span><br><span class="line">            while(num &#x3D;&#x3D; 0)&#123;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,&quot;A&quot;).start();</span><br><span class="line"></span><br><span class="line">        TimeUnit.SECONDS.sleep(2);</span><br><span class="line">        num &#x3D; 1;</span><br><span class="line">        System.out.println(&quot;num &#x3D; 1&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="17-volatile"><a href="#17-volatile" class="headerlink" title="17.volatile"></a>17.volatile</h2><blockquote>
<p>保证可见性</p>
</blockquote>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;**</span><br><span class="line"> * 主线程更新了num,无法通知线程A,程序无法终止</span><br><span class="line"> *&#x2F;</span><br><span class="line">public class JmmDemo &#123;</span><br><span class="line">    &#x2F;&#x2F;加volatile可以保证可见性</span><br><span class="line">    private volatile static int num &#x3D; 0;</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) throws InterruptedException &#123;</span><br><span class="line"></span><br><span class="line">        new Thread(()-&gt;&#123;</span><br><span class="line">            while(num &#x3D;&#x3D; 0)&#123;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,&quot;A&quot;).start();</span><br><span class="line"></span><br><span class="line">        TimeUnit.SECONDS.sleep(2);</span><br><span class="line">        num &#x3D; 1;</span><br><span class="line">        System.out.println(&quot;num &#x3D; 1&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>不保证原子性</p>
</blockquote>
<p>原子性：不可分割</p>
<p>线程A在执行任务的时候，不能被打扰的，也不能被分割。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;volatile不能保证原子性</span><br><span class="line">public class VolatileDemo &#123;</span><br><span class="line"></span><br><span class="line">    private volatile static int num &#x3D; 0;</span><br><span class="line"></span><br><span class="line">    public  static void add()&#123;</span><br><span class="line">        num ++; &#x2F;&#x2F;不是原子性操作</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        for (int i &#x3D; 0; i &lt; 20; i++) &#123;</span><br><span class="line">            new Thread(()-&gt;&#123;</span><br><span class="line">                for (int j &#x3D; 0; j &lt; 1000; j++) &#123;</span><br><span class="line">                    add();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;).start();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        while(Thread.activeCount()&gt;2)&#123;</span><br><span class="line">            &#x2F;**</span><br><span class="line">             * public static int activeCount()</span><br><span class="line">             * 返回当前线程的thread group及其子组中活动线程数的估计。 递归地遍历当前线程的线程组中的所有子组。</span><br><span class="line">             * 返回的值只是一个估计，因为线程数可能会在此方法遍历内部数据结构时动态更改，并且可能受某些系统线程的存在的影响。 此方法主要用于调试和监视。</span><br><span class="line">             *</span><br><span class="line">             * 结果</span><br><span class="line">             * 对当前线程的线程组和任何其他线程组中当前线程的线程组作为祖先的活动线程数的估计</span><br><span class="line">             *&#x2F;</span><br><span class="line">            Thread.yield();</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(&quot;num &#x3D; &quot; + num);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="JUC/image-20200423180425863.png" alt="image-20200423180425863"></p>
<p>使用AtomicInteger保证原子性</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">public class VolatileDemo &#123;</span><br><span class="line"></span><br><span class="line">    private  static AtomicInteger num &#x3D; new AtomicInteger(0);</span><br><span class="line"></span><br><span class="line">    public  static void add()&#123;</span><br><span class="line">        num.getAndIncrement(); &#x2F;&#x2F;CAS</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        for (int i &#x3D; 0; i &lt; 20; i++) &#123;</span><br><span class="line">            new Thread(()-&gt;&#123;</span><br><span class="line">                for (int j &#x3D; 0; j &lt; 1000; j++) &#123;</span><br><span class="line">                    add();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;).start();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        while(Thread.activeCount()&gt;2)&#123;</span><br><span class="line">            &#x2F;**</span><br><span class="line">             * public static int activeCount()</span><br><span class="line">             * 返回当前线程的thread group及其子组中活动线程数的估计。 递归地遍历当前线程的线程组中的所有子组。</span><br><span class="line">             * 返回的值只是一个估计，因为线程数可能会在此方法遍历内部数据结构时动态更改，并且可能受某些系统线程的存在的影响。 此方法主要用于调试和监视。</span><br><span class="line">             *</span><br><span class="line">             * 结果</span><br><span class="line">             * 对当前线程的线程组和任何其他线程组中当前线程的线程组作为祖先的活动线程数的估计</span><br><span class="line">             *&#x2F;</span><br><span class="line">            Thread.yield();</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(&quot;num &#x3D; &quot; + num);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong><em>这些类的底层都直接和操作系统挂钩！在内存中修改值！Unsafe类是一个很特殊的存在！\</em></strong></p>
<blockquote>
<p> 禁止指令重排序</p>
</blockquote>
<p>什么是指令重排：你写的程序，计算机并不是按照你写的那样去执行的。</p>
<p>源代码-&gt;编译器优化的重排 -&gt;指令并行也可能会重排 -&gt;内存系统也会重排 -&gt; 执行</p>
<p><strong>处理器在进行指令重排的时候，考虑数据之间的依赖性！</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">int x &#x3D; 1;&#x2F;&#x2F;1</span><br><span class="line">int y &#x3D; 2;&#x2F;&#x2F;2</span><br><span class="line">x &#x3D; x + 1;&#x2F;&#x2F;3</span><br><span class="line">y &#x3D; x * x;&#x2F;&#x2F;4</span><br><span class="line">我们所期望的： 1234 2134 1324</span><br><span class="line">但不能是3124</span><br></pre></td></tr></table></figure>

<p>可能造成影响的结果：a b x y这四个值默认都是0；</p>
<table>
<thead>
<tr>
<th>线程A</th>
<th>线程B</th>
</tr>
</thead>
<tbody><tr>
<td>x=a</td>
<td>y=b</td>
</tr>
<tr>
<td>b=1</td>
<td>a=2</td>
</tr>
</tbody></table>
<p>正常的结果：x=0;y=0;但是可能由于指令重排</p>
<table>
<thead>
<tr>
<th>线程A</th>
<th>线程B</th>
</tr>
</thead>
<tbody><tr>
<td>b=1</td>
<td>a=2</td>
</tr>
<tr>
<td>x=a</td>
<td>y=b</td>
</tr>
</tbody></table>
<p>指令重排导致的诡异结果：x=2;y=1;</p>
<p><img src="image-20200423183251016.png" alt="image-20200423183251016"></p>
<p><img src="image-20200423183328877.png" alt="image-20200423183328877"></p>
<h2 id="17-单例模式"><a href="#17-单例模式" class="headerlink" title="17.单例模式"></a>17.单例模式</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;饿汉模式</span><br><span class="line">public class HungryMan &#123;</span><br><span class="line"></span><br><span class="line">    private static final HungryMan hungryMan &#x3D; new HungryMan();</span><br><span class="line"></span><br><span class="line">    private HungryMan()&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public static HungryMan getInstance()&#123;</span><br><span class="line">        return hungryMan;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">&#x2F;&#x2F;        HungryMan hungryMan &#x3D; HungryMan.getInstance();</span><br><span class="line">&#x2F;&#x2F;        HungryMan hungryMan1 &#x3D; HungryMan.getInstance();</span><br><span class="line">&#x2F;&#x2F;        System.out.println(hungryMan);</span><br><span class="line">&#x2F;&#x2F;        System.out.println(hungryMan1);</span><br><span class="line">        for (int i &#x3D; 0; i &lt; 10; i++) &#123;</span><br><span class="line">            new Thread(()-&gt;&#123;</span><br><span class="line">                HungryMan hungryMan &#x3D; HungryMan.getInstance();</span><br><span class="line">                System.out.println(hungryMan);</span><br><span class="line">            &#125;).start();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;懒汉模式</span><br><span class="line">public class LazyMan &#123;</span><br><span class="line"></span><br><span class="line">    private LazyMan()&#123;</span><br><span class="line">        synchronized (LazyMan.class)&#123;</span><br><span class="line">            if(lazyMan !&#x3D; null)&#123;</span><br><span class="line">                throw new RuntimeException(&quot;禁止通过反射破坏单例模式&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private static volatile LazyMan lazyMan ;</span><br><span class="line"></span><br><span class="line">    public static LazyMan getInstance()&#123;</span><br><span class="line">        if(lazyMan &#x3D;&#x3D; null)&#123;</span><br><span class="line">            synchronized(LazyMan.class)&#123;</span><br><span class="line">                if(lazyMan &#x3D;&#x3D; null)&#123;</span><br><span class="line">                    &#x2F;**</span><br><span class="line">                     * 不是原子性操作：</span><br><span class="line">                     * 1.分配内存空间</span><br><span class="line">                     * 2.执行构造函数，初始化对象</span><br><span class="line">                     * 3.将这个对象指向该空间</span><br><span class="line">                     *&#x2F;</span><br><span class="line">                    lazyMan &#x3D; new LazyMan();</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        return lazyMan;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) throws NoSuchMethodException, IllegalAccessException, InvocationTargetException, InstantiationException &#123;</span><br><span class="line">&#x2F;&#x2F;        for (int i &#x3D; 0; i &lt; 10; i++) &#123;</span><br><span class="line">&#x2F;&#x2F;            new Thread(()-&gt;&#123;</span><br><span class="line">&#x2F;&#x2F;                LazyMan lazyMan &#x3D; LazyMan.getInstance();</span><br><span class="line">&#x2F;&#x2F;                System.out.println(lazyMan);</span><br><span class="line">&#x2F;&#x2F;            &#125;).start();</span><br><span class="line">&#x2F;&#x2F;        &#125;</span><br><span class="line">        &#x2F;&#x2F;通过反射破坏单例模式</span><br><span class="line">&#x2F;&#x2F;        LazyMan lm &#x3D; LazyMan.getInstance();</span><br><span class="line">&#x2F;&#x2F;        System.out.println(lm);</span><br><span class="line">        Constructor&lt;LazyMan&gt; declaredConstructor &#x3D; LazyMan.class.getDeclaredConstructor(null);</span><br><span class="line">        declaredConstructor.setAccessible(true);</span><br><span class="line">        LazyMan lazyMan1 &#x3D; declaredConstructor.newInstance(null);</span><br><span class="line">        LazyMan lazyMan2 &#x3D; declaredConstructor.newInstance(null);</span><br><span class="line">        LazyMan lazyMan3 &#x3D; declaredConstructor.newInstance(null);</span><br><span class="line">        System.out.println(lazyMan1);</span><br><span class="line">        System.out.println(lazyMan2);</span><br><span class="line">        System.out.println(lazyMan3);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">import java.lang.reflect.Constructor;</span><br><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line"> * 静态内部类</span><br><span class="line"> *&#x2F;</span><br><span class="line">public class Holder &#123;</span><br><span class="line">    private Holder()&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public static Holder getInstance()&#123;</span><br><span class="line">        return InnerClass.HOLDER;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public static class InnerClass&#123;</span><br><span class="line">        public static Holder HOLDER &#x3D; new Holder();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) throws Exception &#123;</span><br><span class="line">        Holder holder1 &#x3D; Holder.getInstance();</span><br><span class="line">        Holder holder2 &#x3D; Holder.getInstance();</span><br><span class="line">        System.out.println(holder1);</span><br><span class="line">        System.out.println(holder2);</span><br><span class="line">        &#x2F;&#x2F;通过反射破坏单例模式</span><br><span class="line">        Constructor&lt;Holder&gt; declaredConstructor &#x3D; Holder.class.getDeclaredConstructor(null);</span><br><span class="line">        declaredConstructor.setAccessible(true);</span><br><span class="line">        Holder holder3 &#x3D; declaredConstructor.newInstance(null);</span><br><span class="line">        Holder holder4 &#x3D; declaredConstructor.newInstance(null);</span><br><span class="line">        System.out.println(holder3);</span><br><span class="line">        System.out.println(holder4);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">import java.lang.reflect.Constructor;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;枚举实现单例模式</span><br><span class="line">public enum EnumSingleton &#123;</span><br><span class="line"></span><br><span class="line">    SINGLETON;</span><br><span class="line"></span><br><span class="line">    public static EnumSingleton getInstance()&#123;</span><br><span class="line">        return SINGLETON;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) throws Exception &#123;</span><br><span class="line">        EnumSingleton enumSingleton1 &#x3D; EnumSingleton.getInstance();</span><br><span class="line">        EnumSingleton enumSingleton2 &#x3D; EnumSingleton.getInstance();</span><br><span class="line">        System.out.println(enumSingleton1);</span><br><span class="line">        System.out.println(enumSingleton2);</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F;试图通过反射破坏单例模式</span><br><span class="line">        &#x2F;&#x2F;Constructor&lt;EnumSingleton&gt; declaredConstructor &#x3D; EnumSingleton.class.getDeclaredConstructor(null);</span><br><span class="line">        &#x2F;&#x2F;declaredConstructor.setAccessible(true);</span><br><span class="line">        &#x2F;&#x2F;EnumSingleton enumSingleton &#x3D; declaredConstructor.newInstance(null);&#x2F;&#x2F;NoSuchMethodException</span><br><span class="line">        &#x2F;&#x2F;System.out.println(enumSingleton);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F;jad -sjava EnumSingleton.class</span><br><span class="line">        &#x2F;&#x2F;Exception in thread &quot;main&quot; java.lang.IllegalArgumentException: Cannot reflectively create enum objects</span><br><span class="line">        Constructor&lt;EnumSingleton&gt; declaredConstructor &#x3D; EnumSingleton.class.getDeclaredConstructor(String.class, int.class);</span><br><span class="line">        declaredConstructor.setAccessible(true);</span><br><span class="line">        EnumSingleton enumSingleton &#x3D; declaredConstructor.newInstance(String.class, int.class);</span><br><span class="line">        System.out.println(enumSingleton);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="18-深入理解CAS"><a href="#18-深入理解CAS" class="headerlink" title="18.深入理解CAS"></a>18.深入理解CAS</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import java.util.concurrent.atomic.AtomicInteger;</span><br><span class="line"></span><br><span class="line">public class AtomicDemo &#123;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        AtomicInteger atomicInteger &#x3D; new AtomicInteger(2020);</span><br><span class="line"></span><br><span class="line">        System.out.println(atomicInteger.compareAndSet(2020, 2021));</span><br><span class="line">        System.out.println(atomicInteger.get());</span><br><span class="line"></span><br><span class="line">        System.out.println(atomicInteger.compareAndSet(2020, 2021));</span><br><span class="line">        System.out.println(atomicInteger.get());</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>CAS：比较当前工作内存中的值和主内存中的值，如果这个值是期望的，那么则执行操作！如果不是就一直循环！</p>
<p>缺点：</p>
<p>1.循环会耗时</p>
<p>2.一次只能保证一个共享变量的原子性</p>
<p>3.ABA问题</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;ABA问题</span><br><span class="line">public class AtomicDemo &#123;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        AtomicInteger atomicInteger &#x3D; new AtomicInteger(2020);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F;捣乱的线程开始</span><br><span class="line">        System.out.println(atomicInteger.compareAndSet(2020, 2021));</span><br><span class="line">        System.out.println(atomicInteger.get());</span><br><span class="line"></span><br><span class="line">        System.out.println(atomicInteger.compareAndSet(2021, 2020));</span><br><span class="line">        System.out.println(atomicInteger.get());</span><br><span class="line">        &#x2F;&#x2F;捣乱的线程结束</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F;期望的线程</span><br><span class="line">        System.out.println(atomicInteger.compareAndSet(2020, 6666));</span><br><span class="line">        System.out.println(atomicInteger.get());</span><br><span class="line"></span><br><span class="line">        &#x2F;**</span><br><span class="line">         * 执行结果：</span><br><span class="line">         * true</span><br><span class="line">         * 2021</span><br><span class="line">         * true</span><br><span class="line">         * 2020</span><br><span class="line">         * true</span><br><span class="line">         * 6666</span><br><span class="line">         *&#x2F;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;&#x2F;带版本号AtomicStampedReference，解决ABA问题</span><br><span class="line">public class ABADemo &#123;</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        AtomicStampedReference&lt;Integer&gt; atomicStampedReference &#x3D; new AtomicStampedReference(1, 1);</span><br><span class="line"></span><br><span class="line">        new Thread(() -&gt; &#123;</span><br><span class="line">            int stamp &#x3D; atomicStampedReference.getStamp();</span><br><span class="line">            System.out.println(&quot;a1 stamp:&quot; + stamp);</span><br><span class="line">            try &#123;</span><br><span class="line">                TimeUnit.SECONDS.sleep(2);</span><br><span class="line">            &#125; catch (InterruptedException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println(&quot;a2:&quot;+atomicStampedReference.compareAndSet(1, 2, atomicStampedReference.getStamp(), atomicStampedReference.getStamp() + 1));</span><br><span class="line">            System.out.println(&quot;a2:&quot;+atomicStampedReference.getReference()+&quot;,stamp:&quot;+atomicStampedReference.getStamp());</span><br><span class="line"></span><br><span class="line">            System.out.println(&quot;a3:&quot;+atomicStampedReference.compareAndSet(2, 1, atomicStampedReference.getStamp(), atomicStampedReference.getStamp() + 1));</span><br><span class="line">            System.out.println(&quot;a3:&quot;+atomicStampedReference.getReference()+&quot;,stamp:&quot;+atomicStampedReference.getStamp());</span><br><span class="line">        &#125;, &quot;A&quot;).start();</span><br><span class="line"></span><br><span class="line">        new Thread(() -&gt; &#123;</span><br><span class="line">            int stamp &#x3D; atomicStampedReference.getStamp();</span><br><span class="line">            System.out.println(&quot;b1 stamp:&quot;+stamp);</span><br><span class="line">            try &#123;</span><br><span class="line">                TimeUnit.SECONDS.sleep(3);</span><br><span class="line">            &#125; catch (InterruptedException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println(&quot;b:&quot;+atomicStampedReference.compareAndSet(1, 2, stamp, stamp + 1));</span><br><span class="line">            System.out.println(&quot;b:&quot;+atomicStampedReference.getReference()+&quot;,b stamp:&quot;+atomicStampedReference.getStamp());</span><br><span class="line">        &#125;, &quot;B&quot;).start();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="19-各种锁"><a href="#19-各种锁" class="headerlink" title="19.各种锁"></a>19.各种锁</h2><h4 id="1-公平锁、非公平锁"><a href="#1-公平锁、非公平锁" class="headerlink" title="1.公平锁、非公平锁"></a>1.公平锁、非公平锁</h4><p>公平锁：非常公平，不允许插队</p>
<p>非公平锁：非常不公平，可以插队（默认都是非公平锁）</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;**</span><br><span class="line"> * Creates an instance of &#123;@code ReentrantLock&#125;.</span><br><span class="line"> * This is equivalent to using &#123;@code ReentrantLock(false)&#125;.</span><br><span class="line"> *&#x2F;</span><br><span class="line">public ReentrantLock() &#123;</span><br><span class="line">    sync &#x3D; new NonfairSync();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line"> * Creates an instance of &#123;@code ReentrantLock&#125; with the</span><br><span class="line"> * given fairness policy.</span><br><span class="line"> *</span><br><span class="line"> * @param fair &#123;@code true&#125; if this lock should use a fair ordering policy</span><br><span class="line"> *&#x2F;</span><br><span class="line">public ReentrantLock(boolean fair) &#123;</span><br><span class="line">    sync &#x3D; fair ? new FairSync() : new NonfairSync();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="2-可重入锁"><a href="#2-可重入锁" class="headerlink" title="2.可重入锁"></a>2.可重入锁</h4><p><img src="JUC/image-20200423223100203.png" alt="image-20200423223100203"></p>
<blockquote>
<p>synchronized</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;synchronized可重入锁</span><br><span class="line">public class LockDemo &#123;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        Phone phone &#x3D; new Phone();</span><br><span class="line">        new Thread(() -&gt; &#123;</span><br><span class="line">            phone.sms();</span><br><span class="line">        &#125;, &quot;A&quot;).start();</span><br><span class="line">        new Thread(() -&gt; &#123;</span><br><span class="line">            phone.sms();</span><br><span class="line">        &#125;, &quot;B&quot;).start();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class Phone &#123;</span><br><span class="line">    public synchronized void sms() &#123;</span><br><span class="line">        System.out.println(Thread.currentThread().getName() + &quot; SMS&quot;);</span><br><span class="line">        call();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public synchronized void call() &#123;</span><br><span class="line">        System.out.println(Thread.currentThread().getName() + &quot; CALL&quot;);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>ReentrantLock</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;ReentrantLock 可重入锁</span><br><span class="line">public class LockDemo1 &#123;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        Phone phone &#x3D; new Phone();</span><br><span class="line">        new Thread(() -&gt; &#123;</span><br><span class="line">            phone.sms();</span><br><span class="line">        &#125;, &quot;A&quot;).start();</span><br><span class="line">        new Thread(() -&gt; &#123;</span><br><span class="line">            phone.sms();</span><br><span class="line">        &#125;, &quot;B&quot;).start();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class Phone1 &#123;</span><br><span class="line">    private final Lock lock &#x3D; new ReentrantLock();</span><br><span class="line">    &#x2F;&#x2F;发短信</span><br><span class="line">    public void sms() &#123;</span><br><span class="line">        lock.lock();</span><br><span class="line">        try &#123;</span><br><span class="line">            System.out.println(Thread.currentThread().getName() + &quot; SMS&quot;);</span><br><span class="line">            call();</span><br><span class="line">        &#125; catch (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; finally &#123;</span><br><span class="line">            lock.unlock();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    &#x2F;&#x2F;打电话</span><br><span class="line">    public void call() &#123;</span><br><span class="line">        lock.lock();</span><br><span class="line">        try &#123;</span><br><span class="line">            System.out.println(Thread.currentThread().getName() + &quot; CALL&quot;);</span><br><span class="line">        &#125; catch (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; finally &#123;</span><br><span class="line">            lock.unlock();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="3-自旋锁"><a href="#3-自旋锁" class="headerlink" title="3.自旋锁"></a>3.自旋锁</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import java.util.concurrent.atomic.AtomicReference;</span><br><span class="line">&#x2F;&#x2F;自己写的自旋锁</span><br><span class="line">public class SpinLockDemo &#123;</span><br><span class="line"></span><br><span class="line">    AtomicReference&lt;Thread&gt; atomicReference &#x3D; new AtomicReference();</span><br><span class="line">    &#x2F;&#x2F;加锁</span><br><span class="line">    public void myLock()&#123;</span><br><span class="line">        System.out.println(Thread.currentThread().getName()+&quot; myLock&quot;);</span><br><span class="line">        while(!atomicReference.compareAndSet(null,Thread.currentThread()))&#123;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    &#x2F;&#x2F;解锁</span><br><span class="line">    public void myUnlock()&#123;</span><br><span class="line">        System.out.println(Thread.currentThread().getName() + &quot; myUnlock&quot;);</span><br><span class="line">        atomicReference.compareAndSet(Thread.currentThread(),null);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>测试自旋锁：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">public class TestSpinLock &#123;</span><br><span class="line">    public static void main(String[] args) throws InterruptedException &#123;</span><br><span class="line">        SpinLockDemo spinLockDemo &#x3D; new SpinLockDemo();</span><br><span class="line">        new Thread(()-&gt;&#123;</span><br><span class="line">            spinLockDemo.myLock();</span><br><span class="line">            try &#123;</span><br><span class="line">                System.out.println(Thread.currentThread().getName()+ &quot;加锁！&quot;);</span><br><span class="line">                TimeUnit.SECONDS.sleep(3);</span><br><span class="line">            &#125; catch (Exception e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125; finally &#123;</span><br><span class="line">                spinLockDemo.myUnlock();</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;,&quot;T1&quot;).start();</span><br><span class="line"></span><br><span class="line">        TimeUnit.SECONDS.sleep(1);</span><br><span class="line"></span><br><span class="line">        new Thread(()-&gt;&#123;</span><br><span class="line">            spinLockDemo.myLock();</span><br><span class="line">            try &#123;</span><br><span class="line">                System.out.println(Thread.currentThread().getName()+ &quot;加锁！&quot;);</span><br><span class="line">            &#125; catch (Exception e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125; finally &#123;</span><br><span class="line">                spinLockDemo.myUnlock();</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,&quot;T2&quot;).start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h4 id="4-死锁"><a href="#4-死锁" class="headerlink" title="4.死锁"></a>4.死锁</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;**</span><br><span class="line"> * 死锁</span><br><span class="line"> *&#x2F;</span><br><span class="line">public class DeadLockDemo &#123;</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        String lockA &#x3D; &quot;lockA&quot;;</span><br><span class="line">        String lockB &#x3D; &quot;lockB&quot;;</span><br><span class="line">        new Thread(new MyThread(lockA,lockB)).start();</span><br><span class="line">        new Thread(new MyThread(lockA,lockB)).start();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">class MyThread implements  Runnable&#123;</span><br><span class="line"></span><br><span class="line">    private String lockA;</span><br><span class="line">    private String lockB;</span><br><span class="line"></span><br><span class="line">    public MyThread(String lockA, String lockB) &#123;</span><br><span class="line">        this.lockA &#x3D; lockA;</span><br><span class="line">        this.lockB &#x3D; lockB;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void run() &#123;</span><br><span class="line">        synchronized (lockA)&#123;</span><br><span class="line">            System.out.println(Thread.currentThread().getName()+&quot; lockA&quot;);</span><br><span class="line">            try &#123;</span><br><span class="line">                TimeUnit.SECONDS.sleep(2);</span><br><span class="line">            &#125; catch (InterruptedException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">            synchronized (lockB)&#123;</span><br><span class="line">                System.out.println(Thread.currentThread().getName()+&quot; lockB&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="JUC/image-20200423233831191.png" alt="image-20200423233831191"></p>
<p><img src="JUC/image-20200423233854319.png?lastModify=1587800694" alt="image-20200423233854319"></p>
]]></content>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>CSS滤镜</title>
    <url>/2020/04/25/CSS%E6%BB%A4%E9%95%9C/</url>
    <content><![CDATA[<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">title</span>&gt;</span>滤镜<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span></span><br><span class="line">			img&#123;</span><br><span class="line">				width: 500px;</span><br><span class="line">				height: auto;</span><br><span class="line">				display: block;</span><br><span class="line">				margin: 0 auto;</span><br><span class="line">				transition: 2s;</span><br><span class="line">			&#125;</span><br><span class="line"><span class="css">			<span class="selector-class">.zjh</span>&#123;</span></span><br><span class="line"><span class="css">				<span class="comment">/* grayscale:设置灰度 1 百分之百 */</span></span></span><br><span class="line">				-webkit-filter: grayscale(1);</span><br><span class="line">			&#125;</span><br><span class="line"><span class="css">			<span class="selector-tag">img</span><span class="selector-pseudo">:hover</span>&#123;</span></span><br><span class="line">				-webkit-filter: none;</span><br><span class="line">				transition: 2s;</span><br><span class="line">			&#125;</span><br><span class="line"><span class="css">			<span class="selector-class">.zjh2</span>&#123;</span></span><br><span class="line"><span class="css">				<span class="comment">/* 曝光度 */</span></span></span><br><span class="line">				-webkit-filter: brightness(2);</span><br><span class="line">			&#125;</span><br><span class="line"><span class="css">			<span class="selector-class">.zjh3</span>&#123;</span></span><br><span class="line">				/* 褐色属性</span><br><span class="line">				 sepia 1 百分百褐色 正常0*/</span><br><span class="line">				-webkit-filter: sepia(1);</span><br><span class="line">			&#125;</span><br><span class="line"><span class="css">			<span class="selector-class">.zjh4</span>&#123;</span></span><br><span class="line"><span class="css">				<span class="comment">/* 模糊度 */</span></span></span><br><span class="line">				-webkit-filter: blur(5px);</span><br><span class="line">			&#125;</span><br><span class="line"><span class="css">			<span class="selector-class">.zjh5</span>&#123;</span></span><br><span class="line">				/* </span><br><span class="line">				 调整输入图像的对比度。的值0%将创建完全灰色的图像。</span><br><span class="line">				 值100%保持输入不变。</span><br><span class="line">				 100%允许超过的值，从而提供更具对比度的结果。</span><br><span class="line">				 内插的lacuna值为1。</span><br><span class="line">				 */</span><br><span class="line"><span class="css">				<span class="selector-tag">-webkit-filter</span>: <span class="selector-tag">contrast</span>(0<span class="selector-class">.5</span>);</span></span><br><span class="line">			&#125;</span><br><span class="line"><span class="css">			<span class="selector-class">.zjh6</span>&#123;</span></span><br><span class="line">				/* 使输入图像饱和。的值amount定义转换的比例。</span><br><span class="line">				值0%完全不饱和。值100%保持输入不变。其他值是效果的线性乘数。</span><br><span class="line">				100%允许超过的值，从而提供超饱和的结果。内插的lacuna值为1。 */</span><br><span class="line"><span class="css">				<span class="selector-tag">-webkit-filter</span><span class="selector-pseudo">:saturate(2)</span>;</span></span><br><span class="line">			&#125;</span><br><span class="line"><span class="css">			<span class="selector-class">.zjh7</span>&#123;</span></span><br><span class="line">				/* 反转输入图像中的样本。的值amount定义转换的比例。</span><br><span class="line">				值100%完全反转。</span><br><span class="line">				值0%保持输入不变。之间的值0%并且100%是在效果线性乘法器。</span><br><span class="line">				内插的lacuna值为0。 */</span><br><span class="line">				-webkit-filter: invert();</span><br><span class="line">			&#125;</span><br><span class="line"><span class="css">			<span class="selector-class">.zjh8</span>&#123;</span></span><br><span class="line">				/**</span><br><span class="line">				 * 在输入图像上应用色相旋转。</span><br><span class="line">				 的值angle定义将调整输入样本的色环周围的度数。</span><br><span class="line">				 值0deg 保持输入不变。内插的lacuna值为0。</span><br><span class="line">				 虽然没有最大值 上面的值的效果360deg回绕。</span><br><span class="line">				 */</span><br><span class="line"><span class="css">				<span class="selector-tag">-webkit-filter</span><span class="selector-pseudo">:hue-rotate(10deg)</span>;</span></span><br><span class="line">			&#125;</span><br><span class="line"><span class="css">			<span class="selector-class">.zjh9</span>&#123;</span></span><br><span class="line">				-webkit-filter: brightness(10) blur(1) grayscale(1);</span><br><span class="line">				transition: all 15s;</span><br><span class="line">			&#125;</span><br><span class="line"><span class="css">			<span class="selector-class">.zjh9</span><span class="selector-pseudo">:hover</span>&#123;</span></span><br><span class="line">				-webkit-filter: brightness(1) blur(0px) grayscale(1);</span><br><span class="line">			&#125;</span><br><span class="line">		<span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">img</span> <span class="attr">class</span>=<span class="string">"zjh"</span> <span class="attr">src</span>=<span class="string">"img/jiangxin.png"</span> &gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">img</span> <span class="attr">class</span>=<span class="string">"zjh2"</span> <span class="attr">src</span>=<span class="string">"img/jiangxin.png"</span> &gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">img</span> <span class="attr">class</span>=<span class="string">"zjh3"</span> <span class="attr">src</span>=<span class="string">"img/jiangxin.png"</span> &gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">img</span> <span class="attr">class</span>=<span class="string">"zjh4"</span> <span class="attr">src</span>=<span class="string">"img/jiangxin.png"</span> &gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">img</span> <span class="attr">class</span>=<span class="string">"zjh5"</span> <span class="attr">src</span>=<span class="string">"img/jiangxin.png"</span> &gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">img</span> <span class="attr">class</span>=<span class="string">"zjh6"</span> <span class="attr">src</span>=<span class="string">"img/jiangxin.png"</span> &gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">img</span> <span class="attr">class</span>=<span class="string">"zjh7"</span> <span class="attr">src</span>=<span class="string">"img/jiangxin.png"</span> &gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">img</span> <span class="attr">class</span>=<span class="string">"zjh8"</span> <span class="attr">src</span>=<span class="string">"img/jiangxin.png"</span> &gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">img</span> <span class="attr">class</span>=<span class="string">"zjh9"</span> <span class="attr">src</span>=<span class="string">"img/jiangxin.png"</span> &gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>CSS</tag>
      </tags>
  </entry>
  <entry>
    <title>Jsoup爬取京东和融e购商品列表</title>
    <url>/2020/04/25/Jsoup%E7%88%AC%E5%8F%96%E4%BA%AC%E4%B8%9C%E5%92%8C%E8%9E%8De%E8%B4%AD%E5%95%86%E5%93%81%E5%88%97%E8%A1%A8/</url>
    <content><![CDATA[<h2 id="1-新建maven项目，添加Jsoup的依赖"><a href="#1-新建maven项目，添加Jsoup的依赖" class="headerlink" title="1.新建maven项目，添加Jsoup的依赖"></a>1.新建maven项目，添加Jsoup的依赖</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>Jsoup-demo<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.jsoup/jsoup --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.jsoup<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jsoup<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.13.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.18.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="2-新建实体类，代码如下："><a href="#2-新建实体类，代码如下：" class="headerlink" title="2.新建实体类，代码如下："></a>2.新建实体类，代码如下：</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">package cn.lxcourse.jsoup.pojo;</span><br><span class="line"></span><br><span class="line">import lombok.AllArgsConstructor;</span><br><span class="line">import lombok.Data;</span><br><span class="line">import lombok.NoArgsConstructor;</span><br><span class="line"></span><br><span class="line">@Data</span><br><span class="line">@NoArgsConstructor</span><br><span class="line">@AllArgsConstructor</span><br><span class="line">public class Content &#123;</span><br><span class="line">    private String price;</span><br><span class="line">    private String title;</span><br><span class="line">    private String imgSrc;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="3-编写工具类，代码如下："><a href="#3-编写工具类，代码如下：" class="headerlink" title="3.编写工具类，代码如下："></a>3.编写工具类，代码如下：</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">package cn.lxcourse.jsoup.util;</span><br><span class="line"></span><br><span class="line">import cn.lxcourse.jsoup.pojo.Content;</span><br><span class="line">import org.jsoup.Jsoup;</span><br><span class="line">import org.jsoup.nodes.Document;</span><br><span class="line">import org.jsoup.nodes.Element;</span><br><span class="line">import org.jsoup.select.Elements;</span><br><span class="line"></span><br><span class="line">import java.net.URL;</span><br><span class="line">import java.util.ArrayList;</span><br><span class="line">import java.util.List;</span><br><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line"> * 爬虫工具</span><br><span class="line"> *&#x2F;</span><br><span class="line">public class JsoupUtils &#123;</span><br><span class="line"></span><br><span class="line">    &#x2F;**</span><br><span class="line">     * 爬取京东商品列表</span><br><span class="line">     * @param keywords</span><br><span class="line">     * @return</span><br><span class="line">     * @throws Exception</span><br><span class="line">     *&#x2F;</span><br><span class="line">    public static List&lt;Content&gt; getJDGoods(String keywords) throws Exception &#123;</span><br><span class="line">        String url &#x3D; &quot;https:&#x2F;&#x2F;search.jd.com&#x2F;Search?keyword&#x3D;Java&quot; + keywords;</span><br><span class="line">        Document document &#x3D; Jsoup.parse(new URL(url), 300000);</span><br><span class="line">        &#x2F;&#x2F;商品列表</span><br><span class="line">        Element j_goodsList &#x3D; document.getElementById(&quot;J_goodsList&quot;);</span><br><span class="line">        Elements glEtemElements &#x3D; j_goodsList.getElementsByClass(&quot;gl-item&quot;);</span><br><span class="line"></span><br><span class="line">        List&lt;Content&gt; list &#x3D; new ArrayList&lt;&gt;();</span><br><span class="line">        for (Element element : glEtemElements) &#123;</span><br><span class="line"></span><br><span class="line">            String imgSrc &#x3D; element.getElementsByTag(&quot;img&quot;).eq(0).attr(&quot;source-data-lazy-img&quot;);</span><br><span class="line">            String price &#x3D; element.getElementsByClass(&quot;p-price&quot;).eq(0).text();</span><br><span class="line">            String title &#x3D; element.getElementsByClass(&quot;p-name&quot;).eq(0).text();</span><br><span class="line"></span><br><span class="line">            Content content &#x3D; new Content();</span><br><span class="line">            content.setImgSrc(imgSrc);</span><br><span class="line">            content.setPrice(price);</span><br><span class="line">            content.setTitle(title);</span><br><span class="line"></span><br><span class="line">            list.add(content);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        return list;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &#x2F;**</span><br><span class="line">     * 爬取工行融e购商品列表</span><br><span class="line">     * @param keywords</span><br><span class="line">     * @return</span><br><span class="line">     * @throws Exception</span><br><span class="line">     *&#x2F;</span><br><span class="line">    public static List&lt;Content&gt; getRongYiGouGoods(String keywords) throws Exception &#123;</span><br><span class="line">        &#x2F;&#x2F;https:&#x2F;&#x2F;mall.icbc.com.cn&#x2F;searchproducts&#x2F;pv.jhtml?query&#x3D;java</span><br><span class="line">        String url &#x3D; &quot;https:&#x2F;&#x2F;mall.icbc.com.cn&#x2F;searchproducts&#x2F;pv.jhtml?query&#x3D;&quot; + keywords;</span><br><span class="line"></span><br><span class="line">        Document document &#x3D; Jsoup.parse(new URL(url), 30000);</span><br><span class="line">        Element ajaxQueryContent &#x3D; document.getElementById(&quot;ajaxQueryContent&quot;);</span><br><span class="line"></span><br><span class="line">        Elements liElements &#x3D; ajaxQueryContent.getElementsByTag(&quot;li&quot;);</span><br><span class="line"></span><br><span class="line">        List&lt;Content&gt; list &#x3D; new ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        for (Element el : liElements) &#123;</span><br><span class="line">            String src &#x3D; el.getElementsByTag(&quot;img&quot;).eq(0).attr(&quot;src&quot;);</span><br><span class="line">            String price &#x3D; el.getElementsByClass(&quot;p-price&quot;).eq(0).text();</span><br><span class="line">            String title &#x3D; el.getElementsByClass(&quot;p-name&quot;).eq(0).select(&quot;a&quot;).eq(0).attr(&quot;title&quot;);</span><br><span class="line">            Content content &#x3D; new Content();</span><br><span class="line">            content.setTitle(title);</span><br><span class="line">            content.setPrice(price);</span><br><span class="line">            content.setImgSrc(src);</span><br><span class="line">            list.add(content);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        return list;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) throws Exception &#123;</span><br><span class="line">        &#x2F;&#x2F;getJDGoods(&quot;Java&quot;).forEach(System.out::println);</span><br><span class="line">        getRongYiGouGoods(&quot;java&quot;).forEach(System.out::println);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo搭建blog</title>
    <url>/2020/03/31/hexo%E6%90%AD%E5%BB%BAblog/</url>
    <content><![CDATA[<h1 id="MacOS从零开始搭建hexo博客"><a href="#MacOS从零开始搭建hexo博客" class="headerlink" title="MacOS从零开始搭建hexo博客"></a>MacOS从零开始搭建hexo博客</h1><h2 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h2><ol>
<li>前期准备</li>
<li>安装hexo</li>
<li>生成SSH并添加到github</li>
<li>部署项目</li>
<li>上传到github</li>
<li>绑定个人域名</li>
<li>修改及配置主题</li>
</ol>
<hr>
<h2 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h2><pre><code>1. 安装git
2. 安装node.js
    查看node.js版本号
    node -v 
    npm -v
3.安装cnpm
    查看cnpm的版本号
    cnpm -v</code></pre><hr>
<h2 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">安装hexo命令：cnpm install -g hexo-cli</span><br><span class="line">查看hexo版本号：hexo -v</span><br><span class="line">初始化命令：hexo init blog</span><br><span class="line">解释一下：</span><br><span class="line">    node_modules：是依赖包</span><br><span class="line">    public：存放的是生成的页面</span><br><span class="line">    scaffolds：命令生成文章等的模板</span><br><span class="line">    <span class="built_in">source</span>：用命令创建的各种文章</span><br><span class="line">    themes：主题</span><br><span class="line">    _config.yml：整个博客的配置</span><br><span class="line">    db.json：<span class="built_in">source</span>解析所得到的</span><br><span class="line">    package.json：项目所需模块项目的配置信息</span><br></pre></td></tr></table></figure>
<hr>
<h2 id="创建github-repo"><a href="#创建github-repo" class="headerlink" title="创建github repo"></a>创建github repo</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">创建repo,名称为myname.github.io,myname与github用户名保持一致。</span><br><span class="line">git config --global user.name <span class="string">"my-name"</span></span><br><span class="line">git config --global user.email <span class="string">"my-email"</span></span><br><span class="line">ssh-keygen -t rsa -C <span class="string">"my-email"</span></span><br><span class="line">配置ssh,Settings -&gt; SSH and GPG keys -&gt; New SSH key</span><br></pre></td></tr></table></figure>
<hr>
<h2 id="打开blog项目，修改-config-yml配置文件"><a href="#打开blog项目，修改-config-yml配置文件" class="headerlink" title="打开blog项目，修改_config.yml配置文件"></a>打开blog项目，修改_config.yml配置文件</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repo: https://github.com/my-github-name/my-github-name.github.io.git</span><br><span class="line">  branch: master</span><br><span class="line"><span class="comment"># 进入blog目录，执行下列命令：</span></span><br><span class="line">hexo new <span class="string">"博客名称"</span></span><br><span class="line">hexo clean</span><br><span class="line">hexo generate</span><br><span class="line">hexo server</span><br><span class="line"><span class="comment">#打开浏览器，输入http://localhost:4000,可以看到博客效果了。</span></span><br></pre></td></tr></table></figure>
<hr>
<h2 id="上传到github"><a href="#上传到github" class="headerlink" title="上传到github"></a>上传到github</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">执行命令：npm install hexo-deployer-git --save</span><br><span class="line">然后执行：</span><br><span class="line">hexo clean</span><br><span class="line">hexo generate</span><br><span class="line">hexo deploy</span><br><span class="line">打开浏览器，输入http://my-github-name.github.io，查看效果。</span><br></pre></td></tr></table></figure>
<hr>
<h2 id="绑定个人域名"><a href="#绑定个人域名" class="headerlink" title="绑定个人域名"></a>绑定个人域名</h2><pre><code>在blog/source目录下新建名为CNAME的文件，文件中添加自己的域名，保存退出</code></pre><hr>
<h2 id="修改及配置主题"><a href="#修改及配置主题" class="headerlink" title="修改及配置主题"></a>修改及配置主题</h2><pre><code>以ayer为例，进入blog目录，执行命令：git clone https://github.com/Shen-Yu/hexo-theme-ayer.git themes/ayer
修改_config.yml,修改主题为：
    theme: ayer
然后执行：
hexo clean
hexo generate
hexo deploy    </code></pre><hr>
<h2 id="打开自己域名，查看效果"><a href="#打开自己域名，查看效果" class="headerlink" title="打开自己域名，查看效果"></a>打开自己域名，查看效果</h2>]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
</search>
